/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Invokers.ApiException;
import Model.CreateReportSubscriptionRequest;
import Model.InlineResponse4004;
import Model.PredefinedSubscriptionRequestBean;
import Model.ReportingV3ReportSubscriptionsGet200Response;
import Model.ReportingV3ReportSubscriptionsGet200ResponseSubscriptions;
import Model.Reportingv3ReportDownloadsGet400Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportSubscriptionsApi
 */
@Ignore
public class ReportSubscriptionsApiTest {

    private final ReportSubscriptionsApi api = new ReportSubscriptionsApi();

    
    /**
     * Create a Standard or Classic Subscription
     *
     * Create or update an already existing classic or standard subscription. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createStandardOrClassicSubscriptionTest() throws ApiException {
        PredefinedSubscriptionRequestBean predefinedSubscriptionRequestBean = null;
        String organizationId = null;
        api.createStandardOrClassicSubscription(predefinedSubscriptionRequestBean, organizationId);

        // TODO: test validations
    }
    
    /**
     * Create Report Subscription for a Report Name by Organization
     *
     * Create a report subscription for your organization. The report name must be unique. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubscriptionTest() throws ApiException {
        CreateReportSubscriptionRequest createReportSubscriptionRequest = null;
        String organizationId = null;
        api.createSubscription(createReportSubscriptionRequest, organizationId);

        // TODO: test validations
    }
    
    /**
     * Delete Subscription of a Report Name by Organization
     *
     * Delete a report subscription for your organization. You must know the unique name of the report you want to delete. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSubscriptionTest() throws ApiException {
        String reportName = null;
        String organizationId = null;
        api.deleteSubscription(reportName, organizationId);

        // TODO: test validations
    }
    
    /**
     * Get All Subscriptions
     *
     * View a summary of all report subscriptions. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSubscriptionsTest() throws ApiException {
        String organizationId = null;
        ReportingV3ReportSubscriptionsGet200Response response = api.getAllSubscriptions(organizationId);

        // TODO: test validations
    }
    
    /**
     * Get Subscription for Report Name
     *
     * View the details of a report subscription, such as the report format or report frequency, using the reportâ€™s unique name. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubscriptionTest() throws ApiException {
        String reportName = null;
        String organizationId = null;
        ReportingV3ReportSubscriptionsGet200ResponseSubscriptions response = api.getSubscription(reportName, organizationId);

        // TODO: test validations
    }
    
}

/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Model.Body;
import Model.InlineResponse2002;
import Model.InlineResponse2003;
import Model.InlineResponse2004;
import Model.InlineResponse202;
import Model.InlineResponse401;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BatchesApi
 */
@Ignore
public class BatchesApiTest {

    private final BatchesApi api = new BatchesApi();

    
    /**
     * Retrieve a Batch Report
     *
     * **Get Batch Report**&lt;br&gt;This resource accepts a batch id and returns: - The batch status. - The total number of accepted, rejected, updated records. - The total number of card association responses. - The billable quantities of:   - New Account Numbers (NAN)   - New Expiry Dates (NED)   - Account Closures (ACL)   - Contact Card Holders (CCH) - Source record information including token ids, masked card number, expiration dates &amp; card type. - Response record information including response code, reason, token ids, masked card number, expiration dates &amp; card type. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getBatchReportTest() throws Exception {
        String batchId = null;
        InlineResponse2004 response = api.getBatchReport(batchId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Batch Status
     *
     * **Get Batch Status**&lt;br&gt;This resource accepts a batch id and returns: - The batch status. - The total number of accepted, rejected, updated records. - The total number of card association responses. - The billable quantities of:   - New Account Numbers (NAN)   - New Expiry Dates (NED)   - Account Closures (ACL)   - Contact Card Holders (CCH) 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getBatchStatusTest() throws Exception {
        String batchId = null;
        InlineResponse2003 response = api.getBatchStatus(batchId);

        // TODO: test validations
    }
    
    /**
     * List Batches
     *
     * **List Batches**&lt;br&gt;This resource accepts a optional date range, record offset and limit, returning a paginated response of batches containing: - The batch id. - The batch status. - The batch created / modified dates. - The total number of accepted, rejected, updated records. - The total number of card association responses. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getBatchesListTest() throws Exception {
        Long offset = null;
        Long limit = null;
        String fromDate = null;
        String toDate = null;
        InlineResponse2002 response = api.getBatchesList(offset, limit, fromDate, toDate);

        // TODO: test validations
    }
    
    /**
     * Create a Batch
     *
     * **Create a Batch**&lt;br&gt;This resource accepts TMS tokens ids of a Customer, Payment Instrument or Instrument Identifier. &lt;br&gt; The card numbers for the supplied tokens ids are then sent to the relevant card associations to check for updates.&lt;br&gt;The following type of batches can be submitted: -  **oneOff** batch containing tokens id for Visa or MasterCard card numbers. - **amexRegistration** batch containing tokens id for Amex card numbers.  A batch id will be returned on a successful response which can be used to get the batch status and the batch report. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postBatchTest() throws Exception {
        Body body = null;
        InlineResponse202 response = api.postBatch(body);

        // TODO: test validations
    }
    
}

/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Model.CreatePaymentLinkRequest;
import Model.InvoicingV2InvoicesAllGet502Response;
import Model.PblPaymentLinksAllGet200Response;
import Model.PblPaymentLinksAllGet400Response;
import Model.PblPaymentLinksAllGet404Response;
import Model.PblPaymentLinksGet200Response;
import Model.PblPaymentLinksPost201Response;
import Model.UpdatePaymentLinkRequest;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentLinksApi
 */
@Ignore
public class PaymentLinksApiTest {

    private final PaymentLinksApi api = new PaymentLinksApi();

    
    /**
     * Create a Payment Link
     *
     * Create a new payment link.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createPaymentLinkTest() throws Exception {
        CreatePaymentLinkRequest createPaymentLinkRequest = null;
        PblPaymentLinksPost201Response response = api.createPaymentLink(createPaymentLinkRequest);

        // TODO: test validations
    }
    
    /**
     * Get a List of Payment Links
     *
     * Provides a (filtered) list of payment links that have been created in your account. You can filter the list based on the following status types:  - ACTIVE  - INACTIVE 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllPaymentLinksTest() throws Exception {
        Integer offset = null;
        Integer limit = null;
        String status = null;
        PblPaymentLinksAllGet200Response response = api.getAllPaymentLinks(offset, limit, status);

        // TODO: test validations
    }
    
    /**
     * Get Payment Link Details
     *
     * You can retrieve details of a specific payment link. For each payment transaction you can use the Transaction Details API to get more details on the payment transaction.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getPaymentLinkTest() throws Exception {
        String id = null;
        PblPaymentLinksGet200Response response = api.getPaymentLink(id);

        // TODO: test validations
    }
    
    /**
     * Update a Payment Link
     *
     * You can update all information except the payment link number until any payment is received for a payment link.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updatePaymentLinkTest() throws Exception {
        String id = null;
        UpdatePaymentLinkRequest updatePaymentLinkRequest = null;
        PblPaymentLinksPost201Response response = api.updatePaymentLink(id, updatePaymentLinkRequest);

        // TODO: test validations
    }
    
}

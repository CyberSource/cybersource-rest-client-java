/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Invokers.ApiException;
import Model.Body2;
import Model.Body3;
import Model.InlineResponse4001;
import Model.TmsV1InstrumentidentifiersPaymentinstrumentsGet200Response;
import Model.TmsV1PaymentinstrumentsGet200Response;
import Model.TmsV1PaymentinstrumentsPost201Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentInstrumentsApi
 */
@Ignore
public class PaymentInstrumentsApiTest {

    private final PaymentInstrumentsApi api = new PaymentInstrumentsApi();

    
    /**
     * Retrieve all Payment Instruments associated with an Instrument Identifier
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tmsV1InstrumentidentifiersTokenIdPaymentinstrumentsGetTest() throws ApiException {
        String profileId = null;
        String tokenId = null;
        String offset = null;
        String limit = null;
        TmsV1InstrumentidentifiersPaymentinstrumentsGet200Response response = api.tmsV1InstrumentidentifiersTokenIdPaymentinstrumentsGet(profileId, tokenId, offset, limit);

        // TODO: test validations
    }
    
    /**
     * Create a Payment Instrument
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tmsV1PaymentinstrumentsPostTest() throws ApiException {
        String profileId = null;
        Body2 body = null;
        TmsV1PaymentinstrumentsPost201Response response = api.tmsV1PaymentinstrumentsPost(profileId, body);

        // TODO: test validations
    }
    
    /**
     * Delete a Payment Instrument
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tmsV1PaymentinstrumentsTokenIdDeleteTest() throws ApiException {
        String profileId = null;
        String tokenId = null;
        api.tmsV1PaymentinstrumentsTokenIdDelete(profileId, tokenId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Payment Instrument
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tmsV1PaymentinstrumentsTokenIdGetTest() throws ApiException {
        String profileId = null;
        String tokenId = null;
        TmsV1PaymentinstrumentsGet200Response response = api.tmsV1PaymentinstrumentsTokenIdGet(profileId, tokenId);

        // TODO: test validations
    }
    
    /**
     * Update a Payment Instrument
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tmsV1PaymentinstrumentsTokenIdPatchTest() throws ApiException {
        String profileId = null;
        String tokenId = null;
        Body3 body = null;
        TmsV1PaymentinstrumentsGet200Response response = api.tmsV1PaymentinstrumentsTokenIdPatch(profileId, tokenId, body);

        // TODO: test validations
    }
    
}

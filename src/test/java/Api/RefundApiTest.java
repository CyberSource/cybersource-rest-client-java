/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Invokers.ApiException;
import Model.InlineResponse2005;
import Model.InlineResponse2013;
import Model.InlineResponse4003;
import Model.InlineResponse502;
import Model.RefundCaptureRequest;
import Model.RefundPaymentRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RefundApi
 */
@Ignore
public class RefundApiTest {

    private final RefundApi api = new RefundApi();

    
    /**
     * Retrieve a Refund
     *
     * Include the refund ID in the GET request to to retrieve the refund details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRefundTest() throws ApiException {
        String id = null;
        InlineResponse2005 response = api.getRefund(id);

        // TODO: test validations
    }
    
    /**
     * Refund a Capture
     *
     * Include the capture ID in the POST request to refund the captured amount. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void refundCaptureTest() throws ApiException {
        RefundCaptureRequest refundCaptureRequest = null;
        String id = null;
        InlineResponse2013 response = api.refundCapture(refundCaptureRequest, id);

        // TODO: test validations
    }
    
    /**
     * Refund a Payment
     *
     * Include the payment ID in the POST request to refund the payment amount. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void refundPaymentTest() throws ApiException {
        RefundPaymentRequest refundPaymentRequest = null;
        String id = null;
        InlineResponse2013 response = api.refundPayment(refundPaymentRequest, id);

        // TODO: test validations
    }
    
}

/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Model.AuthReversalRequest;
import Model.MitReversalRequest;
import Model.PtsV2PaymentsPost502Response;
import Model.PtsV2PaymentsReversalsPost201Response;
import Model.PtsV2PaymentsReversalsPost400Response;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReversalApi
 */
@Ignore
public class ReversalApiTest {

    private final ReversalApi api = new ReversalApi();

    
    /**
     * Process an Authorization Reversal
     *
     * Include the payment ID in the POST request to reverse the payment amount.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void authReversalTest() throws Exception {
        String id = null;
        AuthReversalRequest authReversalRequest = null;
        PtsV2PaymentsReversalsPost201Response response = api.authReversal(id, authReversalRequest);

        // TODO: test validations
    }
    
    /**
     * Timeout Reversal
     *
     * This is to reverse a previous payment that merchant does not receive a reply(Mostly due to Timeout). To use this feature/API, make sure to pass unique value to field - clientReferenceInformation -&gt; transactionId in [/pts/v2/payments](https://developer.cybersource.com/api-reference-assets/index.html#payments_payments) API call and use same transactionId in this API request payload to reverse the payment.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mitReversalTest() throws Exception {
        MitReversalRequest mitReversalRequest = null;
        PtsV2PaymentsReversalsPost201Response response = api.mitReversal(mitReversalRequest);

        // TODO: test validations
    }
    
}

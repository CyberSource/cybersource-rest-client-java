/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import org.joda.time.DateTime;
import org.junit.Ignore;
import org.junit.Test;

import Invokers.ApiException;
import Model.ReportingV3ReportsGet200Response;
import Model.ReportingV3ReportsIdGet200Response;
import Model.RequestBody1;

/**
 * API tests for ReportsApi
 */
@Ignore
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    
    /**
     * Create Adhoc Report
     *
     * Create one time report
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReportTest() throws ApiException {
        RequestBody1 requestBody = null;
        api.createReport(requestBody, null);

        // TODO: test validations
    }
    
    /**
     * Get Report based on reportId
     *
     * ReportId is mandatory input
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportByReportIdTest() throws ApiException {
        String reportId = null;
        String organizationId = null;
        ReportingV3ReportsIdGet200Response response = api.getReportByReportId(reportId, organizationId, null);

        // TODO: test validations
    }
    
    /**
     * Retrieve available reports
     *
     * Retrieve list of available reports
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchReportsTest() throws ApiException {
        DateTime startTime = null;
        DateTime endTime = null;
        String timeQueryType = null;
        String organizationId = null;
        String reportMimeType = null;
        String reportFrequency = null;
        String reportName = null;
        Integer reportDefinitionId = null;
        String reportStatus = null;
        ReportingV3ReportsGet200Response response = api.searchReports(startTime, endTime, timeQueryType, organizationId, reportMimeType, reportFrequency, reportName, reportDefinitionId, reportStatus, null);

        // TODO: test validations
    }
    
}

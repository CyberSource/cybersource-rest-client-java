/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Invokers.ApiException;
import Model.InlineResponse400;
import Model.PatchCustomerShippingAddressRequest;
import Model.PostCustomerShippingAddressRequest;
import Model.ShippingAddressListForCustomer;
import Model.Tmsv2customersEmbeddedDefaultShippingAddress;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerShippingAddressApi
 */
@Ignore
public class CustomerShippingAddressApiTest {

    private final CustomerShippingAddressApi api = new CustomerShippingAddressApi();

    
    /**
     * Delete a Customer Shipping Address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerShippingAddressTest() throws ApiException {
        String customerTokenId = null;
        String shippingAddressTokenId = null;
        String profileId = null;
        api.deleteCustomerShippingAddress(customerTokenId, shippingAddressTokenId, profileId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Customer Shipping Address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerShippingAddressTest() throws ApiException {
        String customerTokenId = null;
        String shippingAddressTokenId = null;
        String profileId = null;
        Tmsv2customersEmbeddedDefaultShippingAddress response = api.getCustomerShippingAddress(customerTokenId, shippingAddressTokenId, profileId);

        // TODO: test validations
    }
    
    /**
     * List Shipping Addresses for a Customer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerShippingAddressesListTest() throws ApiException {
        String customerTokenId = null;
        String profileId = null;
        Long offset = null;
        Long limit = null;
        ShippingAddressListForCustomer response = api.getCustomerShippingAddressesList(customerTokenId, profileId, offset, limit);

        // TODO: test validations
    }
    
    /**
     * Update a Customer Shipping Address
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchCustomersShippingAddressTest() throws ApiException {
        String customerTokenId = null;
        String shippingAddressTokenId = null;
        PatchCustomerShippingAddressRequest patchCustomerShippingAddressRequest = null;
        String profileId = null;
        String ifMatch = null;
        Tmsv2customersEmbeddedDefaultShippingAddress response = api.patchCustomersShippingAddress(customerTokenId, shippingAddressTokenId, patchCustomerShippingAddressRequest, profileId, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Create a Customer Shipping Address
     *
     * Include an existing TMS Customer token id in the request URI. * A Customer token can be created by calling: **POST *_/tms/v2/customers*** 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCustomerShippingAddressTest() throws ApiException {
        String customerTokenId = null;
        PostCustomerShippingAddressRequest postCustomerShippingAddressRequest = null;
        String profileId = null;
        Tmsv2customersEmbeddedDefaultShippingAddress response = api.postCustomerShippingAddress(customerTokenId, postCustomerShippingAddressRequest, profileId);

        // TODO: test validations
    }
    
}

/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import org.joda.time.DateTime;
import java.io.File;
import org.joda.time.LocalDate;
import Model.Model400UploadBatchFileResponse;
import Model.PtsV1TransactionBatchesGet200Response;
import Model.PtsV1TransactionBatchesGet400Response;
import Model.PtsV1TransactionBatchesGet500Response;
import Model.PtsV1TransactionBatchesIdGet200Response;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionBatchesApi
 */
@Ignore
public class TransactionBatchesApiTest {

    private final TransactionBatchesApi api = new TransactionBatchesApi();

    
    /**
     * Get Transaction Details for a given Batch Id
     *
     * Provides real-time detailed status information about the transactions that you previously uploaded in the Business Center or processed with the Offline Transaction File Submission service. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTransactionBatchDetailsTest() throws Exception {
        String id = null;
        LocalDate uploadDate = null;
        String status = null;
        api.getTransactionBatchDetails(id, uploadDate, status);

        // TODO: test validations
    }
    
    /**
     * Get Individual Batch File
     *
     * This API provides details like upload date, completion date, transaction count and accepted and rejected transaction count of the individual batch file using the batch id
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTransactionBatchIdTest() throws Exception {
        String id = null;
        PtsV1TransactionBatchesIdGet200Response response = api.getTransactionBatchId(id);

        // TODO: test validations
    }
    
    /**
     * Get a List of Batch Files
     *
     * Provide the date and time search range to get a list of Batch Files ready for settlement
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTransactionBatchesTest() throws Exception {
        DateTime startTime = null;
        DateTime endTime = null;
        PtsV1TransactionBatchesGet200Response response = api.getTransactionBatches(startTime, endTime);

        // TODO: test validations
    }
    
    /**
     * Upload a Batch File
     *
     * This endpoint enables the upload of a batch file containing transactions for processing.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void uploadTransactionBatchTest() throws Exception {
        File file = null;
        api.uploadTransactionBatch(file);

        // TODO: test validations
    }
    
}

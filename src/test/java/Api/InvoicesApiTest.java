/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Invokers.ApiException;
import Model.CreateInvoiceRequest;
import Model.InvoicingV2InvoicesAllGet200Response;
import Model.InvoicingV2InvoicesAllGet400Response;
import Model.InvoicingV2InvoicesAllGet404Response;
import Model.InvoicingV2InvoicesAllGet502Response;
import Model.InvoicingV2InvoicesGet200Response;
import Model.InvoicingV2InvoicesPost201Response;
import Model.InvoicingV2InvoicesPost202Response;
import Model.UpdateInvoiceRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvoicesApi
 */
@Ignore
public class InvoicesApiTest {

    private final InvoicesApi api = new InvoicesApi();

    
    /**
     * Create a New Invoice
     *
     * Create a new invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createInvoiceTest() throws ApiException {
        CreateInvoiceRequest createInvoiceRequest = null;
        InvoicingV2InvoicesPost201Response response = api.createInvoice(createInvoiceRequest);

        // TODO: test validations
    }
    
    /**
     * Get a List of Invoices
     *
     * Get a list of invoices.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllInvoicesTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        String status = null;
        InvoicingV2InvoicesAllGet200Response response = api.getAllInvoices(offset, limit, status);

        // TODO: test validations
    }
    
    /**
     * Get Invoice Details
     *
     * Get the details of a specific invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInvoiceTest() throws ApiException {
        String id = null;
        InvoicingV2InvoicesGet200Response response = api.getInvoice(id);

        // TODO: test validations
    }
    
    /**
     * Cancel an Invoice
     *
     * Cancel an invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void performCancelActionTest() throws ApiException {
        String id = null;
        InvoicingV2InvoicesPost201Response response = api.performCancelAction(id);

        // TODO: test validations
    }
    
    /**
     * Send an Invoice
     *
     * Send an invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void performSendActionTest() throws ApiException {
        String id = null;
        InvoicingV2InvoicesPost201Response response = api.performSendAction(id);

        // TODO: test validations
    }
    
    /**
     * Update an Invoice
     *
     * Update an invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInvoiceTest() throws ApiException {
        String id = null;
        UpdateInvoiceRequest updateInvoiceRequest = null;
        InvoicingV2InvoicesPost201Response response = api.updateInvoice(id, updateInvoiceRequest);

        // TODO: test validations
    }
    
}

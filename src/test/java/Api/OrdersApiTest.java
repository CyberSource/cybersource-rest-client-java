/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Api;

import Model.CreateOrderRequest;
import Model.PtsV2CreateOrderPost201Response;
import Model.PtsV2CreateOrderPost400Response;
import Model.PtsV2PaymentsPost502Response;
import Model.PtsV2UpdateOrderPatch201Response;
import Model.UpdateOrderRequest;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrdersApi
 */
@Ignore
public class OrdersApiTest {

    private final OrdersApi api = new OrdersApi();

    
    /**
     * Create an Order
     *
     * A create order request enables you to send the itemized details along with the order. This API can be used by merchants initiating their transactions with the create order API.  
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createOrderTest() throws Exception {
        CreateOrderRequest createOrderRequest = null;
        PtsV2CreateOrderPost201Response response = api.createOrder(createOrderRequest);

        // TODO: test validations
    }
    
    /**
     * Update an Order
     *
     * This API can be used in two flavours - for updating the order as well as saving the order. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateOrderTest() throws Exception {
        String id = null;
        UpdateOrderRequest updateOrderRequest = null;
        PtsV2UpdateOrderPatch201Response response = api.updateOrder(id, updateOrderRequest);

        // TODO: test validations
    }
    
}

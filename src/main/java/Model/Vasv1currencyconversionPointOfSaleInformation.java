/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Vasv1currencyconversionPointOfSaleInformation
 */

public class Vasv1currencyconversionPointOfSaleInformation {
  @SerializedName("terminalId")
  private String terminalId = null;

  @SerializedName("entryMode")
  private String entryMode = null;

  public Vasv1currencyconversionPointOfSaleInformation terminalId(String terminalId) {
    this.terminalId = terminalId;
    return this;
  }

   /**
   * Identifier for the terminal used by the merchant&#39;s to process the transaction.
   * @return terminalId
  **/
  @ApiModelProperty(value = "Identifier for the terminal used by the merchant's to process the transaction.")
  public String getTerminalId() {
    return terminalId;
  }

  public void setTerminalId(String terminalId) {
    this.terminalId = terminalId;
  }

  public Vasv1currencyconversionPointOfSaleInformation entryMode(String entryMode) {
    this.entryMode = entryMode;
    return this;
  }

   /**
   * Valid Values: - &#39;KEYED&#39; - &#39;SWIPED&#39; - &#39;CONTACT&#39; - &#39;CONTACTLESS&#39;  How the transaction information was captured. Optional. &#x60;KEYED&#x60; can refer to MOTO on a terminal, MOTO on a virtual terminal, or eCommerce. All other options refer to card holder present transactions. Optional. 
   * @return entryMode
  **/
  @ApiModelProperty(value = "Valid Values: - 'KEYED' - 'SWIPED' - 'CONTACT' - 'CONTACTLESS'  How the transaction information was captured. Optional. `KEYED` can refer to MOTO on a terminal, MOTO on a virtual terminal, or eCommerce. All other options refer to card holder present transactions. Optional. ")
  public String getEntryMode() {
    return entryMode;
  }

  public void setEntryMode(String entryMode) {
    this.entryMode = entryMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vasv1currencyconversionPointOfSaleInformation vasv1currencyconversionPointOfSaleInformation = (Vasv1currencyconversionPointOfSaleInformation) o;
    return Objects.equals(this.terminalId, vasv1currencyconversionPointOfSaleInformation.terminalId) &&
        Objects.equals(this.entryMode, vasv1currencyconversionPointOfSaleInformation.entryMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(terminalId, entryMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vasv1currencyconversionPointOfSaleInformation {\n");
    
    if (terminalId != null) sb.append("    terminalId: ").append(toIndentedString(terminalId)).append("\n");
    if (entryMode != null) sb.append("    entryMode: ").append(toIndentedString(entryMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


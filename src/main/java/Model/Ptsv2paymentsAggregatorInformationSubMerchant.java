/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Ptsv2paymentsAggregatorInformationSubMerchant
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-31T18:13:53.731+05:30")
public class Ptsv2paymentsAggregatorInformationSubMerchant {
  @SerializedName("cardAcceptorId")
  private String cardAcceptorId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("address1")
  private String address1 = null;

  @SerializedName("locality")
  private String locality = null;

  @SerializedName("administrativeArea")
  private String administrativeArea = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  public Ptsv2paymentsAggregatorInformationSubMerchant cardAcceptorId(String cardAcceptorId) {
    this.cardAcceptorId = cardAcceptorId;
    return this;
  }

   /**
   * Unique identifier assigned by the payment card company to the sub-merchant.
   * @return cardAcceptorId
  **/
  @ApiModelProperty(value = "Unique identifier assigned by the payment card company to the sub-merchant.")
  public String getCardAcceptorId() {
    return cardAcceptorId;
  }

  public void setCardAcceptorId(String cardAcceptorId) {
    this.cardAcceptorId = cardAcceptorId;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Sub-merchant’s business name.
   * @return name
  **/
  @ApiModelProperty(value = "Sub-merchant’s business name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant address1(String address1) {
    this.address1 = address1;
    return this;
  }

   /**
   * First line of the sub-merchant’s street address.
   * @return address1
  **/
  @ApiModelProperty(value = "First line of the sub-merchant’s street address.")
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant locality(String locality) {
    this.locality = locality;
    return this;
  }

   /**
   * Sub-merchant’s city.
   * @return locality
  **/
  @ApiModelProperty(value = "Sub-merchant’s city.")
  public String getLocality() {
    return locality;
  }

  public void setLocality(String locality) {
    this.locality = locality;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant administrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
    return this;
  }

   /**
   * Sub-merchant’s state or province. Use the State, Province, and Territory Codes for the United States and Canada. 
   * @return administrativeArea
  **/
  @ApiModelProperty(value = "Sub-merchant’s state or province. Use the State, Province, and Territory Codes for the United States and Canada. ")
  public String getAdministrativeArea() {
    return administrativeArea;
  }

  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Sub-merchant’s region. Example &#x60;NE&#x60; indicates that the sub-merchant is in the northeast region.
   * @return region
  **/
  @ApiModelProperty(value = "Sub-merchant’s region. Example `NE` indicates that the sub-merchant is in the northeast region.")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Partial postal code for the sub-merchant’s address.
   * @return postalCode
  **/
  @ApiModelProperty(value = "Partial postal code for the sub-merchant’s address.")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Sub-merchant’s country. Use the two-character ISO Standard Country Codes.
   * @return country
  **/
  @ApiModelProperty(value = "Sub-merchant’s country. Use the two-character ISO Standard Country Codes.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Sub-merchant’s email address.  **Maximum length for processors**   - American Express Direct: 40  - CyberSource through VisaNet: 40  - FDC Compass: 40  - FDC Nashville Global: 19 
   * @return email
  **/
  @ApiModelProperty(value = "Sub-merchant’s email address.  **Maximum length for processors**   - American Express Direct: 40  - CyberSource through VisaNet: 40  - FDC Compass: 40  - FDC Nashville Global: 19 ")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Ptsv2paymentsAggregatorInformationSubMerchant phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Sub-merchant’s telephone number.  **Maximum length for procesors**   - American Express Direct: 20  - CyberSource through VisaNet: 20  - FDC Compass: 13  - FDC Nashville Global: 10 
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "Sub-merchant’s telephone number.  **Maximum length for procesors**   - American Express Direct: 20  - CyberSource through VisaNet: 20  - FDC Compass: 13  - FDC Nashville Global: 10 ")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2paymentsAggregatorInformationSubMerchant ptsv2paymentsAggregatorInformationSubMerchant = (Ptsv2paymentsAggregatorInformationSubMerchant) o;
    return Objects.equals(this.cardAcceptorId, ptsv2paymentsAggregatorInformationSubMerchant.cardAcceptorId) &&
        Objects.equals(this.name, ptsv2paymentsAggregatorInformationSubMerchant.name) &&
        Objects.equals(this.address1, ptsv2paymentsAggregatorInformationSubMerchant.address1) &&
        Objects.equals(this.locality, ptsv2paymentsAggregatorInformationSubMerchant.locality) &&
        Objects.equals(this.administrativeArea, ptsv2paymentsAggregatorInformationSubMerchant.administrativeArea) &&
        Objects.equals(this.region, ptsv2paymentsAggregatorInformationSubMerchant.region) &&
        Objects.equals(this.postalCode, ptsv2paymentsAggregatorInformationSubMerchant.postalCode) &&
        Objects.equals(this.country, ptsv2paymentsAggregatorInformationSubMerchant.country) &&
        Objects.equals(this.email, ptsv2paymentsAggregatorInformationSubMerchant.email) &&
        Objects.equals(this.phoneNumber, ptsv2paymentsAggregatorInformationSubMerchant.phoneNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardAcceptorId, name, address1, locality, administrativeArea, region, postalCode, country, email, phoneNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2paymentsAggregatorInformationSubMerchant {\n");
    
    sb.append("    cardAcceptorId: ").append(toIndentedString(cardAcceptorId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


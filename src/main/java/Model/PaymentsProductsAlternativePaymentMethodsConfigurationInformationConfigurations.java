/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations
 */

public class PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations {
  @SerializedName("merchantCategoryCode")
  private String merchantCategoryCode = null;

  @SerializedName("processors")
  private Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors> processors = null;

  public PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations merchantCategoryCode(String merchantCategoryCode) {
    this.merchantCategoryCode = merchantCategoryCode;
    return this;
  }

   /**
   * Merchant Category Code (MCC) is a four-digit number assigned to a business by credit card companies when the business first starts accepting credit cards as a form of payment. The MCC is used to classify the business by the type of goods or services it provides. 
   * @return merchantCategoryCode
  **/
  @ApiModelProperty(value = "Merchant Category Code (MCC) is a four-digit number assigned to a business by credit card companies when the business first starts accepting credit cards as a form of payment. The MCC is used to classify the business by the type of goods or services it provides. ")
  public String getMerchantCategoryCode() {
    return merchantCategoryCode;
  }

  public void setMerchantCategoryCode(String merchantCategoryCode) {
    this.merchantCategoryCode = merchantCategoryCode;
  }

  public PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations processors(Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors> processors) {
    this.processors = processors;
    return this;
  }

  public PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations putProcessorsItem(String key, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors processorsItem) {
    if (this.processors == null) {
      this.processors = new HashMap<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors>();
    }
    this.processors.put(key, processorsItem);
    return this;
  }

   /**
   * This is a map. The allowed keys are below. Value should be an object containing a sole boolean property - enabled. &lt;table&gt;   &lt;tr&gt;     &lt;td&gt;klarna&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;     &lt;td&gt;payPal&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;     &lt;td&gt;alipay&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;     &lt;td&gt;bancontact&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;     &lt;td&gt;giropay&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;     &lt;td&gt;ideal&lt;/td&gt;   &lt;/tr&gt; &lt;/table&gt; 
   * @return processors
  **/
  @ApiModelProperty(value = "This is a map. The allowed keys are below. Value should be an object containing a sole boolean property - enabled. <table>   <tr>     <td>klarna</td>   </tr>   <tr>     <td>payPal</td>   </tr>   <tr>     <td>alipay</td>   </tr>   <tr>     <td>bancontact</td>   </tr>   <tr>     <td>giropay</td>   </tr>   <tr>     <td>ideal</td>   </tr> </table> ")
  public Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors> getProcessors() {
    return processors;
  }

  public void setProcessors(Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors> processors) {
    this.processors = processors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations paymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations = (PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations) o;
    return Objects.equals(this.merchantCategoryCode, paymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations.merchantCategoryCode) &&
        Objects.equals(this.processors, paymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations.processors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantCategoryCode, processors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurations {\n");
    
    if (merchantCategoryCode != null) sb.append("    merchantCategoryCode: ").append(toIndentedString(merchantCategoryCode)).append("\n");
    if (processors != null) sb.append("    processors: ").append(toIndentedString(processors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


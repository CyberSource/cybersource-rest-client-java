/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.Ptsv2paymentsWatchlistScreeningInformationWeights;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Ptsv2paymentsWatchlistScreeningInformation
 */

public class Ptsv2paymentsWatchlistScreeningInformation {
  @SerializedName("addressOperator")
  private String addressOperator = null;

  @SerializedName("weights")
  private Ptsv2paymentsWatchlistScreeningInformationWeights weights = null;

  @SerializedName("sanctionLists")
  private List<String> sanctionLists = null;

  @SerializedName("proceedOnMatch")
  private Boolean proceedOnMatch = null;

  public Ptsv2paymentsWatchlistScreeningInformation addressOperator(String addressOperator) {
    this.addressOperator = addressOperator;
    return this;
  }

   /**
   * Parts of the customer&#39;s information that must match with an entry in the DPL (denied parties list) before a match occurs. This field can contain one of the following values: - AND: (default) The customer&#39;s name or company and the customer&#39;s address must appear in the database. - OR: The customer&#39;s name must appear in the database. - IGNORE: You want the service to detect a match only of the customer&#39;s name or company but not of the address. 
   * @return addressOperator
  **/
  @ApiModelProperty(value = "Parts of the customer's information that must match with an entry in the DPL (denied parties list) before a match occurs. This field can contain one of the following values: - AND: (default) The customer's name or company and the customer's address must appear in the database. - OR: The customer's name must appear in the database. - IGNORE: You want the service to detect a match only of the customer's name or company but not of the address. ")
  public String getAddressOperator() {
    return addressOperator;
  }

  public void setAddressOperator(String addressOperator) {
    this.addressOperator = addressOperator;
  }

  public Ptsv2paymentsWatchlistScreeningInformation weights(Ptsv2paymentsWatchlistScreeningInformationWeights weights) {
    this.weights = weights;
    return this;
  }

   /**
   * Get weights
   * @return weights
  **/
  @ApiModelProperty(value = "")
  public Ptsv2paymentsWatchlistScreeningInformationWeights getWeights() {
    return weights;
  }

  public void setWeights(Ptsv2paymentsWatchlistScreeningInformationWeights weights) {
    this.weights = weights;
  }

  public Ptsv2paymentsWatchlistScreeningInformation sanctionLists(List<String> sanctionLists) {
    this.sanctionLists = sanctionLists;
    return this;
  }

  public Ptsv2paymentsWatchlistScreeningInformation addSanctionListsItem(String sanctionListsItem) {
    if (this.sanctionLists == null) {
      this.sanctionLists = new ArrayList<String>();
    }
    this.sanctionLists.add(sanctionListsItem);
    return this;
  }

   /**
   * Use this field to specify which list(s) you want checked with the request. The reply will include the list name as well as the response data. To check against multiple lists, enter multiple list codes separated by a caret (^). For more information, see \&quot;Restricted and Denied Parties List,\&quot; page 68. 
   * @return sanctionLists
  **/
  @ApiModelProperty(value = "Use this field to specify which list(s) you want checked with the request. The reply will include the list name as well as the response data. To check against multiple lists, enter multiple list codes separated by a caret (^). For more information, see \"Restricted and Denied Parties List,\" page 68. ")
  public List<String> getSanctionLists() {
    return sanctionLists;
  }

  public void setSanctionLists(List<String> sanctionLists) {
    this.sanctionLists = sanctionLists;
  }

  public Ptsv2paymentsWatchlistScreeningInformation proceedOnMatch(Boolean proceedOnMatch) {
    this.proceedOnMatch = proceedOnMatch;
    return this;
  }

   /**
   * Indicates whether the transaction should proceed if there is a match. Possible values: - &#x60;true&#x60;: Transaction proceeds even when match is found in the Denied Parties List. The match is noted in the response. - &#x60;false&#x60;: Normal watchlist screening behavior occurs. (Transaction stops if a match to DPL occurs. Transaction proceeds if no match.) 
   * @return proceedOnMatch
  **/
  @ApiModelProperty(value = "Indicates whether the transaction should proceed if there is a match. Possible values: - `true`: Transaction proceeds even when match is found in the Denied Parties List. The match is noted in the response. - `false`: Normal watchlist screening behavior occurs. (Transaction stops if a match to DPL occurs. Transaction proceeds if no match.) ")
  public Boolean getProceedOnMatch() {
    return proceedOnMatch;
  }

  public void setProceedOnMatch(Boolean proceedOnMatch) {
    this.proceedOnMatch = proceedOnMatch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2paymentsWatchlistScreeningInformation ptsv2paymentsWatchlistScreeningInformation = (Ptsv2paymentsWatchlistScreeningInformation) o;
    return Objects.equals(this.addressOperator, ptsv2paymentsWatchlistScreeningInformation.addressOperator) &&
        Objects.equals(this.weights, ptsv2paymentsWatchlistScreeningInformation.weights) &&
        Objects.equals(this.sanctionLists, ptsv2paymentsWatchlistScreeningInformation.sanctionLists) &&
        Objects.equals(this.proceedOnMatch, ptsv2paymentsWatchlistScreeningInformation.proceedOnMatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressOperator, weights, sanctionLists, proceedOnMatch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2paymentsWatchlistScreeningInformation {\n");
    
    sb.append("    addressOperator: ").append(toIndentedString(addressOperator)).append("\n");
    sb.append("    weights: ").append(toIndentedString(weights)).append("\n");
    sb.append("    sanctionLists: ").append(toIndentedString(sanctionLists)).append("\n");
    sb.append("    proceedOnMatch: ").append(toIndentedString(proceedOnMatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


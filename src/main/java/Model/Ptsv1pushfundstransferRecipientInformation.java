/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Ptsv1pushfundstransferRecipientInformationPaymentInformation;
import Model.Ptsv1pushfundstransferRecipientInformationPersonalIdentification;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Ptsv1pushfundstransferRecipientInformation
 */

public class Ptsv1pushfundstransferRecipientInformation {
  @SerializedName("paymentInformation")
  private Ptsv1pushfundstransferRecipientInformationPaymentInformation paymentInformation = null;

  @SerializedName("address1")
  private String address1 = null;

  @SerializedName("address2")
  private String address2 = null;

  @SerializedName("locality")
  private String locality = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("administrativeArea")
  private String administrativeArea = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("middleName")
  private String middleName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("personalIdentification")
  private Ptsv1pushfundstransferRecipientInformationPersonalIdentification personalIdentification = null;

  @SerializedName("buildingNumber")
  private String buildingNumber = null;

  @SerializedName("streetName")
  private String streetName = null;

  @SerializedName("type")
  private String type = null;

  public Ptsv1pushfundstransferRecipientInformation paymentInformation(Ptsv1pushfundstransferRecipientInformationPaymentInformation paymentInformation) {
    this.paymentInformation = paymentInformation;
    return this;
  }

   /**
   * Get paymentInformation
   * @return paymentInformation
  **/
  @ApiModelProperty(value = "")
  public Ptsv1pushfundstransferRecipientInformationPaymentInformation getPaymentInformation() {
    return paymentInformation;
  }

  public void setPaymentInformation(Ptsv1pushfundstransferRecipientInformationPaymentInformation paymentInformation) {
    this.paymentInformation = paymentInformation;
  }

  public Ptsv1pushfundstransferRecipientInformation address1(String address1) {
    this.address1 = address1;
    return this;
  }

   /**
   * First line of the recipient&#39;s address. Required for card payments 
   * @return address1
  **/
  @ApiModelProperty(value = "First line of the recipient's address. Required for card payments ")
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public Ptsv1pushfundstransferRecipientInformation address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * Second line of the recipient&#39;s address 
   * @return address2
  **/
  @ApiModelProperty(value = "Second line of the recipient's address ")
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public Ptsv1pushfundstransferRecipientInformation locality(String locality) {
    this.locality = locality;
    return this;
  }

   /**
   * Recipient city. 
   * @return locality
  **/
  @ApiModelProperty(value = "Recipient city. ")
  public String getLocality() {
    return locality;
  }

  public void setLocality(String locality) {
    this.locality = locality;
  }

  public Ptsv1pushfundstransferRecipientInformation postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Recipient postal code.   For USA, this must be a valid value of 5 digits or 5 digits hyphen 4 digits, for example &#39;63368&#39;, &#39;63368-5555&#39;. For other regions, this can be alphanumeric, length 1-10.  Mandatory for card payments. 
   * @return postalCode
  **/
  @ApiModelProperty(value = "Recipient postal code.   For USA, this must be a valid value of 5 digits or 5 digits hyphen 4 digits, for example '63368', '63368-5555'. For other regions, this can be alphanumeric, length 1-10.  Mandatory for card payments. ")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Ptsv1pushfundstransferRecipientInformation administrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
    return this;
  }

   /**
   * The recipient&#39;s province, state or territory. Conditional, required if recipient&#39;s country is USA or CAN. Must be an ISO 3166-2 uppercase alpha 2 or 3 character country subdivision code. For example, Missouri is MO.  See https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf  Required for card payments. 
   * @return administrativeArea
  **/
  @ApiModelProperty(value = "The recipient's province, state or territory. Conditional, required if recipient's country is USA or CAN. Must be an ISO 3166-2 uppercase alpha 2 or 3 character country subdivision code. For example, Missouri is MO.  See https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf  Required for card payments. ")
  public String getAdministrativeArea() {
    return administrativeArea;
  }

  public void setAdministrativeArea(String administrativeArea) {
    this.administrativeArea = administrativeArea;
  }

  public Ptsv1pushfundstransferRecipientInformation country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Recipient country code. Use the ISO Standard Alpha Country Codes.  https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf 
   * @return country
  **/
  @ApiModelProperty(value = "Recipient country code. Use the ISO Standard Alpha Country Codes.  https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf ")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Ptsv1pushfundstransferRecipientInformation firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of recipient. 
   * @return firstName
  **/
  @ApiModelProperty(value = "First name of recipient. ")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Ptsv1pushfundstransferRecipientInformation middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Sender&#39;s middle name. This field is a passthrough, which means that CyberSource does not verify the value or modify it in any way before sending it to the processor. If the field is not required for the transaction, CyberSource does not forward it to the processor. 
   * @return middleName
  **/
  @ApiModelProperty(value = "Sender's middle name. This field is a passthrough, which means that CyberSource does not verify the value or modify it in any way before sending it to the processor. If the field is not required for the transaction, CyberSource does not forward it to the processor. ")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public Ptsv1pushfundstransferRecipientInformation lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of recipient. 
   * @return lastName
  **/
  @ApiModelProperty(value = "Last name of recipient. ")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Ptsv1pushfundstransferRecipientInformation phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Customer&#39;s phone number.  It is recommended that you include the country code when the order is from outside the U.S. 
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "Customer's phone number.  It is recommended that you include the country code when the order is from outside the U.S. ")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Ptsv1pushfundstransferRecipientInformation email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Customer&#39;s email address, including the full domain name. 
   * @return email
  **/
  @ApiModelProperty(value = "Customer's email address, including the full domain name. ")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Ptsv1pushfundstransferRecipientInformation personalIdentification(Ptsv1pushfundstransferRecipientInformationPersonalIdentification personalIdentification) {
    this.personalIdentification = personalIdentification;
    return this;
  }

   /**
   * Get personalIdentification
   * @return personalIdentification
  **/
  @ApiModelProperty(value = "")
  public Ptsv1pushfundstransferRecipientInformationPersonalIdentification getPersonalIdentification() {
    return personalIdentification;
  }

  public void setPersonalIdentification(Ptsv1pushfundstransferRecipientInformationPersonalIdentification personalIdentification) {
    this.personalIdentification = personalIdentification;
  }

  public Ptsv1pushfundstransferRecipientInformation buildingNumber(String buildingNumber) {
    this.buildingNumber = buildingNumber;
    return this;
  }

   /**
   * Building number in the street address.  For example, if the street address is: Rua da Quitanda 187 then the building number is 187.  Applicable to domestic Colombia transactions only. 
   * @return buildingNumber
  **/
  @ApiModelProperty(value = "Building number in the street address.  For example, if the street address is: Rua da Quitanda 187 then the building number is 187.  Applicable to domestic Colombia transactions only. ")
  public String getBuildingNumber() {
    return buildingNumber;
  }

  public void setBuildingNumber(String buildingNumber) {
    this.buildingNumber = buildingNumber;
  }

  public Ptsv1pushfundstransferRecipientInformation streetName(String streetName) {
    this.streetName = streetName;
    return this;
  }

   /**
   * This field contains the street name of the recipient&#39;s address.  Applicable to domestic Colombia transactions only. 
   * @return streetName
  **/
  @ApiModelProperty(value = "This field contains the street name of the recipient's address.  Applicable to domestic Colombia transactions only. ")
  public String getStreetName() {
    return streetName;
  }

  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }

  public Ptsv1pushfundstransferRecipientInformation type(String type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;B&#x60; for Business or &#x60;I&#x60; for individual. 
   * @return type
  **/
  @ApiModelProperty(value = "`B` for Business or `I` for individual. ")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv1pushfundstransferRecipientInformation ptsv1pushfundstransferRecipientInformation = (Ptsv1pushfundstransferRecipientInformation) o;
    return Objects.equals(this.paymentInformation, ptsv1pushfundstransferRecipientInformation.paymentInformation) &&
        Objects.equals(this.address1, ptsv1pushfundstransferRecipientInformation.address1) &&
        Objects.equals(this.address2, ptsv1pushfundstransferRecipientInformation.address2) &&
        Objects.equals(this.locality, ptsv1pushfundstransferRecipientInformation.locality) &&
        Objects.equals(this.postalCode, ptsv1pushfundstransferRecipientInformation.postalCode) &&
        Objects.equals(this.administrativeArea, ptsv1pushfundstransferRecipientInformation.administrativeArea) &&
        Objects.equals(this.country, ptsv1pushfundstransferRecipientInformation.country) &&
        Objects.equals(this.firstName, ptsv1pushfundstransferRecipientInformation.firstName) &&
        Objects.equals(this.middleName, ptsv1pushfundstransferRecipientInformation.middleName) &&
        Objects.equals(this.lastName, ptsv1pushfundstransferRecipientInformation.lastName) &&
        Objects.equals(this.phoneNumber, ptsv1pushfundstransferRecipientInformation.phoneNumber) &&
        Objects.equals(this.email, ptsv1pushfundstransferRecipientInformation.email) &&
        Objects.equals(this.personalIdentification, ptsv1pushfundstransferRecipientInformation.personalIdentification) &&
        Objects.equals(this.buildingNumber, ptsv1pushfundstransferRecipientInformation.buildingNumber) &&
        Objects.equals(this.streetName, ptsv1pushfundstransferRecipientInformation.streetName) &&
        Objects.equals(this.type, ptsv1pushfundstransferRecipientInformation.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentInformation, address1, address2, locality, postalCode, administrativeArea, country, firstName, middleName, lastName, phoneNumber, email, personalIdentification, buildingNumber, streetName, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv1pushfundstransferRecipientInformation {\n");
    
    sb.append("    paymentInformation: ").append(toIndentedString(paymentInformation)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    administrativeArea: ").append(toIndentedString(administrativeArea)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    personalIdentification: ").append(toIndentedString(personalIdentification)).append("\n");
    sb.append("    buildingNumber: ").append(toIndentedString(buildingNumber)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


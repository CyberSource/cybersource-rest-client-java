/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities
 */

public class Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities {
  @SerializedName("id")
  private String id = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("data")
  private String data = null;

  @SerializedName("relyingPartyId")
  private String relyingPartyId = null;

  public Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id from the authenticated identity.  Base64URL encoded string (RFC4648).   The encoding is the same as Base64, but uses &#39;-&#39; characters instead of &#39;+&#39; and &#39;_&#39; characters instead of &#39;/&#39;. 
   * @return id
  **/
  @ApiModelProperty(example = "88662a11a11fa88627e217ab9cb00001", value = "The id from the authenticated identity.  Base64URL encoded string (RFC4648).   The encoding is the same as Base64, but uses '-' characters instead of '+' and '_' characters instead of '/'. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * The provider of the authenticated identity.  Possible Values:   - VISA_PAYMENT_PASSKEY 
   * @return provider
  **/
  @ApiModelProperty(example = "VISA_PAYMENT_PASSKEY", value = "The provider of the authenticated identity.  Possible Values:   - VISA_PAYMENT_PASSKEY ")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities data(String data) {
    this.data = data;
    return this;
  }

   /**
   * The data from the authenticated identity, for FIDO this could be the Attestation. Base64URL encoded string (RFC4648).  The encoding is the same as Base64, but uses &#39;-&#39; characters instead of &#39;+&#39; and &#39;_&#39; characters instead of &#39;/&#39;. 
   * @return data
  **/
  @ApiModelProperty(example = "dj0xJmM9ezAwMX06QUFSTk", value = "The data from the authenticated identity, for FIDO this could be the Attestation. Base64URL encoded string (RFC4648).  The encoding is the same as Base64, but uses '-' characters instead of '+' and '_' characters instead of '/'. ")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities relyingPartyId(String relyingPartyId) {
    this.relyingPartyId = relyingPartyId;
    return this;
  }

   /**
   * The id of the Relying Party.  Base64URL encoded string (RFC4648).   The encoding is the same as Base64, but uses &#39;-&#39; characters instead of &#39;+&#39; and &#39;_&#39; characters instead of &#39;/&#39;. 
   * @return relyingPartyId
  **/
  @ApiModelProperty(example = "dnRzLmF1dGgudmlzYS5jb20=", value = "The id of the Relying Party.  Base64URL encoded string (RFC4648).   The encoding is the same as Base64, but uses '-' characters instead of '+' and '_' characters instead of '/'. ")
  public String getRelyingPartyId() {
    return relyingPartyId;
  }

  public void setRelyingPartyId(String relyingPartyId) {
    this.relyingPartyId = relyingPartyId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities = (Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities) o;
    return Objects.equals(this.id, tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities.id) &&
        Objects.equals(this.provider, tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities.provider) &&
        Objects.equals(this.data, tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities.data) &&
        Objects.equals(this.relyingPartyId, tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities.relyingPartyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, provider, data, relyingPartyId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tmsv2tokenstokenIdpaymentcredentialsAuthenticatedIdentities {\n");
    
    if (id != null) sb.append("    id: ").append(toIndentedString(id)).append("\n");
    if (provider != null) sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    if (data != null) sb.append("    data: ").append(toIndentedString(data)).append("\n");
    if (relyingPartyId != null) sb.append("    relyingPartyId: ").append(toIndentedString(relyingPartyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


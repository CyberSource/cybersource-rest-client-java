/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.Tssv2transactionsemvTagDetailsEmvDetailsList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Body
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-11-30T13:38:58.602+05:30")
public class Body {
  @SerializedName("requestor")
  private String requestor = null;

  @SerializedName("parsedTagLimit")
  private Integer parsedTagLimit = null;

  @SerializedName("emvDetailsList")
  private List<Tssv2transactionsemvTagDetailsEmvDetailsList> emvDetailsList = new ArrayList<Tssv2transactionsemvTagDetailsEmvDetailsList>();

  public Body requestor(String requestor) {
    this.requestor = requestor;
    return this;
  }

   /**
   * Identifies the service requesting parsing 
   * @return requestor
  **/
  @ApiModelProperty(required = true, value = "Identifies the service requesting parsing ")
  public String getRequestor() {
    return requestor;
  }

  public void setRequestor(String requestor) {
    this.requestor = requestor;
  }

  public Body parsedTagLimit(Integer parsedTagLimit) {
    this.parsedTagLimit = parsedTagLimit;
    return this;
  }

   /**
   * Number of tags to parse for each EMV tag string provided. 
   * @return parsedTagLimit
  **/
  @ApiModelProperty(value = "Number of tags to parse for each EMV tag string provided. ")
  public Integer getParsedTagLimit() {
    return parsedTagLimit;
  }

  public void setParsedTagLimit(Integer parsedTagLimit) {
    this.parsedTagLimit = parsedTagLimit;
  }

  public Body emvDetailsList(List<Tssv2transactionsemvTagDetailsEmvDetailsList> emvDetailsList) {
    this.emvDetailsList = emvDetailsList;
    return this;
  }

  public Body addEmvDetailsListItem(Tssv2transactionsemvTagDetailsEmvDetailsList emvDetailsListItem) {
    this.emvDetailsList.add(emvDetailsListItem);
    return this;
  }

   /**
   * An array of objects, each containing a requestId and the corresponding emvRequestCombinedTags 
   * @return emvDetailsList
  **/
  @ApiModelProperty(required = true, value = "An array of objects, each containing a requestId and the corresponding emvRequestCombinedTags ")
  public List<Tssv2transactionsemvTagDetailsEmvDetailsList> getEmvDetailsList() {
    return emvDetailsList;
  }

  public void setEmvDetailsList(List<Tssv2transactionsemvTagDetailsEmvDetailsList> emvDetailsList) {
    this.emvDetailsList = emvDetailsList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.requestor, body.requestor) &&
        Objects.equals(this.parsedTagLimit, body.parsedTagLimit) &&
        Objects.equals(this.emvDetailsList, body.emvDetailsList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestor, parsedTagLimit, emvDetailsList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    requestor: ").append(toIndentedString(requestor)).append("\n");
    sb.append("    parsedTagLimit: ").append(toIndentedString(parsedTagLimit)).append("\n");
    sb.append("    emvDetailsList: ").append(toIndentedString(emvDetailsList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


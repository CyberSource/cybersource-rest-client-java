/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.InlineResponse200Content;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents the Card Art Asset associated to the Network Token. 
 */
@ApiModel(description = "Represents the Card Art Asset associated to the Network Token. ")

public class InlineResponse200 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("content")
  private List<InlineResponse200Content> content = null;

  public InlineResponse200 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the Card Art Asset. 
   * @return id
  **/
  @ApiModelProperty(example = "84cfb836a0000859be62c766bdc9e510", value = "Unique identifier for the Card Art Asset. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse200 type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of Card Art Asset. 
   * @return type
  **/
  @ApiModelProperty(example = "cardArtCombined", value = "The type of Card Art Asset. ")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public InlineResponse200 provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * The provider of the Card Art Asset. 
   * @return provider
  **/
  @ApiModelProperty(example = "vts", value = "The provider of the Card Art Asset. ")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public InlineResponse200 content(List<InlineResponse200Content> content) {
    this.content = content;
    return this;
  }

  public InlineResponse200 addContentItem(InlineResponse200Content contentItem) {
    if (this.content == null) {
      this.content = new ArrayList<InlineResponse200Content>();
    }
    this.content.add(contentItem);
    return this;
  }

   /**
   * Array of content objects representing the Card Art Asset. 
   * @return content
  **/
  @ApiModelProperty(value = "Array of content objects representing the Card Art Asset. ")
  public List<InlineResponse200Content> getContent() {
    return content;
  }

  public void setContent(List<InlineResponse200Content> content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.id, inlineResponse200.id) &&
        Objects.equals(this.type, inlineResponse200.type) &&
        Objects.equals(this.provider, inlineResponse200.provider) &&
        Objects.equals(this.content, inlineResponse200.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, provider, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    
    if (id != null) sb.append("    id: ").append(toIndentedString(id)).append("\n");
    if (type != null) sb.append("    type: ").append(toIndentedString(type)).append("\n");
    if (provider != null) sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    if (content != null) sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


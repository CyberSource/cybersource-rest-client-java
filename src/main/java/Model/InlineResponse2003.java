/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Boardingv1registrationsDocumentInformation;
import Model.Boardingv1registrationsOrganizationInformation;
import Model.Boardingv1registrationsProductInformation;
import Model.Boardingv1registrationsRegistrationInformation;
import Model.InlineResponse2003IntegrationInformation;
import Model.InlineResponse2013ProductInformationSetups;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * InlineResponse2003
 */

public class InlineResponse2003 {
  @SerializedName("registrationInformation")
  private Boardingv1registrationsRegistrationInformation registrationInformation = null;

  @SerializedName("integrationInformation")
  private InlineResponse2003IntegrationInformation integrationInformation = null;

  @SerializedName("organizationInformation")
  private Boardingv1registrationsOrganizationInformation organizationInformation = null;

  @SerializedName("productInformation")
  private Boardingv1registrationsProductInformation productInformation = null;

  @SerializedName("productInformationSetups")
  private List<InlineResponse2013ProductInformationSetups> productInformationSetups = null;

  @SerializedName("documentInformation")
  private Boardingv1registrationsDocumentInformation documentInformation = null;

  @SerializedName("details")
  private Map<String, List<Object>> details = null;

  public InlineResponse2003 registrationInformation(Boardingv1registrationsRegistrationInformation registrationInformation) {
    this.registrationInformation = registrationInformation;
    return this;
  }

   /**
   * Get registrationInformation
   * @return registrationInformation
  **/
  @ApiModelProperty(value = "")
  public Boardingv1registrationsRegistrationInformation getRegistrationInformation() {
    return registrationInformation;
  }

  public void setRegistrationInformation(Boardingv1registrationsRegistrationInformation registrationInformation) {
    this.registrationInformation = registrationInformation;
  }

  public InlineResponse2003 integrationInformation(InlineResponse2003IntegrationInformation integrationInformation) {
    this.integrationInformation = integrationInformation;
    return this;
  }

   /**
   * Get integrationInformation
   * @return integrationInformation
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2003IntegrationInformation getIntegrationInformation() {
    return integrationInformation;
  }

  public void setIntegrationInformation(InlineResponse2003IntegrationInformation integrationInformation) {
    this.integrationInformation = integrationInformation;
  }

  public InlineResponse2003 organizationInformation(Boardingv1registrationsOrganizationInformation organizationInformation) {
    this.organizationInformation = organizationInformation;
    return this;
  }

   /**
   * Get organizationInformation
   * @return organizationInformation
  **/
  @ApiModelProperty(value = "")
  public Boardingv1registrationsOrganizationInformation getOrganizationInformation() {
    return organizationInformation;
  }

  public void setOrganizationInformation(Boardingv1registrationsOrganizationInformation organizationInformation) {
    this.organizationInformation = organizationInformation;
  }

  public InlineResponse2003 productInformation(Boardingv1registrationsProductInformation productInformation) {
    this.productInformation = productInformation;
    return this;
  }

   /**
   * Get productInformation
   * @return productInformation
  **/
  @ApiModelProperty(value = "")
  public Boardingv1registrationsProductInformation getProductInformation() {
    return productInformation;
  }

  public void setProductInformation(Boardingv1registrationsProductInformation productInformation) {
    this.productInformation = productInformation;
  }

  public InlineResponse2003 productInformationSetups(List<InlineResponse2013ProductInformationSetups> productInformationSetups) {
    this.productInformationSetups = productInformationSetups;
    return this;
  }

  public InlineResponse2003 addProductInformationSetupsItem(InlineResponse2013ProductInformationSetups productInformationSetupsItem) {
    if (this.productInformationSetups == null) {
      this.productInformationSetups = new ArrayList<InlineResponse2013ProductInformationSetups>();
    }
    this.productInformationSetups.add(productInformationSetupsItem);
    return this;
  }

   /**
   * Get productInformationSetups
   * @return productInformationSetups
  **/
  @ApiModelProperty(value = "")
  public List<InlineResponse2013ProductInformationSetups> getProductInformationSetups() {
    return productInformationSetups;
  }

  public void setProductInformationSetups(List<InlineResponse2013ProductInformationSetups> productInformationSetups) {
    this.productInformationSetups = productInformationSetups;
  }

  public InlineResponse2003 documentInformation(Boardingv1registrationsDocumentInformation documentInformation) {
    this.documentInformation = documentInformation;
    return this;
  }

   /**
   * Get documentInformation
   * @return documentInformation
  **/
  @ApiModelProperty(value = "")
  public Boardingv1registrationsDocumentInformation getDocumentInformation() {
    return documentInformation;
  }

  public void setDocumentInformation(Boardingv1registrationsDocumentInformation documentInformation) {
    this.documentInformation = documentInformation;
  }

  public InlineResponse2003 details(Map<String, List<Object>> details) {
    this.details = details;
    return this;
  }

  public InlineResponse2003 putDetailsItem(String key, List<Object> detailsItem) {
    if (this.details == null) {
      this.details = new HashMap<String, List<Object>>();
    }
    this.details.put(key, detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public Map<String, List<Object>> getDetails() {
    return details;
  }

  public void setDetails(Map<String, List<Object>> details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003 inlineResponse2003 = (InlineResponse2003) o;
    return Objects.equals(this.registrationInformation, inlineResponse2003.registrationInformation) &&
        Objects.equals(this.integrationInformation, inlineResponse2003.integrationInformation) &&
        Objects.equals(this.organizationInformation, inlineResponse2003.organizationInformation) &&
        Objects.equals(this.productInformation, inlineResponse2003.productInformation) &&
        Objects.equals(this.productInformationSetups, inlineResponse2003.productInformationSetups) &&
        Objects.equals(this.documentInformation, inlineResponse2003.documentInformation) &&
        Objects.equals(this.details, inlineResponse2003.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(registrationInformation, integrationInformation, organizationInformation, productInformation, productInformationSetups, documentInformation, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003 {\n");
    
    if (registrationInformation != null) sb.append("    registrationInformation: ").append(toIndentedString(registrationInformation)).append("\n");
    if (integrationInformation != null) sb.append("    integrationInformation: ").append(toIndentedString(integrationInformation)).append("\n");
    if (organizationInformation != null) sb.append("    organizationInformation: ").append(toIndentedString(organizationInformation)).append("\n");
    if (productInformation != null) sb.append("    productInformation: ").append(toIndentedString(productInformation)).append("\n");
    if (productInformationSetups != null) sb.append("    productInformationSetups: ").append(toIndentedString(productInformationSetups)).append("\n");
    if (documentInformation != null) sb.append("    documentInformation: ").append(toIndentedString(documentInformation)).append("\n");
    if (details != null) sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


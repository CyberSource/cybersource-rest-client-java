/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Upv1capturecontextsOrderInformationAmountDetails;
import Model.Upv1capturecontextsOrderInformationBillTo;
import Model.Upv1capturecontextsOrderInformationShipTo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Upv1capturecontextsOrderInformation
 */

public class Upv1capturecontextsOrderInformation {
  @SerializedName("amountDetails")
  private Upv1capturecontextsOrderInformationAmountDetails amountDetails = null;

  @SerializedName("billTo")
  private Upv1capturecontextsOrderInformationBillTo billTo = null;

  @SerializedName("shipTo")
  private Upv1capturecontextsOrderInformationShipTo shipTo = null;

  public Upv1capturecontextsOrderInformation amountDetails(Upv1capturecontextsOrderInformationAmountDetails amountDetails) {
    this.amountDetails = amountDetails;
    return this;
  }

   /**
   * Get amountDetails
   * @return amountDetails
  **/
  @ApiModelProperty(value = "")
  public Upv1capturecontextsOrderInformationAmountDetails getAmountDetails() {
    return amountDetails;
  }

  public void setAmountDetails(Upv1capturecontextsOrderInformationAmountDetails amountDetails) {
    this.amountDetails = amountDetails;
  }

  public Upv1capturecontextsOrderInformation billTo(Upv1capturecontextsOrderInformationBillTo billTo) {
    this.billTo = billTo;
    return this;
  }

   /**
   * Get billTo
   * @return billTo
  **/
  @ApiModelProperty(value = "")
  public Upv1capturecontextsOrderInformationBillTo getBillTo() {
    return billTo;
  }

  public void setBillTo(Upv1capturecontextsOrderInformationBillTo billTo) {
    this.billTo = billTo;
  }

  public Upv1capturecontextsOrderInformation shipTo(Upv1capturecontextsOrderInformationShipTo shipTo) {
    this.shipTo = shipTo;
    return this;
  }

   /**
   * Get shipTo
   * @return shipTo
  **/
  @ApiModelProperty(value = "")
  public Upv1capturecontextsOrderInformationShipTo getShipTo() {
    return shipTo;
  }

  public void setShipTo(Upv1capturecontextsOrderInformationShipTo shipTo) {
    this.shipTo = shipTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Upv1capturecontextsOrderInformation upv1capturecontextsOrderInformation = (Upv1capturecontextsOrderInformation) o;
    return Objects.equals(this.amountDetails, upv1capturecontextsOrderInformation.amountDetails) &&
        Objects.equals(this.billTo, upv1capturecontextsOrderInformation.billTo) &&
        Objects.equals(this.shipTo, upv1capturecontextsOrderInformation.shipTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountDetails, billTo, shipTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Upv1capturecontextsOrderInformation {\n");
    
    sb.append("    amountDetails: ").append(toIndentedString(amountDetails)).append("\n");
    sb.append("    billTo: ").append(toIndentedString(billTo)).append("\n");
    sb.append("    shipTo: ").append(toIndentedString(shipTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Ptsv2paymentreferencesProcessingInformation
 */

public class Ptsv2paymentreferencesProcessingInformation {
  @SerializedName("sessionType")
  private String sessionType = null;

  @SerializedName("paymentFlowMode")
  private String paymentFlowMode = null;

  @SerializedName("actionList")
  private List<String> actionList = null;

  public Ptsv2paymentreferencesProcessingInformation sessionType(String sessionType) {
    this.sessionType = sessionType;
    return this;
  }

   /**
   * Will have 2 values, &#39;U&#39; (Update) , &#39;N&#39; (New). Any other values will be rejected. Default will be &#39;N&#39; 
   * @return sessionType
  **/
  @ApiModelProperty(value = "Will have 2 values, 'U' (Update) , 'N' (New). Any other values will be rejected. Default will be 'N' ")
  public String getSessionType() {
    return sessionType;
  }

  public void setSessionType(String sessionType) {
    this.sessionType = sessionType;
  }

  public Ptsv2paymentreferencesProcessingInformation paymentFlowMode(String paymentFlowMode) {
    this.paymentFlowMode = paymentFlowMode;
    return this;
  }

   /**
   * Whether merchant wants to pass the flow Inline or want to invoke Klarna Hosted Page 
   * @return paymentFlowMode
  **/
  @ApiModelProperty(value = "Whether merchant wants to pass the flow Inline or want to invoke Klarna Hosted Page ")
  public String getPaymentFlowMode() {
    return paymentFlowMode;
  }

  public void setPaymentFlowMode(String paymentFlowMode) {
    this.paymentFlowMode = paymentFlowMode;
  }

  public Ptsv2paymentreferencesProcessingInformation actionList(List<String> actionList) {
    this.actionList = actionList;
    return this;
  }

  public Ptsv2paymentreferencesProcessingInformation addActionListItem(String actionListItem) {
    if (this.actionList == null) {
      this.actionList = new ArrayList<String>();
    }
    this.actionList.add(actionListItem);
    return this;
  }

   /**
   * Possible values are one or more of follows:   - &#x60;AP_SESSIONS&#x60;: Use this when Alternative Payment Sessions service is requested. 
   * @return actionList
  **/
  @ApiModelProperty(value = "Possible values are one or more of follows:   - `AP_SESSIONS`: Use this when Alternative Payment Sessions service is requested. ")
  public List<String> getActionList() {
    return actionList;
  }

  public void setActionList(List<String> actionList) {
    this.actionList = actionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2paymentreferencesProcessingInformation ptsv2paymentreferencesProcessingInformation = (Ptsv2paymentreferencesProcessingInformation) o;
    return Objects.equals(this.sessionType, ptsv2paymentreferencesProcessingInformation.sessionType) &&
        Objects.equals(this.paymentFlowMode, ptsv2paymentreferencesProcessingInformation.paymentFlowMode) &&
        Objects.equals(this.actionList, ptsv2paymentreferencesProcessingInformation.actionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionType, paymentFlowMode, actionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2paymentreferencesProcessingInformation {\n");
    
    sb.append("    sessionType: ").append(toIndentedString(sessionType)).append("\n");
    sb.append("    paymentFlowMode: ").append(toIndentedString(paymentFlowMode)).append("\n");
    sb.append("    actionList: ").append(toIndentedString(actionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse20012PaymentInformationBankAccount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-31T18:13:53.731+05:30")
public class InlineResponse20012PaymentInformationBankAccount {
  @SerializedName("suffix")
  private String suffix = null;

  @SerializedName("prefix")
  private String prefix = null;

  @SerializedName("checkNumber")
  private String checkNumber = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("checkDigit")
  private String checkDigit = null;

  @SerializedName("encoderId")
  private String encoderId = null;

  public InlineResponse20012PaymentInformationBankAccount suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return suffix
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  public InlineResponse20012PaymentInformationBankAccount prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return prefix
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  public InlineResponse20012PaymentInformationBankAccount checkNumber(String checkNumber) {
    this.checkNumber = checkNumber;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return checkNumber
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getCheckNumber() {
    return checkNumber;
  }

  public void setCheckNumber(String checkNumber) {
    this.checkNumber = checkNumber;
  }

  public InlineResponse20012PaymentInformationBankAccount type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return type
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public InlineResponse20012PaymentInformationBankAccount name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return name
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20012PaymentInformationBankAccount checkDigit(String checkDigit) {
    this.checkDigit = checkDigit;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return checkDigit
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getCheckDigit() {
    return checkDigit;
  }

  public void setCheckDigit(String checkDigit) {
    this.checkDigit = checkDigit;
  }

  public InlineResponse20012PaymentInformationBankAccount encoderId(String encoderId) {
    this.encoderId = encoderId;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return encoderId
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getEncoderId() {
    return encoderId;
  }

  public void setEncoderId(String encoderId) {
    this.encoderId = encoderId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20012PaymentInformationBankAccount inlineResponse20012PaymentInformationBankAccount = (InlineResponse20012PaymentInformationBankAccount) o;
    return Objects.equals(this.suffix, inlineResponse20012PaymentInformationBankAccount.suffix) &&
        Objects.equals(this.prefix, inlineResponse20012PaymentInformationBankAccount.prefix) &&
        Objects.equals(this.checkNumber, inlineResponse20012PaymentInformationBankAccount.checkNumber) &&
        Objects.equals(this.type, inlineResponse20012PaymentInformationBankAccount.type) &&
        Objects.equals(this.name, inlineResponse20012PaymentInformationBankAccount.name) &&
        Objects.equals(this.checkDigit, inlineResponse20012PaymentInformationBankAccount.checkDigit) &&
        Objects.equals(this.encoderId, inlineResponse20012PaymentInformationBankAccount.encoderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suffix, prefix, checkNumber, type, name, checkDigit, encoderId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20012PaymentInformationBankAccount {\n");
    
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    checkDigit: ").append(toIndentedString(checkDigit)).append("\n");
    sb.append("    encoderId: ").append(toIndentedString(encoderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


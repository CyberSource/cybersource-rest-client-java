/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Notificationsubscriptionsv1productsorganizationIdEventTypes;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineResponse2002
 */

public class InlineResponse2002 {
  @SerializedName("productId")
  private String productId = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("eventTypes")
  private List<Notificationsubscriptionsv1productsorganizationIdEventTypes> eventTypes = null;

  public InlineResponse2002 productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Product ID.
   * @return productId
  **/
  @ApiModelProperty(value = "Product ID.")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public InlineResponse2002 productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Product Name.
   * @return productName
  **/
  @ApiModelProperty(value = "Product Name.")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public InlineResponse2002 eventTypes(List<Notificationsubscriptionsv1productsorganizationIdEventTypes> eventTypes) {
    this.eventTypes = eventTypes;
    return this;
  }

  public InlineResponse2002 addEventTypesItem(Notificationsubscriptionsv1productsorganizationIdEventTypes eventTypesItem) {
    if (this.eventTypes == null) {
      this.eventTypes = new ArrayList<Notificationsubscriptionsv1productsorganizationIdEventTypes>();
    }
    this.eventTypes.add(eventTypesItem);
    return this;
  }

   /**
   * Get eventTypes
   * @return eventTypes
  **/
  @ApiModelProperty(value = "")
  public List<Notificationsubscriptionsv1productsorganizationIdEventTypes> getEventTypes() {
    return eventTypes;
  }

  public void setEventTypes(List<Notificationsubscriptionsv1productsorganizationIdEventTypes> eventTypes) {
    this.eventTypes = eventTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002 inlineResponse2002 = (InlineResponse2002) o;
    return Objects.equals(this.productId, inlineResponse2002.productId) &&
        Objects.equals(this.productName, inlineResponse2002.productName) &&
        Objects.equals(this.eventTypes, inlineResponse2002.eventTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productName, eventTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002 {\n");
    
    if (productId != null) sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    if (productName != null) sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    if (eventTypes != null) sb.append("    eventTypes: ").append(toIndentedString(eventTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.PtsV2PaymentsReversalsPost201ResponseLinks;
import Model.TssV2TransactionsPost201ResponseEmbedded;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TssV2TransactionsPost201Response
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-27T12:49:40.999Z")
public class TssV2TransactionsPost201Response {
  @SerializedName("id")
  private String id = null;

  @SerializedName("save")
  private Boolean save = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("query")
  private String query = null;

  @SerializedName("offset")
  private Integer offset = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("sort")
  private String sort = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("totalCount")
  private Integer totalCount = null;

  @SerializedName("submitTimeUtc")
  private String submitTimeUtc = null;

  @SerializedName("_embedded")
  private TssV2TransactionsPost201ResponseEmbedded embedded = null;

  @SerializedName("_links")
  private PtsV2PaymentsReversalsPost201ResponseLinks links = null;

  public TssV2TransactionsPost201Response id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An unique identification number assigned by CyberSource to identify the submitted request.
   * @return id
  **/
  @ApiModelProperty(value = "An unique identification number assigned by CyberSource to identify the submitted request.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TssV2TransactionsPost201Response save(Boolean save) {
    this.save = save;
    return this;
  }

   /**
   * save or not save.
   * @return save
  **/
  @ApiModelProperty(value = "save or not save.")
  public Boolean getSave() {
    return save;
  }

  public void setSave(Boolean save) {
    this.save = save;
  }

  public TssV2TransactionsPost201Response name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The description for this field is not available. 
   * @return name
  **/
  @ApiModelProperty(value = "The description for this field is not available. ")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TssV2TransactionsPost201Response timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Time Zone.
   * @return timezone
  **/
  @ApiModelProperty(value = "Time Zone.")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public TssV2TransactionsPost201Response query(String query) {
    this.query = query;
    return this;
  }

   /**
   * transaction search query string.
   * @return query
  **/
  @ApiModelProperty(value = "transaction search query string.")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public TssV2TransactionsPost201Response offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * offset.
   * @return offset
  **/
  @ApiModelProperty(value = "offset.")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public TssV2TransactionsPost201Response limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * limit on number of results.
   * @return limit
  **/
  @ApiModelProperty(value = "limit on number of results.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public TssV2TransactionsPost201Response sort(String sort) {
    this.sort = sort;
    return this;
  }

   /**
   * A comma separated list of the following form - fieldName1 asc or desc, fieldName2 asc or desc, etc.
   * @return sort
  **/
  @ApiModelProperty(value = "A comma separated list of the following form - fieldName1 asc or desc, fieldName2 asc or desc, etc.")
  public String getSort() {
    return sort;
  }

  public void setSort(String sort) {
    this.sort = sort;
  }

  public TssV2TransactionsPost201Response count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Results for this page, this could be below the limit.
   * @return count
  **/
  @ApiModelProperty(value = "Results for this page, this could be below the limit.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public TssV2TransactionsPost201Response totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * total number of results.
   * @return totalCount
  **/
  @ApiModelProperty(value = "total number of results.")
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }

  public TssV2TransactionsPost201Response submitTimeUtc(String submitTimeUtc) {
    this.submitTimeUtc = submitTimeUtc;
    return this;
  }

   /**
   * Time of request in UTC. &#x60;Format: YYYY-MM-DDThh:mm:ssZ&#x60;  Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. 
   * @return submitTimeUtc
  **/
  @ApiModelProperty(value = "Time of request in UTC. `Format: YYYY-MM-DDThh:mm:ssZ`  Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. ")
  public String getSubmitTimeUtc() {
    return submitTimeUtc;
  }

  public void setSubmitTimeUtc(String submitTimeUtc) {
    this.submitTimeUtc = submitTimeUtc;
  }

  public TssV2TransactionsPost201Response embedded(TssV2TransactionsPost201ResponseEmbedded embedded) {
    this.embedded = embedded;
    return this;
  }

   /**
   * Get embedded
   * @return embedded
  **/
  @ApiModelProperty(value = "")
  public TssV2TransactionsPost201ResponseEmbedded getEmbedded() {
    return embedded;
  }

  public void setEmbedded(TssV2TransactionsPost201ResponseEmbedded embedded) {
    this.embedded = embedded;
  }

  public TssV2TransactionsPost201Response links(PtsV2PaymentsReversalsPost201ResponseLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public PtsV2PaymentsReversalsPost201ResponseLinks getLinks() {
    return links;
  }

  public void setLinks(PtsV2PaymentsReversalsPost201ResponseLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TssV2TransactionsPost201Response tssV2TransactionsPost201Response = (TssV2TransactionsPost201Response) o;
    return Objects.equals(this.id, tssV2TransactionsPost201Response.id) &&
        Objects.equals(this.save, tssV2TransactionsPost201Response.save) &&
        Objects.equals(this.name, tssV2TransactionsPost201Response.name) &&
        Objects.equals(this.timezone, tssV2TransactionsPost201Response.timezone) &&
        Objects.equals(this.query, tssV2TransactionsPost201Response.query) &&
        Objects.equals(this.offset, tssV2TransactionsPost201Response.offset) &&
        Objects.equals(this.limit, tssV2TransactionsPost201Response.limit) &&
        Objects.equals(this.sort, tssV2TransactionsPost201Response.sort) &&
        Objects.equals(this.count, tssV2TransactionsPost201Response.count) &&
        Objects.equals(this.totalCount, tssV2TransactionsPost201Response.totalCount) &&
        Objects.equals(this.submitTimeUtc, tssV2TransactionsPost201Response.submitTimeUtc) &&
        Objects.equals(this.embedded, tssV2TransactionsPost201Response.embedded) &&
        Objects.equals(this.links, tssV2TransactionsPost201Response.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, save, name, timezone, query, offset, limit, sort, count, totalCount, submitTimeUtc, embedded, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TssV2TransactionsPost201Response {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    save: ").append(toIndentedString(save)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    submitTimeUtc: ").append(toIndentedString(submitTimeUtc)).append("\n");
    sb.append("    embedded: ").append(toIndentedString(embedded)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UnderwritingConfigurationBillingInformationBankAccountInformation
 */

public class UnderwritingConfigurationBillingInformationBankAccountInformation {
  @SerializedName("bankAccountCountry")
  private String bankAccountCountry = null;

  @SerializedName("accountHolderName")
  private String accountHolderName = null;

  @SerializedName("accountType")
  private String accountType = null;

  @SerializedName("accountRoutingNumber")
  private String accountRoutingNumber = null;

  @SerializedName("accountNumber")
  private String accountNumber = null;

  public UnderwritingConfigurationBillingInformationBankAccountInformation bankAccountCountry(String bankAccountCountry) {
    this.bankAccountCountry = bankAccountCountry;
    return this;
  }

   /**
   * Country of the Bank Account. Two character country code, ISO 3166-1 alpha-2.
   * @return bankAccountCountry
  **/
  @ApiModelProperty(example = "US", value = "Country of the Bank Account. Two character country code, ISO 3166-1 alpha-2.")
  public String getBankAccountCountry() {
    return bankAccountCountry;
  }

  public void setBankAccountCountry(String bankAccountCountry) {
    this.bankAccountCountry = bankAccountCountry;
  }

  public UnderwritingConfigurationBillingInformationBankAccountInformation accountHolderName(String accountHolderName) {
    this.accountHolderName = accountHolderName;
    return this;
  }

   /**
   * Name on the checking account
   * @return accountHolderName
  **/
  @ApiModelProperty(example = "Sarah Jane Smith", value = "Name on the checking account")
  public String getAccountHolderName() {
    return accountHolderName;
  }

  public void setAccountHolderName(String accountHolderName) {
    this.accountHolderName = accountHolderName;
  }

  public UnderwritingConfigurationBillingInformationBankAccountInformation accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Type of Account  Possible Values: - CHECKING - SAVINGS - CORPORATECHECKING - CORPORATESAVINGS 
   * @return accountType
  **/
  @ApiModelProperty(example = "CORPORATECHECKING", value = "Type of Account  Possible Values: - CHECKING - SAVINGS - CORPORATECHECKING - CORPORATESAVINGS ")
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }

  public UnderwritingConfigurationBillingInformationBankAccountInformation accountRoutingNumber(String accountRoutingNumber) {
    this.accountRoutingNumber = accountRoutingNumber;
    return this;
  }

   /**
   * Routing Number, IBAN, Swift/BIC, etc
   * @return accountRoutingNumber
  **/
  @ApiModelProperty(example = "111111111111111", value = "Routing Number, IBAN, Swift/BIC, etc")
  public String getAccountRoutingNumber() {
    return accountRoutingNumber;
  }

  public void setAccountRoutingNumber(String accountRoutingNumber) {
    this.accountRoutingNumber = accountRoutingNumber;
  }

  public UnderwritingConfigurationBillingInformationBankAccountInformation accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Account Number
   * @return accountNumber
  **/
  @ApiModelProperty(example = "111111111111110", value = "Account Number")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnderwritingConfigurationBillingInformationBankAccountInformation underwritingConfigurationBillingInformationBankAccountInformation = (UnderwritingConfigurationBillingInformationBankAccountInformation) o;
    return Objects.equals(this.bankAccountCountry, underwritingConfigurationBillingInformationBankAccountInformation.bankAccountCountry) &&
        Objects.equals(this.accountHolderName, underwritingConfigurationBillingInformationBankAccountInformation.accountHolderName) &&
        Objects.equals(this.accountType, underwritingConfigurationBillingInformationBankAccountInformation.accountType) &&
        Objects.equals(this.accountRoutingNumber, underwritingConfigurationBillingInformationBankAccountInformation.accountRoutingNumber) &&
        Objects.equals(this.accountNumber, underwritingConfigurationBillingInformationBankAccountInformation.accountNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankAccountCountry, accountHolderName, accountType, accountRoutingNumber, accountNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnderwritingConfigurationBillingInformationBankAccountInformation {\n");
    
    if (bankAccountCountry != null) sb.append("    bankAccountCountry: ").append(toIndentedString(bankAccountCountry)).append("\n");
    if (accountHolderName != null) sb.append("    accountHolderName: ").append(toIndentedString(accountHolderName)).append("\n");
    if (accountType != null) sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    if (accountRoutingNumber != null) sb.append("    accountRoutingNumber: ").append(toIndentedString(accountRoutingNumber)).append("\n");
    if (accountNumber != null) sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Formatted as *{payoutsAcquirerName}. The property name field should be the same as the processor name for which the pull funds or push funds feature is being configured. Here is the list of valid processor names [TBD]
 */
@ApiModel(description = "Formatted as *{payoutsAcquirerName}. The property name field should be the same as the processor name for which the pull funds or push funds feature is being configured. Here is the list of valid processor names [TBD]")

public class PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds {
  @SerializedName("acquirerOrganizationId")
  private String acquirerOrganizationId = null;

  @SerializedName("acquiringBIN")
  private Integer acquiringBIN = null;

  @SerializedName("allowCryptoCurrencyPurchase")
  private Boolean allowCryptoCurrencyPurchase = null;

  @SerializedName("cardAcceptorId")
  private String cardAcceptorId = null;

  @SerializedName("originatorMvv")
  private String originatorMvv = null;

  @SerializedName("originatorNameAbbreviation")
  private String originatorNameAbbreviation = null;

  @SerializedName("cardTerminalId")
  private String cardTerminalId = null;

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds acquirerOrganizationId(String acquirerOrganizationId) {
    this.acquirerOrganizationId = acquirerOrganizationId;
    return this;
  }

   /**
   * Valid organization in OMS with an organizationInformation.type as \&quot;acquirer\&quot;.
   * @return acquirerOrganizationId
  **/
  @ApiModelProperty(value = "Valid organization in OMS with an organizationInformation.type as \"acquirer\".")
  public String getAcquirerOrganizationId() {
    return acquirerOrganizationId;
  }

  public void setAcquirerOrganizationId(String acquirerOrganizationId) {
    this.acquirerOrganizationId = acquirerOrganizationId;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds acquiringBIN(Integer acquiringBIN) {
    this.acquiringBIN = acquiringBIN;
    return this;
  }

   /**
   * This code identifies the financial institution acting as the acquirer of this transaction. The acquirer is the client or system user that signed the originator or installed the unattended cardholder- activated environment. When a processing center operates for multiple acquirers, this code is for the individual client or system user, not a code for the center.
   * @return acquiringBIN
  **/
  @ApiModelProperty(required = true, value = "This code identifies the financial institution acting as the acquirer of this transaction. The acquirer is the client or system user that signed the originator or installed the unattended cardholder- activated environment. When a processing center operates for multiple acquirers, this code is for the individual client or system user, not a code for the center.")
  public Integer getAcquiringBIN() {
    return acquiringBIN;
  }

  public void setAcquiringBIN(Integer acquiringBIN) {
    this.acquiringBIN = acquiringBIN;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds allowCryptoCurrencyPurchase(Boolean allowCryptoCurrencyPurchase) {
    this.allowCryptoCurrencyPurchase = allowCryptoCurrencyPurchase;
    return this;
  }

   /**
   * This configuration allows a transaction to be flagged for cryptocurrency funds transfer.
   * @return allowCryptoCurrencyPurchase
  **/
  @ApiModelProperty(value = "This configuration allows a transaction to be flagged for cryptocurrency funds transfer.")
  public Boolean isAllowCryptoCurrencyPurchase() {
    return allowCryptoCurrencyPurchase;
  }

  public void setAllowCryptoCurrencyPurchase(Boolean allowCryptoCurrencyPurchase) {
    this.allowCryptoCurrencyPurchase = allowCryptoCurrencyPurchase;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds cardAcceptorId(String cardAcceptorId) {
    this.cardAcceptorId = cardAcceptorId;
    return this;
  }

   /**
   * A unique identifier number for the originator of transfers that is unique to the processor or acquirer.
   * @return cardAcceptorId
  **/
  @ApiModelProperty(required = true, value = "A unique identifier number for the originator of transfers that is unique to the processor or acquirer.")
  public String getCardAcceptorId() {
    return cardAcceptorId;
  }

  public void setCardAcceptorId(String cardAcceptorId) {
    this.cardAcceptorId = cardAcceptorId;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds originatorMvv(String originatorMvv) {
    this.originatorMvv = originatorMvv;
    return this;
  }

   /**
   * Merchant Verification Value (MVV) is used to identify originators that participate in a variety of programs. The MVV is unique to the merchant.
   * @return originatorMvv
  **/
  @ApiModelProperty(value = "Merchant Verification Value (MVV) is used to identify originators that participate in a variety of programs. The MVV is unique to the merchant.")
  public String getOriginatorMvv() {
    return originatorMvv;
  }

  public void setOriginatorMvv(String originatorMvv) {
    this.originatorMvv = originatorMvv;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds originatorNameAbbreviation(String originatorNameAbbreviation) {
    this.originatorNameAbbreviation = originatorNameAbbreviation;
    return this;
  }

   /**
   * A 4 character max name abbreviation for the originator.
   * @return originatorNameAbbreviation
  **/
  @ApiModelProperty(value = "A 4 character max name abbreviation for the originator.")
  public String getOriginatorNameAbbreviation() {
    return originatorNameAbbreviation;
  }

  public void setOriginatorNameAbbreviation(String originatorNameAbbreviation) {
    this.originatorNameAbbreviation = originatorNameAbbreviation;
  }

  public PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds cardTerminalId(String cardTerminalId) {
    this.cardTerminalId = cardTerminalId;
    return this;
  }

   /**
   * This field contains a code that identifies a terminal at the card acceptor location. This field is used in all messages related to a transaction. If sending transactions from a card not present environment, use the same value for all transactions.
   * @return cardTerminalId
  **/
  @ApiModelProperty(required = true, value = "This field contains a code that identifies a terminal at the card acceptor location. This field is used in all messages related to a transaction. If sending transactions from a card not present environment, use the same value for all transactions.")
  public String getCardTerminalId() {
    return cardTerminalId;
  }

  public void setCardTerminalId(String cardTerminalId) {
    this.cardTerminalId = cardTerminalId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds = (PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds) o;
    return Objects.equals(this.acquirerOrganizationId, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.acquirerOrganizationId) &&
        Objects.equals(this.acquiringBIN, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.acquiringBIN) &&
        Objects.equals(this.allowCryptoCurrencyPurchase, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.allowCryptoCurrencyPurchase) &&
        Objects.equals(this.cardAcceptorId, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.cardAcceptorId) &&
        Objects.equals(this.originatorMvv, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.originatorMvv) &&
        Objects.equals(this.originatorNameAbbreviation, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.originatorNameAbbreviation) &&
        Objects.equals(this.cardTerminalId, paymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds.cardTerminalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquirerOrganizationId, acquiringBIN, allowCryptoCurrencyPurchase, cardAcceptorId, originatorMvv, originatorNameAbbreviation, cardTerminalId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsProductsPayoutsConfigurationInformationConfigurationsPullfunds {\n");
    
    sb.append("    acquirerOrganizationId: ").append(toIndentedString(acquirerOrganizationId)).append("\n");
    sb.append("    acquiringBIN: ").append(toIndentedString(acquiringBIN)).append("\n");
    sb.append("    allowCryptoCurrencyPurchase: ").append(toIndentedString(allowCryptoCurrencyPurchase)).append("\n");
    sb.append("    cardAcceptorId: ").append(toIndentedString(cardAcceptorId)).append("\n");
    sb.append("    originatorMvv: ").append(toIndentedString(originatorMvv)).append("\n");
    sb.append("    originatorNameAbbreviation: ").append(toIndentedString(originatorNameAbbreviation)).append("\n");
    sb.append("    cardTerminalId: ").append(toIndentedString(cardTerminalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Ptsv2paymentreferencesPaymentInformationBankAccount
 */

public class Ptsv2paymentreferencesPaymentInformationBankAccount {
  @SerializedName("number")
  private String number = null;

  @SerializedName("iban")
  private String iban = null;

  public Ptsv2paymentreferencesPaymentInformationBankAccount number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Account number.  When processing encoded account numbers, use this field for the encoded account number. 
   * @return number
  **/
  @ApiModelProperty(value = "Account number.  When processing encoded account numbers, use this field for the encoded account number. ")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Ptsv2paymentreferencesPaymentInformationBankAccount iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * International Bank Account Number (IBAN) for the bank account. For some countries you can provide this number instead of the traditional bank account information. You can use this field only when scoring a direct debit transaction. 
   * @return iban
  **/
  @ApiModelProperty(value = "International Bank Account Number (IBAN) for the bank account. For some countries you can provide this number instead of the traditional bank account information. You can use this field only when scoring a direct debit transaction. ")
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2paymentreferencesPaymentInformationBankAccount ptsv2paymentreferencesPaymentInformationBankAccount = (Ptsv2paymentreferencesPaymentInformationBankAccount) o;
    return Objects.equals(this.number, ptsv2paymentreferencesPaymentInformationBankAccount.number) &&
        Objects.equals(this.iban, ptsv2paymentreferencesPaymentInformationBankAccount.iban);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, iban);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2paymentreferencesPaymentInformationBankAccount {\n");
    
    if (number != null) sb.append("    number: ").append(toIndentedString(number)).append("\n");
    if (iban != null) sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


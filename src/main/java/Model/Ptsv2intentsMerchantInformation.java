/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Ptsv2intentsMerchantInformationMerchantDescriptor;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Ptsv2intentsMerchantInformation
 */

public class Ptsv2intentsMerchantInformation {
  @SerializedName("merchantDescriptor")
  private Ptsv2intentsMerchantInformationMerchantDescriptor merchantDescriptor = null;

  @SerializedName("cancelUrl")
  private String cancelUrl = null;

  @SerializedName("successUrl")
  private String successUrl = null;

  public Ptsv2intentsMerchantInformation merchantDescriptor(Ptsv2intentsMerchantInformationMerchantDescriptor merchantDescriptor) {
    this.merchantDescriptor = merchantDescriptor;
    return this;
  }

   /**
   * Get merchantDescriptor
   * @return merchantDescriptor
  **/
  @ApiModelProperty(value = "")
  public Ptsv2intentsMerchantInformationMerchantDescriptor getMerchantDescriptor() {
    return merchantDescriptor;
  }

  public void setMerchantDescriptor(Ptsv2intentsMerchantInformationMerchantDescriptor merchantDescriptor) {
    this.merchantDescriptor = merchantDescriptor;
  }

  public Ptsv2intentsMerchantInformation cancelUrl(String cancelUrl) {
    this.cancelUrl = cancelUrl;
    return this;
  }

   /**
   * customer would be redirected to this url based on the decision of the transaction
   * @return cancelUrl
  **/
  @ApiModelProperty(value = "customer would be redirected to this url based on the decision of the transaction")
  public String getCancelUrl() {
    return cancelUrl;
  }

  public void setCancelUrl(String cancelUrl) {
    this.cancelUrl = cancelUrl;
  }

  public Ptsv2intentsMerchantInformation successUrl(String successUrl) {
    this.successUrl = successUrl;
    return this;
  }

   /**
   * customer would be redirected to this url based on the decision of the transaction
   * @return successUrl
  **/
  @ApiModelProperty(value = "customer would be redirected to this url based on the decision of the transaction")
  public String getSuccessUrl() {
    return successUrl;
  }

  public void setSuccessUrl(String successUrl) {
    this.successUrl = successUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2intentsMerchantInformation ptsv2intentsMerchantInformation = (Ptsv2intentsMerchantInformation) o;
    return Objects.equals(this.merchantDescriptor, ptsv2intentsMerchantInformation.merchantDescriptor) &&
        Objects.equals(this.cancelUrl, ptsv2intentsMerchantInformation.cancelUrl) &&
        Objects.equals(this.successUrl, ptsv2intentsMerchantInformation.successUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantDescriptor, cancelUrl, successUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2intentsMerchantInformation {\n");
    
    if (merchantDescriptor != null) sb.append("    merchantDescriptor: ").append(toIndentedString(merchantDescriptor)).append("\n");
    if (cancelUrl != null) sb.append("    cancelUrl: ").append(toIndentedString(cancelUrl)).append("\n");
    if (successUrl != null) sb.append("    successUrl: ").append(toIndentedString(successUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Issuer associated with the tokenized card. 
 */
@ApiModel(description = "Issuer associated with the tokenized card. ")

public class Tmsv2TokenizedCardMetadataIssuer {
  @SerializedName("name")
  private String name = null;

  @SerializedName("shortDescription")
  private String shortDescription = null;

  @SerializedName("longDescription")
  private String longDescription = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("url")
  private String url = null;

   /**
   * Issuer name. 
   * @return name
  **/
  @ApiModelProperty(value = "Issuer name. ")
  public String getName() {
    return name;
  }

   /**
   * Short description of the card. 
   * @return shortDescription
  **/
  @ApiModelProperty(value = "Short description of the card. ")
  public String getShortDescription() {
    return shortDescription;
  }

   /**
   * Long description of the card. 
   * @return longDescription
  **/
  @ApiModelProperty(value = "Long description of the card. ")
  public String getLongDescription() {
    return longDescription;
  }

   /**
   * Issuer customer service email address.
   * @return email
  **/
  @ApiModelProperty(value = "Issuer customer service email address.")
  public String getEmail() {
    return email;
  }

   /**
   * Issuer customer service phone number.
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "Issuer customer service phone number.")
  public String getPhoneNumber() {
    return phoneNumber;
  }

   /**
   * Issuer customer service url.
   * @return url
  **/
  @ApiModelProperty(value = "Issuer customer service url.")
  public String getUrl() {
    return url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tmsv2TokenizedCardMetadataIssuer tmsv2TokenizedCardMetadataIssuer = (Tmsv2TokenizedCardMetadataIssuer) o;
    return Objects.equals(this.name, tmsv2TokenizedCardMetadataIssuer.name) &&
        Objects.equals(this.shortDescription, tmsv2TokenizedCardMetadataIssuer.shortDescription) &&
        Objects.equals(this.longDescription, tmsv2TokenizedCardMetadataIssuer.longDescription) &&
        Objects.equals(this.email, tmsv2TokenizedCardMetadataIssuer.email) &&
        Objects.equals(this.phoneNumber, tmsv2TokenizedCardMetadataIssuer.phoneNumber) &&
        Objects.equals(this.url, tmsv2TokenizedCardMetadataIssuer.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, shortDescription, longDescription, email, phoneNumber, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tmsv2TokenizedCardMetadataIssuer {\n");
    
    if (name != null) sb.append("    name: ").append(toIndentedString(name)).append("\n");
    if (shortDescription != null) sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    if (longDescription != null) sb.append("    longDescription: ").append(toIndentedString(longDescription)).append("\n");
    if (email != null) sb.append("    email: ").append(toIndentedString(email)).append("\n");
    if (phoneNumber != null) sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    if (url != null) sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Object containing supported Card Types and settings
 */
@ApiModel(description = "Object containing supported Card Types and settings")

public class PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover {
  @SerializedName("cardVerificationNumberSupported")
  private Boolean cardVerificationNumberSupported = null;

  @SerializedName("cardVerificationNumberDisplay")
  private Boolean cardVerificationNumberDisplay = null;

  @SerializedName("payerAuthenticationSupported")
  private Boolean payerAuthenticationSupported = null;

  @SerializedName("supportedCurrencies")
  private List<String> supportedCurrencies = null;

  @SerializedName("method")
  private String method = null;

  @SerializedName("cardVerificationNumberRequired")
  private Boolean cardVerificationNumberRequired = null;

  @SerializedName("payerAuthenticationEnabled")
  private Boolean payerAuthenticationEnabled = null;

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover cardVerificationNumberSupported(Boolean cardVerificationNumberSupported) {
    this.cardVerificationNumberSupported = cardVerificationNumberSupported;
    return this;
  }

   /**
   * Dictates whether or Card Verification Number is supported by the card type. Usually this is set at system level.
   * @return cardVerificationNumberSupported
  **/
  @ApiModelProperty(value = "Dictates whether or Card Verification Number is supported by the card type. Usually this is set at system level.")
  public Boolean getCardVerificationNumberSupported() {
    return cardVerificationNumberSupported;
  }

  public void setCardVerificationNumberSupported(Boolean cardVerificationNumberSupported) {
    this.cardVerificationNumberSupported = cardVerificationNumberSupported;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover cardVerificationNumberDisplay(Boolean cardVerificationNumberDisplay) {
    this.cardVerificationNumberDisplay = cardVerificationNumberDisplay;
    return this;
  }

   /**
   * Toggles whether or Card Verification Number is displayed on the Hosted Checkout.
   * @return cardVerificationNumberDisplay
  **/
  @ApiModelProperty(value = "Toggles whether or Card Verification Number is displayed on the Hosted Checkout.")
  public Boolean getCardVerificationNumberDisplay() {
    return cardVerificationNumberDisplay;
  }

  public void setCardVerificationNumberDisplay(Boolean cardVerificationNumberDisplay) {
    this.cardVerificationNumberDisplay = cardVerificationNumberDisplay;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover payerAuthenticationSupported(Boolean payerAuthenticationSupported) {
    this.payerAuthenticationSupported = payerAuthenticationSupported;
    return this;
  }

   /**
   * Dictates whether or Payer Authentication is supported by the card type. Usually this is set at system level.
   * @return payerAuthenticationSupported
  **/
  @ApiModelProperty(value = "Dictates whether or Payer Authentication is supported by the card type. Usually this is set at system level.")
  public Boolean getPayerAuthenticationSupported() {
    return payerAuthenticationSupported;
  }

  public void setPayerAuthenticationSupported(Boolean payerAuthenticationSupported) {
    this.payerAuthenticationSupported = payerAuthenticationSupported;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover supportedCurrencies(List<String> supportedCurrencies) {
    this.supportedCurrencies = supportedCurrencies;
    return this;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover addSupportedCurrenciesItem(String supportedCurrenciesItem) {
    if (this.supportedCurrencies == null) {
      this.supportedCurrencies = new ArrayList<String>();
    }
    this.supportedCurrencies.add(supportedCurrenciesItem);
    return this;
  }

   /**
   * Array of the supported  ISO 4217 alphabetic currency codes.
   * @return supportedCurrencies
  **/
  @ApiModelProperty(value = "Array of the supported  ISO 4217 alphabetic currency codes.")
  public List<String> getSupportedCurrencies() {
    return supportedCurrencies;
  }

  public void setSupportedCurrencies(List<String> supportedCurrencies) {
    this.supportedCurrencies = supportedCurrencies;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover method(String method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @ApiModelProperty(value = "")
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover cardVerificationNumberRequired(Boolean cardVerificationNumberRequired) {
    this.cardVerificationNumberRequired = cardVerificationNumberRequired;
    return this;
  }

   /**
   * Get cardVerificationNumberRequired
   * @return cardVerificationNumberRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean getCardVerificationNumberRequired() {
    return cardVerificationNumberRequired;
  }

  public void setCardVerificationNumberRequired(Boolean cardVerificationNumberRequired) {
    this.cardVerificationNumberRequired = cardVerificationNumberRequired;
  }

  public PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover payerAuthenticationEnabled(Boolean payerAuthenticationEnabled) {
    this.payerAuthenticationEnabled = payerAuthenticationEnabled;
    return this;
  }

   /**
   * Get payerAuthenticationEnabled
   * @return payerAuthenticationEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean getPayerAuthenticationEnabled() {
    return payerAuthenticationEnabled;
  }

  public void setPayerAuthenticationEnabled(Boolean payerAuthenticationEnabled) {
    this.payerAuthenticationEnabled = payerAuthenticationEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover = (PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover) o;
    return Objects.equals(this.cardVerificationNumberSupported, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.cardVerificationNumberSupported) &&
        Objects.equals(this.cardVerificationNumberDisplay, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.cardVerificationNumberDisplay) &&
        Objects.equals(this.payerAuthenticationSupported, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.payerAuthenticationSupported) &&
        Objects.equals(this.supportedCurrencies, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.supportedCurrencies) &&
        Objects.equals(this.method, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.method) &&
        Objects.equals(this.cardVerificationNumberRequired, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.cardVerificationNumberRequired) &&
        Objects.equals(this.payerAuthenticationEnabled, paymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.payerAuthenticationEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardVerificationNumberSupported, cardVerificationNumberDisplay, payerAuthenticationSupported, supportedCurrencies, method, cardVerificationNumberRequired, payerAuthenticationEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover {\n");
    
    sb.append("    cardVerificationNumberSupported: ").append(toIndentedString(cardVerificationNumberSupported)).append("\n");
    sb.append("    cardVerificationNumberDisplay: ").append(toIndentedString(cardVerificationNumberDisplay)).append("\n");
    sb.append("    payerAuthenticationSupported: ").append(toIndentedString(payerAuthenticationSupported)).append("\n");
    sb.append("    supportedCurrencies: ").append(toIndentedString(supportedCurrencies)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    cardVerificationNumberRequired: ").append(toIndentedString(cardVerificationNumberRequired)).append("\n");
    sb.append("    payerAuthenticationEnabled: ").append(toIndentedString(payerAuthenticationEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


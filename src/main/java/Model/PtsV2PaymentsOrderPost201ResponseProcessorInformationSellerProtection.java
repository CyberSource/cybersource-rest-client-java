/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection
 */

public class PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection {
  @SerializedName("eligibilty")
  private String eligibilty = null;

  @SerializedName("type")
  private String type = null;

  public PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection eligibilty(String eligibilty) {
    this.eligibilty = eligibilty;
    return this;
  }

   /**
   * The level of seller protection in force for the transaction. Possible values: - &#x60;ELIGIBLE&#x60; - &#x60;PARTIALLY_ELIGIBLE&#x60; - &#x60;INELIGIBLE&#x60; 
   * @return eligibilty
  **/
  @ApiModelProperty(value = "The level of seller protection in force for the transaction. Possible values: - `ELIGIBLE` - `PARTIALLY_ELIGIBLE` - `INELIGIBLE` ")
  public String getEligibilty() {
    return eligibilty;
  }

  public void setEligibilty(String eligibilty) {
    this.eligibilty = eligibilty;
  }

  public PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The kind of seller protection in force for the transaction. This field is returned only when the protection eligibility is set to ELIGIBLE or PARTIALLY_ELIGIBLE. Possible values: - &#x60;ITEM_NOT_RECEIVED_ELIGIBLE: Sellers are protected against claims for items not received.&#x60; - &#x60;UNAUTHORIZED_PAYMENT_ELIGIBLE: Sellers are protected against claims for unauthorized payments.One or both values can be returned.&#x60; 
   * @return type
  **/
  @ApiModelProperty(value = "The kind of seller protection in force for the transaction. This field is returned only when the protection eligibility is set to ELIGIBLE or PARTIALLY_ELIGIBLE. Possible values: - `ITEM_NOT_RECEIVED_ELIGIBLE: Sellers are protected against claims for items not received.` - `UNAUTHORIZED_PAYMENT_ELIGIBLE: Sellers are protected against claims for unauthorized payments.One or both values can be returned.` ")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection ptsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection = (PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection) o;
    return Objects.equals(this.eligibilty, ptsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection.eligibilty) &&
        Objects.equals(this.type, ptsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eligibilty, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsOrderPost201ResponseProcessorInformationSellerProtection {\n");
    
    if (eligibilty != null) sb.append("    eligibilty: ").append(toIndentedString(eligibilty)).append("\n");
    if (type != null) sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


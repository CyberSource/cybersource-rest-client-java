/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Notificationsubscriptionsv2webhooksProducts;
import Model.Notificationsubscriptionsv2webhooksRetryPolicy;
import Model.Notificationsubscriptionsv2webhooksSecurityPolicy;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InlineResponse2004
 */

public class InlineResponse2004 {
  @SerializedName("webhookId")
  private String webhookId = null;

  @SerializedName("organizationId")
  private String organizationId = null;

  @SerializedName("products")
  private List<Notificationsubscriptionsv2webhooksProducts> products = null;

  @SerializedName("webhookUrl")
  private String webhookUrl = null;

  @SerializedName("healthCheckUrl")
  private String healthCheckUrl = null;

  @SerializedName("status")
  private String status = "INACTIVE";

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("retryPolicy")
  private Notificationsubscriptionsv2webhooksRetryPolicy retryPolicy = null;

  @SerializedName("securityPolicy")
  private Notificationsubscriptionsv2webhooksSecurityPolicy securityPolicy = null;

  @SerializedName("createdOn")
  private String createdOn = null;

  @SerializedName("notificationScope")
  private String notificationScope = "DESCENDANTS";

  public InlineResponse2004 webhookId(String webhookId) {
    this.webhookId = webhookId;
    return this;
  }

   /**
   * Webhook Id. This is generated by the server.
   * @return webhookId
  **/
  @ApiModelProperty(value = "Webhook Id. This is generated by the server.")
  public String getWebhookId() {
    return webhookId;
  }

  public void setWebhookId(String webhookId) {
    this.webhookId = webhookId;
  }

  public InlineResponse2004 organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Organization ID.
   * @return organizationId
  **/
  @ApiModelProperty(value = "Organization ID.")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public InlineResponse2004 products(List<Notificationsubscriptionsv2webhooksProducts> products) {
    this.products = products;
    return this;
  }

  public InlineResponse2004 addProductsItem(Notificationsubscriptionsv2webhooksProducts productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<Notificationsubscriptionsv2webhooksProducts>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/
  @ApiModelProperty(value = "")
  public List<Notificationsubscriptionsv2webhooksProducts> getProducts() {
    return products;
  }

  public void setProducts(List<Notificationsubscriptionsv2webhooksProducts> products) {
    this.products = products;
  }

  public InlineResponse2004 webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * The client&#39;s endpoint (URL) to receive webhooks.
   * @return webhookUrl
  **/
  @ApiModelProperty(value = "The client's endpoint (URL) to receive webhooks.")
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public InlineResponse2004 healthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
    return this;
  }

   /**
   * The client&#39;s health check endpoint (URL).
   * @return healthCheckUrl
  **/
  @ApiModelProperty(value = "The client's health check endpoint (URL).")
  public String getHealthCheckUrl() {
    return healthCheckUrl;
  }

  public void setHealthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
  }

  public InlineResponse2004 status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Webhook status.
   * @return status
  **/
  @ApiModelProperty(value = "Webhook status.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public InlineResponse2004 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Client friendly webhook name.
   * @return name
  **/
  @ApiModelProperty(value = "Client friendly webhook name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse2004 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Client friendly webhook description.
   * @return description
  **/
  @ApiModelProperty(value = "Client friendly webhook description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InlineResponse2004 retryPolicy(Notificationsubscriptionsv2webhooksRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
    return this;
  }

   /**
   * Get retryPolicy
   * @return retryPolicy
  **/
  @ApiModelProperty(value = "")
  public Notificationsubscriptionsv2webhooksRetryPolicy getRetryPolicy() {
    return retryPolicy;
  }

  public void setRetryPolicy(Notificationsubscriptionsv2webhooksRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
  }

  public InlineResponse2004 securityPolicy(Notificationsubscriptionsv2webhooksSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
    return this;
  }

   /**
   * Get securityPolicy
   * @return securityPolicy
  **/
  @ApiModelProperty(value = "")
  public Notificationsubscriptionsv2webhooksSecurityPolicy getSecurityPolicy() {
    return securityPolicy;
  }

  public void setSecurityPolicy(Notificationsubscriptionsv2webhooksSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
  }

  public InlineResponse2004 createdOn(String createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Date on which webhook was created/registered.
   * @return createdOn
  **/
  @ApiModelProperty(value = "Date on which webhook was created/registered.")
  public String getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(String createdOn) {
    this.createdOn = createdOn;
  }

  public InlineResponse2004 notificationScope(String notificationScope) {
    this.notificationScope = notificationScope;
    return this;
  }

   /**
   * The webhook scope. 1. SELF The Webhook is used to deliver webhooks for only this Organization (or Merchant). 2. DESCENDANTS The Webhook is used to deliver webhooks for this Organization and its children. This field is optional.    Possible values: - SELF - DESCENDANTS
   * @return notificationScope
  **/
  @ApiModelProperty(value = "The webhook scope. 1. SELF The Webhook is used to deliver webhooks for only this Organization (or Merchant). 2. DESCENDANTS The Webhook is used to deliver webhooks for this Organization and its children. This field is optional.    Possible values: - SELF - DESCENDANTS")
  public String getNotificationScope() {
    return notificationScope;
  }

  public void setNotificationScope(String notificationScope) {
    this.notificationScope = notificationScope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004 inlineResponse2004 = (InlineResponse2004) o;
    return Objects.equals(this.webhookId, inlineResponse2004.webhookId) &&
        Objects.equals(this.organizationId, inlineResponse2004.organizationId) &&
        Objects.equals(this.products, inlineResponse2004.products) &&
        Objects.equals(this.webhookUrl, inlineResponse2004.webhookUrl) &&
        Objects.equals(this.healthCheckUrl, inlineResponse2004.healthCheckUrl) &&
        Objects.equals(this.status, inlineResponse2004.status) &&
        Objects.equals(this.name, inlineResponse2004.name) &&
        Objects.equals(this.description, inlineResponse2004.description) &&
        Objects.equals(this.retryPolicy, inlineResponse2004.retryPolicy) &&
        Objects.equals(this.securityPolicy, inlineResponse2004.securityPolicy) &&
        Objects.equals(this.createdOn, inlineResponse2004.createdOn) &&
        Objects.equals(this.notificationScope, inlineResponse2004.notificationScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhookId, organizationId, products, webhookUrl, healthCheckUrl, status, name, description, retryPolicy, securityPolicy, createdOn, notificationScope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004 {\n");
    
    if (webhookId != null) sb.append("    webhookId: ").append(toIndentedString(webhookId)).append("\n");
    if (organizationId != null) sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    if (products != null) sb.append("    products: ").append(toIndentedString(products)).append("\n");
    if (webhookUrl != null) sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    if (healthCheckUrl != null) sb.append("    healthCheckUrl: ").append(toIndentedString(healthCheckUrl)).append("\n");
    if (status != null) sb.append("    status: ").append(toIndentedString(status)).append("\n");
    if (name != null) sb.append("    name: ").append(toIndentedString(name)).append("\n");
    if (description != null) sb.append("    description: ").append(toIndentedString(description)).append("\n");
    if (retryPolicy != null) sb.append("    retryPolicy: ").append(toIndentedString(retryPolicy)).append("\n");
    if (securityPolicy != null) sb.append("    securityPolicy: ").append(toIndentedString(securityPolicy)).append("\n");
    if (createdOn != null) sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    if (notificationScope != null) sb.append("    notificationScope: ").append(toIndentedString(notificationScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


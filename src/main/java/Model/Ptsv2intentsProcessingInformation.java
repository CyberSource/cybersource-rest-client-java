/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Ptsv2intentsProcessingInformationAuthorizationOptions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Ptsv2intentsProcessingInformation
 */

public class Ptsv2intentsProcessingInformation {
  @SerializedName("processingInstruction")
  private String processingInstruction = null;

  @SerializedName("authorizationOptions")
  private Ptsv2intentsProcessingInformationAuthorizationOptions authorizationOptions = null;

  @SerializedName("actionList")
  private List<String> actionList = null;

  public Ptsv2intentsProcessingInformation processingInstruction(String processingInstruction) {
    this.processingInstruction = processingInstruction;
    return this;
  }

   /**
   * The instruction to process an order. - default value: &#39;NO_INSTRUCTION&#39; - &#39;ORDER_SAVED_EXPLICITLY&#39; 
   * @return processingInstruction
  **/
  @ApiModelProperty(value = "The instruction to process an order. - default value: 'NO_INSTRUCTION' - 'ORDER_SAVED_EXPLICITLY' ")
  public String getProcessingInstruction() {
    return processingInstruction;
  }

  public void setProcessingInstruction(String processingInstruction) {
    this.processingInstruction = processingInstruction;
  }

  public Ptsv2intentsProcessingInformation authorizationOptions(Ptsv2intentsProcessingInformationAuthorizationOptions authorizationOptions) {
    this.authorizationOptions = authorizationOptions;
    return this;
  }

   /**
   * Get authorizationOptions
   * @return authorizationOptions
  **/
  @ApiModelProperty(value = "")
  public Ptsv2intentsProcessingInformationAuthorizationOptions getAuthorizationOptions() {
    return authorizationOptions;
  }

  public void setAuthorizationOptions(Ptsv2intentsProcessingInformationAuthorizationOptions authorizationOptions) {
    this.authorizationOptions = authorizationOptions;
  }

  public Ptsv2intentsProcessingInformation actionList(List<String> actionList) {
    this.actionList = actionList;
    return this;
  }

  public Ptsv2intentsProcessingInformation addActionListItem(String actionListItem) {
    if (this.actionList == null) {
      this.actionList = new ArrayList<String>();
    }
    this.actionList.add(actionListItem);
    return this;
  }

   /**
   * Array of actions (one or more) to be included in the order to invoke bundled services along with order. Possible values: - &#x60;AP_ORDER&#x60;: Use this when Alternative Payment Order service is requested. 
   * @return actionList
  **/
  @ApiModelProperty(value = "Array of actions (one or more) to be included in the order to invoke bundled services along with order. Possible values: - `AP_ORDER`: Use this when Alternative Payment Order service is requested. ")
  public List<String> getActionList() {
    return actionList;
  }

  public void setActionList(List<String> actionList) {
    this.actionList = actionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2intentsProcessingInformation ptsv2intentsProcessingInformation = (Ptsv2intentsProcessingInformation) o;
    return Objects.equals(this.processingInstruction, ptsv2intentsProcessingInformation.processingInstruction) &&
        Objects.equals(this.authorizationOptions, ptsv2intentsProcessingInformation.authorizationOptions) &&
        Objects.equals(this.actionList, ptsv2intentsProcessingInformation.actionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processingInstruction, authorizationOptions, actionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2intentsProcessingInformation {\n");
    
    if (processingInstruction != null) sb.append("    processingInstruction: ").append(toIndentedString(processingInstruction)).append("\n");
    if (authorizationOptions != null) sb.append("    authorizationOptions: ").append(toIndentedString(authorizationOptions)).append("\n");
    if (actionList != null) sb.append("    actionList: ").append(toIndentedString(actionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


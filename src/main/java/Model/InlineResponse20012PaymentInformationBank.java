/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.InlineResponse20012PaymentInformationBankAccount;
import Model.InlineResponse20012PaymentInformationBankMandate;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse20012PaymentInformationBank
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-31T18:13:53.731+05:30")
public class InlineResponse20012PaymentInformationBank {
  @SerializedName("routingNumber")
  private String routingNumber = null;

  @SerializedName("branchCode")
  private String branchCode = null;

  @SerializedName("swiftCode")
  private String swiftCode = null;

  @SerializedName("bankCode")
  private String bankCode = null;

  @SerializedName("iban")
  private String iban = null;

  @SerializedName("account")
  private InlineResponse20012PaymentInformationBankAccount account = null;

  @SerializedName("mandate")
  private InlineResponse20012PaymentInformationBankMandate mandate = null;

  public InlineResponse20012PaymentInformationBank routingNumber(String routingNumber) {
    this.routingNumber = routingNumber;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return routingNumber
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getRoutingNumber() {
    return routingNumber;
  }

  public void setRoutingNumber(String routingNumber) {
    this.routingNumber = routingNumber;
  }

  public InlineResponse20012PaymentInformationBank branchCode(String branchCode) {
    this.branchCode = branchCode;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return branchCode
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getBranchCode() {
    return branchCode;
  }

  public void setBranchCode(String branchCode) {
    this.branchCode = branchCode;
  }

  public InlineResponse20012PaymentInformationBank swiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return swiftCode
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getSwiftCode() {
    return swiftCode;
  }

  public void setSwiftCode(String swiftCode) {
    this.swiftCode = swiftCode;
  }

  public InlineResponse20012PaymentInformationBank bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return bankCode
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getBankCode() {
    return bankCode;
  }

  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  public InlineResponse20012PaymentInformationBank iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * The description for this field is not available.
   * @return iban
  **/
  @ApiModelProperty(value = "The description for this field is not available.")
  public String getIban() {
    return iban;
  }

  public void setIban(String iban) {
    this.iban = iban;
  }

  public InlineResponse20012PaymentInformationBank account(InlineResponse20012PaymentInformationBankAccount account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public InlineResponse20012PaymentInformationBankAccount getAccount() {
    return account;
  }

  public void setAccount(InlineResponse20012PaymentInformationBankAccount account) {
    this.account = account;
  }

  public InlineResponse20012PaymentInformationBank mandate(InlineResponse20012PaymentInformationBankMandate mandate) {
    this.mandate = mandate;
    return this;
  }

   /**
   * Get mandate
   * @return mandate
  **/
  @ApiModelProperty(value = "")
  public InlineResponse20012PaymentInformationBankMandate getMandate() {
    return mandate;
  }

  public void setMandate(InlineResponse20012PaymentInformationBankMandate mandate) {
    this.mandate = mandate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20012PaymentInformationBank inlineResponse20012PaymentInformationBank = (InlineResponse20012PaymentInformationBank) o;
    return Objects.equals(this.routingNumber, inlineResponse20012PaymentInformationBank.routingNumber) &&
        Objects.equals(this.branchCode, inlineResponse20012PaymentInformationBank.branchCode) &&
        Objects.equals(this.swiftCode, inlineResponse20012PaymentInformationBank.swiftCode) &&
        Objects.equals(this.bankCode, inlineResponse20012PaymentInformationBank.bankCode) &&
        Objects.equals(this.iban, inlineResponse20012PaymentInformationBank.iban) &&
        Objects.equals(this.account, inlineResponse20012PaymentInformationBank.account) &&
        Objects.equals(this.mandate, inlineResponse20012PaymentInformationBank.mandate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(routingNumber, branchCode, swiftCode, bankCode, iban, account, mandate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20012PaymentInformationBank {\n");
    
    sb.append("    routingNumber: ").append(toIndentedString(routingNumber)).append("\n");
    sb.append("    branchCode: ").append(toIndentedString(branchCode)).append("\n");
    sb.append("    swiftCode: ").append(toIndentedString(swiftCode)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    mandate: ").append(toIndentedString(mandate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


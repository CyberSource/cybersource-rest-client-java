/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2018OrderInformationCurrencyConversionOffer
 */

public class InlineResponse2018OrderInformationCurrencyConversionOffer {
  @SerializedName("originalAmount")
  private String originalAmount = null;

  @SerializedName("originalCurrency")
  private String originalCurrency = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("exchangeRate")
  private String exchangeRate = null;

  @SerializedName("exchangeRateInverted")
  private Boolean exchangeRateInverted = null;

  @SerializedName("marginRate")
  private String marginRate = null;

  @SerializedName("rateSource")
  private String rateSource = null;

  @SerializedName("exchangeRateTimeUtc")
  private String exchangeRateTimeUtc = null;

  @SerializedName("exchangeRateExpirationTimeUtc")
  private String exchangeRateExpirationTimeUtc = null;

  @SerializedName("rateId")
  private String rateId = null;

  public InlineResponse2018OrderInformationCurrencyConversionOffer originalAmount(String originalAmount) {
    this.originalAmount = originalAmount;
    return this;
  }

   /**
   * The amount of the sale in the merchant&#39;s currency.  For DCC this should be the same value as the request. For MCP will be 1 major unit of the merchant&#39;s base currency. 
   * @return originalAmount
  **/
  @ApiModelProperty(value = "The amount of the sale in the merchant's currency.  For DCC this should be the same value as the request. For MCP will be 1 major unit of the merchant's base currency. ")
  public String getOriginalAmount() {
    return originalAmount;
  }

  public void setOriginalAmount(String originalAmount) {
    this.originalAmount = originalAmount;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer originalCurrency(String originalCurrency) {
    this.originalCurrency = originalCurrency;
    return this;
  }

   /**
   * Currency of the transaction in the merchant&#39;s currency.  For DCC this should be the same value as the request.  For MCP will be the merchant&#39;s base currency as configured on the currency conversion provider&#39;s system. Use three-character alphabetic [ISO 4271 Currency Codes.](https://developer.cybersource.com/docs/cybs/en-us/currency-codes/reference/all/na/currency-codes/currency-codes.html) 
   * @return originalCurrency
  **/
  @ApiModelProperty(value = "Currency of the transaction in the merchant's currency.  For DCC this should be the same value as the request.  For MCP will be the merchant's base currency as configured on the currency conversion provider's system. Use three-character alphabetic [ISO 4271 Currency Codes.](https://developer.cybersource.com/docs/cybs/en-us/currency-codes/reference/all/na/currency-codes/currency-codes.html) ")
  public String getOriginalCurrency() {
    return originalCurrency;
  }

  public void setOriginalCurrency(String originalCurrency) {
    this.originalCurrency = originalCurrency;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The offer amount, calculated using the originalAmount and the exchangeRate. For DCC this is the amount in the card issuer&#39;s currency. 
   * @return amount
  **/
  @ApiModelProperty(value = "The offer amount, calculated using the originalAmount and the exchangeRate. For DCC this is the amount in the card issuer's currency. ")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency of the offer. For DCC this is the card&#39;s issuers currency. Use three-character alphabetic  [ISO 4271 Currency Codes.](https://developer.cybersource.com/docs/cybs/en-us/currency-codes/reference/all/na/currency-codes/currency-codes.html) 
   * @return currency
  **/
  @ApiModelProperty(value = "Currency of the offer. For DCC this is the card's issuers currency. Use three-character alphabetic  [ISO 4271 Currency Codes.](https://developer.cybersource.com/docs/cybs/en-us/currency-codes/reference/all/na/currency-codes/currency-codes.html) ")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer exchangeRate(String exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * The exchange rate of the offer from 1 major unit of the sale currency including margin. This will be printed on the receipt. For example, if a USD consumer is purchasing in EUR, this field should return the amount of 1 EUR in USD including mark-up. The receipt will contain the following: &#x60;EUR 1.00 &#x3D; USD 1.09998900010999&#x60; - where 1.09998900010999 is the value returned in this field. 
   * @return exchangeRate
  **/
  @ApiModelProperty(value = "The exchange rate of the offer from 1 major unit of the sale currency including margin. This will be printed on the receipt. For example, if a USD consumer is purchasing in EUR, this field should return the amount of 1 EUR in USD including mark-up. The receipt will contain the following: `EUR 1.00 = USD 1.09998900010999` - where 1.09998900010999 is the value returned in this field. ")
  public String getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(String exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer exchangeRateInverted(Boolean exchangeRateInverted) {
    this.exchangeRateInverted = exchangeRateInverted;
    return this;
  }

   /**
   * An inverted exchange rate is the base currency amount divided by the converted currency amount. Ex. If a USD customer is purchasing in EUR, this field should return the value of USD divided by EUR. 
   * @return exchangeRateInverted
  **/
  @ApiModelProperty(example = "true", value = "An inverted exchange rate is the base currency amount divided by the converted currency amount. Ex. If a USD customer is purchasing in EUR, this field should return the value of USD divided by EUR. ")
  public Boolean ExchangeRateInverted() {
    return exchangeRateInverted;
  }

  public void setExchangeRateInverted(Boolean exchangeRateInverted) {
    this.exchangeRateInverted = exchangeRateInverted;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer marginRate(String marginRate) {
    this.marginRate = marginRate;
    return this;
  }

   /**
   * The margin between the offer exchange rate and wholesale rates, i.e. the mark up. Expressed as a percentage of 100, e.g. 3.75 
   * @return marginRate
  **/
  @ApiModelProperty(value = "The margin between the offer exchange rate and wholesale rates, i.e. the mark up. Expressed as a percentage of 100, e.g. 3.75 ")
  public String getMarginRate() {
    return marginRate;
  }

  public void setMarginRate(String marginRate) {
    this.marginRate = marginRate;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer rateSource(String rateSource) {
    this.rateSource = rateSource;
    return this;
  }

   /**
   * The source of the rate (excluding mark up). Optional field. 
   * @return rateSource
  **/
  @ApiModelProperty(value = "The source of the rate (excluding mark up). Optional field. ")
  public String getRateSource() {
    return rateSource;
  }

  public void setRateSource(String rateSource) {
    this.rateSource = rateSource;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer exchangeRateTimeUtc(String exchangeRateTimeUtc) {
    this.exchangeRateTimeUtc = exchangeRateTimeUtc;
    return this;
  }

   /**
   * The date and time of exchange rate in UTC. Format: &#x60;YYYY-MM-DDThh:mm:ssZ&#x60; **Example** &#x60;2023-05-17T23:47:57Z&#x60; equals May 17, 2023, at 23:47:57 (11:47:57 PM). The &#x60;T&#x60; separates the date and the time. The &#x60;Z&#x60; indicates UTC. 
   * @return exchangeRateTimeUtc
  **/
  @ApiModelProperty(value = "The date and time of exchange rate in UTC. Format: `YYYY-MM-DDThh:mm:ssZ` **Example** `2023-05-17T23:47:57Z` equals May 17, 2023, at 23:47:57 (11:47:57 PM). The `T` separates the date and the time. The `Z` indicates UTC. ")
  public String getExchangeRateTimeUtc() {
    return exchangeRateTimeUtc;
  }

  public void setExchangeRateTimeUtc(String exchangeRateTimeUtc) {
    this.exchangeRateTimeUtc = exchangeRateTimeUtc;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer exchangeRateExpirationTimeUtc(String exchangeRateExpirationTimeUtc) {
    this.exchangeRateExpirationTimeUtc = exchangeRateExpirationTimeUtc;
    return this;
  }

   /**
   * The expiration time of the exchange rate in UTC. Format: &#x60;YYYY-MM-DDThh:mm:ssZ&#x60; 
   * @return exchangeRateExpirationTimeUtc
  **/
  @ApiModelProperty(value = "The expiration time of the exchange rate in UTC. Format: `YYYY-MM-DDThh:mm:ssZ` ")
  public String getExchangeRateExpirationTimeUtc() {
    return exchangeRateExpirationTimeUtc;
  }

  public void setExchangeRateExpirationTimeUtc(String exchangeRateExpirationTimeUtc) {
    this.exchangeRateExpirationTimeUtc = exchangeRateExpirationTimeUtc;
  }

  public InlineResponse2018OrderInformationCurrencyConversionOffer rateId(String rateId) {
    this.rateId = rateId;
    return this;
  }

   /**
   * A unique MCP rate identifier. 
   * @return rateId
  **/
  @ApiModelProperty(value = "A unique MCP rate identifier. ")
  public String getRateId() {
    return rateId;
  }

  public void setRateId(String rateId) {
    this.rateId = rateId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2018OrderInformationCurrencyConversionOffer inlineResponse2018OrderInformationCurrencyConversionOffer = (InlineResponse2018OrderInformationCurrencyConversionOffer) o;
    return Objects.equals(this.originalAmount, inlineResponse2018OrderInformationCurrencyConversionOffer.originalAmount) &&
        Objects.equals(this.originalCurrency, inlineResponse2018OrderInformationCurrencyConversionOffer.originalCurrency) &&
        Objects.equals(this.amount, inlineResponse2018OrderInformationCurrencyConversionOffer.amount) &&
        Objects.equals(this.currency, inlineResponse2018OrderInformationCurrencyConversionOffer.currency) &&
        Objects.equals(this.exchangeRate, inlineResponse2018OrderInformationCurrencyConversionOffer.exchangeRate) &&
        Objects.equals(this.exchangeRateInverted, inlineResponse2018OrderInformationCurrencyConversionOffer.exchangeRateInverted) &&
        Objects.equals(this.marginRate, inlineResponse2018OrderInformationCurrencyConversionOffer.marginRate) &&
        Objects.equals(this.rateSource, inlineResponse2018OrderInformationCurrencyConversionOffer.rateSource) &&
        Objects.equals(this.exchangeRateTimeUtc, inlineResponse2018OrderInformationCurrencyConversionOffer.exchangeRateTimeUtc) &&
        Objects.equals(this.exchangeRateExpirationTimeUtc, inlineResponse2018OrderInformationCurrencyConversionOffer.exchangeRateExpirationTimeUtc) &&
        Objects.equals(this.rateId, inlineResponse2018OrderInformationCurrencyConversionOffer.rateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originalAmount, originalCurrency, amount, currency, exchangeRate, exchangeRateInverted, marginRate, rateSource, exchangeRateTimeUtc, exchangeRateExpirationTimeUtc, rateId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2018OrderInformationCurrencyConversionOffer {\n");
    
    if (originalAmount != null) sb.append("    originalAmount: ").append(toIndentedString(originalAmount)).append("\n");
    if (originalCurrency != null) sb.append("    originalCurrency: ").append(toIndentedString(originalCurrency)).append("\n");
    if (amount != null) sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    if (currency != null) sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    if (exchangeRate != null) sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    if (exchangeRateInverted != null) sb.append("    exchangeRateInverted: ").append(toIndentedString(exchangeRateInverted)).append("\n");
    if (marginRate != null) sb.append("    marginRate: ").append(toIndentedString(marginRate)).append("\n");
    if (rateSource != null) sb.append("    rateSource: ").append(toIndentedString(rateSource)).append("\n");
    if (exchangeRateTimeUtc != null) sb.append("    exchangeRateTimeUtc: ").append(toIndentedString(exchangeRateTimeUtc)).append("\n");
    if (exchangeRateExpirationTimeUtc != null) sb.append("    exchangeRateExpirationTimeUtc: ").append(toIndentedString(exchangeRateExpirationTimeUtc)).append("\n");
    if (rateId != null) sb.append("    rateId: ").append(toIndentedString(rateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


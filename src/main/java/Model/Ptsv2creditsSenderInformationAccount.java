/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Ptsv2creditsSenderInformationAccount
 */

public class Ptsv2creditsSenderInformationAccount {
  @SerializedName("number")
  private String number = null;

  @SerializedName("fundsSource")
  private String fundsSource = null;

  public Ptsv2creditsSenderInformationAccount number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Account number of the sender of the funds. For Gaming Payment of Winnings transactions this is the merchant account number. * Required for Mastercard Payment of Winnings (POW) transactions. * Must contain only ASCII characters in range 32-122. * Must not be greater than 50 characters. * Required for POW on Barclays. 
   * @return number
  **/
  @ApiModelProperty(value = "Account number of the sender of the funds. For Gaming Payment of Winnings transactions this is the merchant account number. * Required for Mastercard Payment of Winnings (POW) transactions. * Must contain only ASCII characters in range 32-122. * Must not be greater than 50 characters. * Required for POW on Barclays. ")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Ptsv2creditsSenderInformationAccount fundsSource(String fundsSource) {
    this.fundsSource = fundsSource;
    return this;
  }

   /**
   * Source of funds for the sender. For Gaming Payment of Winnings transactions this is the merchant account type. * Required for Mastercard Payment of Winnings (POW) transactions. * Valid values:   * 00 - Other   * 01 - RTN + Bank Account   * 02 - IBAN   * 03 - Card Account   * 04 - Email   * 05 - PhoneNumber   * 06 - Bank account number (BAN) + Bank Identification Code (BIC)   * 07 - Wallet ID   * 08 - Social Network ID 
   * @return fundsSource
  **/
  @ApiModelProperty(value = "Source of funds for the sender. For Gaming Payment of Winnings transactions this is the merchant account type. * Required for Mastercard Payment of Winnings (POW) transactions. * Valid values:   * 00 - Other   * 01 - RTN + Bank Account   * 02 - IBAN   * 03 - Card Account   * 04 - Email   * 05 - PhoneNumber   * 06 - Bank account number (BAN) + Bank Identification Code (BIC)   * 07 - Wallet ID   * 08 - Social Network ID ")
  public String getFundsSource() {
    return fundsSource;
  }

  public void setFundsSource(String fundsSource) {
    this.fundsSource = fundsSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ptsv2creditsSenderInformationAccount ptsv2creditsSenderInformationAccount = (Ptsv2creditsSenderInformationAccount) o;
    return Objects.equals(this.number, ptsv2creditsSenderInformationAccount.number) &&
        Objects.equals(this.fundsSource, ptsv2creditsSenderInformationAccount.fundsSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, fundsSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ptsv2creditsSenderInformationAccount {\n");
    
    if (number != null) sb.append("    number: ").append(toIndentedString(number)).append("\n");
    if (fundsSource != null) sb.append("    fundsSource: ").append(toIndentedString(fundsSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


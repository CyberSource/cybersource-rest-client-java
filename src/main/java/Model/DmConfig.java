/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.DmConfigOrganization;
import Model.DmConfigPortfolioControls;
import Model.DmConfigProcessingOptions;
import Model.DmConfigThirdparty;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DmConfig
 */

public class DmConfig {
  @SerializedName("processingOptions")
  private DmConfigProcessingOptions processingOptions = null;

  @SerializedName("organization")
  private DmConfigOrganization organization = null;

  @SerializedName("portfolioControls")
  private DmConfigPortfolioControls portfolioControls = null;

  @SerializedName("thirdparty")
  private DmConfigThirdparty thirdparty = null;

  public DmConfig processingOptions(DmConfigProcessingOptions processingOptions) {
    this.processingOptions = processingOptions;
    return this;
  }

   /**
   * Get processingOptions
   * @return processingOptions
  **/
  @ApiModelProperty(value = "")
  public DmConfigProcessingOptions getProcessingOptions() {
    return processingOptions;
  }

  public void setProcessingOptions(DmConfigProcessingOptions processingOptions) {
    this.processingOptions = processingOptions;
  }

  public DmConfig organization(DmConfigOrganization organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(value = "")
  public DmConfigOrganization getOrganization() {
    return organization;
  }

  public void setOrganization(DmConfigOrganization organization) {
    this.organization = organization;
  }

  public DmConfig portfolioControls(DmConfigPortfolioControls portfolioControls) {
    this.portfolioControls = portfolioControls;
    return this;
  }

   /**
   * Get portfolioControls
   * @return portfolioControls
  **/
  @ApiModelProperty(value = "")
  public DmConfigPortfolioControls getPortfolioControls() {
    return portfolioControls;
  }

  public void setPortfolioControls(DmConfigPortfolioControls portfolioControls) {
    this.portfolioControls = portfolioControls;
  }

  public DmConfig thirdparty(DmConfigThirdparty thirdparty) {
    this.thirdparty = thirdparty;
    return this;
  }

   /**
   * Get thirdparty
   * @return thirdparty
  **/
  @ApiModelProperty(value = "")
  public DmConfigThirdparty getThirdparty() {
    return thirdparty;
  }

  public void setThirdparty(DmConfigThirdparty thirdparty) {
    this.thirdparty = thirdparty;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DmConfig dmConfig = (DmConfig) o;
    return Objects.equals(this.processingOptions, dmConfig.processingOptions) &&
        Objects.equals(this.organization, dmConfig.organization) &&
        Objects.equals(this.portfolioControls, dmConfig.portfolioControls) &&
        Objects.equals(this.thirdparty, dmConfig.thirdparty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processingOptions, organization, portfolioControls, thirdparty);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DmConfig {\n");
    
    sb.append("    processingOptions: ").append(toIndentedString(processingOptions)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    portfolioControls: ").append(toIndentedString(portfolioControls)).append("\n");
    sb.append("    thirdparty: ").append(toIndentedString(thirdparty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


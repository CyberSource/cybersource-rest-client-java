/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.InlineResponse2014Payloads;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2014
 */

public class InlineResponse2014 {
  @SerializedName("eventDate")
  private String eventDate = null;

  @SerializedName("eventType")
  private String eventType = null;

  @SerializedName("organizationId")
  private String organizationId = null;

  @SerializedName("payloads")
  private InlineResponse2014Payloads payloads = null;

  @SerializedName("productId")
  private String productId = null;

  @SerializedName("requestType")
  private String requestType = null;

  @SerializedName("retryNumber")
  private Integer retryNumber = null;

  @SerializedName("transactionTraceId")
  private String transactionTraceId = null;

  @SerializedName("webhookId")
  private String webhookId = null;

  public InlineResponse2014 eventDate(String eventDate) {
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Date that the webhook was delivered
   * @return eventDate
  **/
  @ApiModelProperty(value = "Date that the webhook was delivered")
  public String getEventDate() {
    return eventDate;
  }

  public void setEventDate(String eventDate) {
    this.eventDate = eventDate;
  }

  public InlineResponse2014 eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * The event name the webhook was delivered for
   * @return eventType
  **/
  @ApiModelProperty(value = "The event name the webhook was delivered for")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public InlineResponse2014 organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * The Organization Identifier.
   * @return organizationId
  **/
  @ApiModelProperty(value = "The Organization Identifier.")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public InlineResponse2014 payloads(InlineResponse2014Payloads payloads) {
    this.payloads = payloads;
    return this;
  }

   /**
   * Get payloads
   * @return payloads
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2014Payloads getPayloads() {
    return payloads;
  }

  public void setPayloads(InlineResponse2014Payloads payloads) {
    this.payloads = payloads;
  }

  public InlineResponse2014 productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The product the webhook was delivered for
   * @return productId
  **/
  @ApiModelProperty(value = "The product the webhook was delivered for")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public InlineResponse2014 requestType(String requestType) {
    this.requestType = requestType;
    return this;
  }

   /**
   * Identifies the the type of request
   * @return requestType
  **/
  @ApiModelProperty(value = "Identifies the the type of request")
  public String getRequestType() {
    return requestType;
  }

  public void setRequestType(String requestType) {
    this.requestType = requestType;
  }

  public InlineResponse2014 retryNumber(Integer retryNumber) {
    this.retryNumber = retryNumber;
    return this;
  }

   /**
   * The number of retry attempts for a given webhook
   * @return retryNumber
  **/
  @ApiModelProperty(value = "The number of retry attempts for a given webhook")
  public Integer getRetryNumber() {
    return retryNumber;
  }

  public void setRetryNumber(Integer retryNumber) {
    this.retryNumber = retryNumber;
  }

  public InlineResponse2014 transactionTraceId(String transactionTraceId) {
    this.transactionTraceId = transactionTraceId;
    return this;
  }

   /**
   * The identifier for the webhook
   * @return transactionTraceId
  **/
  @ApiModelProperty(value = "The identifier for the webhook")
  public String getTransactionTraceId() {
    return transactionTraceId;
  }

  public void setTransactionTraceId(String transactionTraceId) {
    this.transactionTraceId = transactionTraceId;
  }

  public InlineResponse2014 webhookId(String webhookId) {
    this.webhookId = webhookId;
    return this;
  }

   /**
   * The identifier of the subscription
   * @return webhookId
  **/
  @ApiModelProperty(value = "The identifier of the subscription")
  public String getWebhookId() {
    return webhookId;
  }

  public void setWebhookId(String webhookId) {
    this.webhookId = webhookId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2014 inlineResponse2014 = (InlineResponse2014) o;
    return Objects.equals(this.eventDate, inlineResponse2014.eventDate) &&
        Objects.equals(this.eventType, inlineResponse2014.eventType) &&
        Objects.equals(this.organizationId, inlineResponse2014.organizationId) &&
        Objects.equals(this.payloads, inlineResponse2014.payloads) &&
        Objects.equals(this.productId, inlineResponse2014.productId) &&
        Objects.equals(this.requestType, inlineResponse2014.requestType) &&
        Objects.equals(this.retryNumber, inlineResponse2014.retryNumber) &&
        Objects.equals(this.transactionTraceId, inlineResponse2014.transactionTraceId) &&
        Objects.equals(this.webhookId, inlineResponse2014.webhookId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventDate, eventType, organizationId, payloads, productId, requestType, retryNumber, transactionTraceId, webhookId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2014 {\n");
    
    if (eventDate != null) sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    if (eventType != null) sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    if (organizationId != null) sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    if (payloads != null) sb.append("    payloads: ").append(toIndentedString(payloads)).append("\n");
    if (productId != null) sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    if (requestType != null) sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    if (retryNumber != null) sb.append("    retryNumber: ").append(toIndentedString(retryNumber)).append("\n");
    if (transactionTraceId != null) sb.append("    transactionTraceId: ").append(toIndentedString(transactionTraceId)).append("\n");
    if (webhookId != null) sb.append("    webhookId: ").append(toIndentedString(webhookId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.InlineResponse2013SetupsPaymentsCardProcessingConfigurationStatus;
import Model.InlineResponse2013SetupsPaymentsCardProcessingSubscriptionStatus;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2013SetupsPaymentsCardProcessing
 */

public class InlineResponse2013SetupsPaymentsCardProcessing {
  @SerializedName("subscriptionStatus")
  private InlineResponse2013SetupsPaymentsCardProcessingSubscriptionStatus subscriptionStatus = null;

  @SerializedName("configurationStatus")
  private InlineResponse2013SetupsPaymentsCardProcessingConfigurationStatus configurationStatus = null;

  public InlineResponse2013SetupsPaymentsCardProcessing subscriptionStatus(InlineResponse2013SetupsPaymentsCardProcessingSubscriptionStatus subscriptionStatus) {
    this.subscriptionStatus = subscriptionStatus;
    return this;
  }

   /**
   * Get subscriptionStatus
   * @return subscriptionStatus
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2013SetupsPaymentsCardProcessingSubscriptionStatus getSubscriptionStatus() {
    return subscriptionStatus;
  }

  public void setSubscriptionStatus(InlineResponse2013SetupsPaymentsCardProcessingSubscriptionStatus subscriptionStatus) {
    this.subscriptionStatus = subscriptionStatus;
  }

  public InlineResponse2013SetupsPaymentsCardProcessing configurationStatus(InlineResponse2013SetupsPaymentsCardProcessingConfigurationStatus configurationStatus) {
    this.configurationStatus = configurationStatus;
    return this;
  }

   /**
   * Get configurationStatus
   * @return configurationStatus
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2013SetupsPaymentsCardProcessingConfigurationStatus getConfigurationStatus() {
    return configurationStatus;
  }

  public void setConfigurationStatus(InlineResponse2013SetupsPaymentsCardProcessingConfigurationStatus configurationStatus) {
    this.configurationStatus = configurationStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2013SetupsPaymentsCardProcessing inlineResponse2013SetupsPaymentsCardProcessing = (InlineResponse2013SetupsPaymentsCardProcessing) o;
    return Objects.equals(this.subscriptionStatus, inlineResponse2013SetupsPaymentsCardProcessing.subscriptionStatus) &&
        Objects.equals(this.configurationStatus, inlineResponse2013SetupsPaymentsCardProcessing.configurationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionStatus, configurationStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2013SetupsPaymentsCardProcessing {\n");
    
    if (subscriptionStatus != null) sb.append("    subscriptionStatus: ").append(toIndentedString(subscriptionStatus)).append("\n");
    if (configurationStatus != null) sb.append("    configurationStatus: ").append(toIndentedString(configurationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


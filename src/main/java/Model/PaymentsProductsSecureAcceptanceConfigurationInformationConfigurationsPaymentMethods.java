/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods
 */

public class PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods {
  /**
   * Gets or Sets enabledPaymentMethods
   */
  @JsonAdapter(EnabledPaymentMethodsEnum.Adapter.class)
  public enum EnabledPaymentMethodsEnum {
    CARD("CARD"),
    
    ECHECK("ECHECK"),
    
    VISACHECKOUT("VISACHECKOUT"),
    
    PAYPAL("PAYPAL");

    private String value;

    EnabledPaymentMethodsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EnabledPaymentMethodsEnum fromValue(String text) {
      for (EnabledPaymentMethodsEnum b : EnabledPaymentMethodsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EnabledPaymentMethodsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnabledPaymentMethodsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EnabledPaymentMethodsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EnabledPaymentMethodsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("enabledPaymentMethods")
  private List<EnabledPaymentMethodsEnum> enabledPaymentMethods = null;

  public PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods enabledPaymentMethods(List<EnabledPaymentMethodsEnum> enabledPaymentMethods) {
    this.enabledPaymentMethods = enabledPaymentMethods;
    return this;
  }

  public PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods addEnabledPaymentMethodsItem(EnabledPaymentMethodsEnum enabledPaymentMethodsItem) {
    if (this.enabledPaymentMethods == null) {
      this.enabledPaymentMethods = new ArrayList<EnabledPaymentMethodsEnum>();
    }
    this.enabledPaymentMethods.add(enabledPaymentMethodsItem);
    return this;
  }

   /**
   * Get enabledPaymentMethods
   * @return enabledPaymentMethods
  **/
  @ApiModelProperty(value = "")
  public List<EnabledPaymentMethodsEnum> getEnabledPaymentMethods() {
    return enabledPaymentMethods;
  }

  public void setEnabledPaymentMethods(List<EnabledPaymentMethodsEnum> enabledPaymentMethods) {
    this.enabledPaymentMethods = enabledPaymentMethods;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods paymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods = (PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods) o;
    return Objects.equals(this.enabledPaymentMethods, paymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods.enabledPaymentMethods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabledPaymentMethods);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsProductsSecureAcceptanceConfigurationInformationConfigurationsPaymentMethods {\n");
    
    sb.append("    enabledPaymentMethods: ").append(toIndentedString(enabledPaymentMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.PtsV2PaymentsPost201ResponseWatchlistScreeningInformationWatchList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PtsV2PaymentsPost201ResponseWatchlistScreeningInformation
 */

public class PtsV2PaymentsPost201ResponseWatchlistScreeningInformation {
  @SerializedName("ipCountryConfidence")
  private Integer ipCountryConfidence = null;

  @SerializedName("infoCodes")
  private List<String> infoCodes = null;

  @SerializedName("watchList")
  private PtsV2PaymentsPost201ResponseWatchlistScreeningInformationWatchList watchList = null;

  public PtsV2PaymentsPost201ResponseWatchlistScreeningInformation ipCountryConfidence(Integer ipCountryConfidence) {
    this.ipCountryConfidence = ipCountryConfidence;
    return this;
  }

   /**
   * Likelihood that the country associated with the customer&#39;s IP address was identified correctly. Returns a value from 1–100, where 100 indicates the highest likelihood. If the country cannot be determined, the value is –1. 
   * minimum: -1
   * maximum: 100
   * @return ipCountryConfidence
  **/
  @ApiModelProperty(value = "Likelihood that the country associated with the customer's IP address was identified correctly. Returns a value from 1–100, where 100 indicates the highest likelihood. If the country cannot be determined, the value is –1. ")
  public Integer getIpCountryConfidence() {
    return ipCountryConfidence;
  }

  public void setIpCountryConfidence(Integer ipCountryConfidence) {
    this.ipCountryConfidence = ipCountryConfidence;
  }

  public PtsV2PaymentsPost201ResponseWatchlistScreeningInformation infoCodes(List<String> infoCodes) {
    this.infoCodes = infoCodes;
    return this;
  }

  public PtsV2PaymentsPost201ResponseWatchlistScreeningInformation addInfoCodesItem(String infoCodesItem) {
    if (this.infoCodes == null) {
      this.infoCodes = new ArrayList<String>();
    }
    this.infoCodes.add(infoCodesItem);
    return this;
  }

   /**
   * Returned when the Denied Parties List check (first two codes) or the export service (all others) would have declined the transaction. This field can contain one or more of these values: - &#x60;MATCH-DPC&#x60;: Denied Parties List match. - &#x60;UNV-DPC&#x60;: Denied Parties List unavailable. - &#x60;MATCH-BCO&#x60;: Billing country restricted. - &#x60;MATCH-EMCO&#x60;: Email country restricted. - &#x60;MATCH-HCO&#x60;: Host name country restricted. - &#x60;MATCH-IPCO&#x60;: IP country restricted. - &#x60;MATCH-SCO&#x60;: Shipping country restricted. 
   * @return infoCodes
  **/
  @ApiModelProperty(value = "Returned when the Denied Parties List check (first two codes) or the export service (all others) would have declined the transaction. This field can contain one or more of these values: - `MATCH-DPC`: Denied Parties List match. - `UNV-DPC`: Denied Parties List unavailable. - `MATCH-BCO`: Billing country restricted. - `MATCH-EMCO`: Email country restricted. - `MATCH-HCO`: Host name country restricted. - `MATCH-IPCO`: IP country restricted. - `MATCH-SCO`: Shipping country restricted. ")
  public List<String> getInfoCodes() {
    return infoCodes;
  }

  public void setInfoCodes(List<String> infoCodes) {
    this.infoCodes = infoCodes;
  }

  public PtsV2PaymentsPost201ResponseWatchlistScreeningInformation watchList(PtsV2PaymentsPost201ResponseWatchlistScreeningInformationWatchList watchList) {
    this.watchList = watchList;
    return this;
  }

   /**
   * Get watchList
   * @return watchList
  **/
  @ApiModelProperty(value = "")
  public PtsV2PaymentsPost201ResponseWatchlistScreeningInformationWatchList getWatchList() {
    return watchList;
  }

  public void setWatchList(PtsV2PaymentsPost201ResponseWatchlistScreeningInformationWatchList watchList) {
    this.watchList = watchList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtsV2PaymentsPost201ResponseWatchlistScreeningInformation ptsV2PaymentsPost201ResponseWatchlistScreeningInformation = (PtsV2PaymentsPost201ResponseWatchlistScreeningInformation) o;
    return Objects.equals(this.ipCountryConfidence, ptsV2PaymentsPost201ResponseWatchlistScreeningInformation.ipCountryConfidence) &&
        Objects.equals(this.infoCodes, ptsV2PaymentsPost201ResponseWatchlistScreeningInformation.infoCodes) &&
        Objects.equals(this.watchList, ptsV2PaymentsPost201ResponseWatchlistScreeningInformation.watchList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipCountryConfidence, infoCodes, watchList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtsV2PaymentsPost201ResponseWatchlistScreeningInformation {\n");
    
    if (ipCountryConfidence != null) sb.append("    ipCountryConfidence: ").append(toIndentedString(ipCountryConfidence)).append("\n");
    if (infoCodes != null) sb.append("    infoCodes: ").append(toIndentedString(infoCodes)).append("\n");
    if (watchList != null) sb.append("    watchList: ").append(toIndentedString(watchList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


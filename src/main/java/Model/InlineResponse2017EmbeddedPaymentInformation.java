/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.InlineResponse2017EmbeddedPaymentInformationCard;
import Model.InlineResponse2017EmbeddedPaymentInformationPaymentMethod;
import Model.Ptsv2paymentsPaymentInformationCustomer;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2017EmbeddedPaymentInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-31T18:13:53.731+05:30")
public class InlineResponse2017EmbeddedPaymentInformation {
  @SerializedName("paymentMethod")
  private InlineResponse2017EmbeddedPaymentInformationPaymentMethod paymentMethod = null;

  @SerializedName("customer")
  private Ptsv2paymentsPaymentInformationCustomer customer = null;

  @SerializedName("card")
  private InlineResponse2017EmbeddedPaymentInformationCard card = null;

  public InlineResponse2017EmbeddedPaymentInformation paymentMethod(InlineResponse2017EmbeddedPaymentInformationPaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2017EmbeddedPaymentInformationPaymentMethod getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(InlineResponse2017EmbeddedPaymentInformationPaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public InlineResponse2017EmbeddedPaymentInformation customer(Ptsv2paymentsPaymentInformationCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public Ptsv2paymentsPaymentInformationCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(Ptsv2paymentsPaymentInformationCustomer customer) {
    this.customer = customer;
  }

  public InlineResponse2017EmbeddedPaymentInformation card(InlineResponse2017EmbeddedPaymentInformationCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2017EmbeddedPaymentInformationCard getCard() {
    return card;
  }

  public void setCard(InlineResponse2017EmbeddedPaymentInformationCard card) {
    this.card = card;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2017EmbeddedPaymentInformation inlineResponse2017EmbeddedPaymentInformation = (InlineResponse2017EmbeddedPaymentInformation) o;
    return Objects.equals(this.paymentMethod, inlineResponse2017EmbeddedPaymentInformation.paymentMethod) &&
        Objects.equals(this.customer, inlineResponse2017EmbeddedPaymentInformation.customer) &&
        Objects.equals(this.card, inlineResponse2017EmbeddedPaymentInformation.card);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethod, customer, card);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2017EmbeddedPaymentInformation {\n");
    
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


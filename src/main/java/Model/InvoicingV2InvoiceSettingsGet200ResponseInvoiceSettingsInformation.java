/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle;
import Model.InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation
 */

public class InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation {
  @SerializedName("merchantLogo")
  private String merchantLogo = null;

  @SerializedName("merchantDisplayName")
  private String merchantDisplayName = null;

  @SerializedName("customEmailMessage")
  private String customEmailMessage = null;

  @SerializedName("enableReminders")
  private Boolean enableReminders = null;

  @SerializedName("headerStyle")
  private InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle headerStyle = null;

  @SerializedName("deliveryLanguage")
  private String deliveryLanguage = null;

  @SerializedName("defaultCurrencyCode")
  private String defaultCurrencyCode = null;

  @SerializedName("payerAuthentication3DSVersion")
  private Boolean payerAuthentication3DSVersion = false;

  @SerializedName("showVatNumber")
  private Boolean showVatNumber = false;

  @SerializedName("vatRegistrationNumber")
  private String vatRegistrationNumber = null;

  @SerializedName("shipTo")
  private Boolean shipTo = false;

  @SerializedName("phoneNumber")
  private Boolean phoneNumber = false;

  @SerializedName("email")
  private Boolean email = false;

  @SerializedName("enableMerchantEmailNotifications")
  private Boolean enableMerchantEmailNotifications = false;

  @SerializedName("customLabels")
  private List<InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels> customLabels = null;

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation merchantLogo(String merchantLogo) {
    this.merchantLogo = merchantLogo;
    return this;
  }

   /**
   * The image file, which must be encoded in Base64 format. Supported file formats are &#x60;png&#x60;, &#x60;jpg&#x60;, and &#x60;gif&#x60;. The image file size restriction is 1 MB.
   * @return merchantLogo
  **/
  @ApiModelProperty(value = "The image file, which must be encoded in Base64 format. Supported file formats are `png`, `jpg`, and `gif`. The image file size restriction is 1 MB.")
  public String getMerchantLogo() {
    return merchantLogo;
  }

  public void setMerchantLogo(String merchantLogo) {
    this.merchantLogo = merchantLogo;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation merchantDisplayName(String merchantDisplayName) {
    this.merchantDisplayName = merchantDisplayName;
    return this;
  }

   /**
   * The merchant&#39;s display name shown on the invoice.
   * @return merchantDisplayName
  **/
  @ApiModelProperty(value = "The merchant's display name shown on the invoice.")
  public String getMerchantDisplayName() {
    return merchantDisplayName;
  }

  public void setMerchantDisplayName(String merchantDisplayName) {
    this.merchantDisplayName = merchantDisplayName;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation customEmailMessage(String customEmailMessage) {
    this.customEmailMessage = customEmailMessage;
    return this;
  }

   /**
   * The content of the email message that we send to your customers.
   * @return customEmailMessage
  **/
  @ApiModelProperty(value = "The content of the email message that we send to your customers.")
  public String getCustomEmailMessage() {
    return customEmailMessage;
  }

  public void setCustomEmailMessage(String customEmailMessage) {
    this.customEmailMessage = customEmailMessage;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation enableReminders(Boolean enableReminders) {
    this.enableReminders = enableReminders;
    return this;
  }

   /**
   * Whether you would like us to send an auto-generated reminder email to your invoice recipients. Currently, this reminder email is sent five days before the invoice is due and one day after it is past due.
   * @return enableReminders
  **/
  @ApiModelProperty(value = "Whether you would like us to send an auto-generated reminder email to your invoice recipients. Currently, this reminder email is sent five days before the invoice is due and one day after it is past due.")
  public Boolean EnableReminders() {
    return enableReminders;
  }

  public void setEnableReminders(Boolean enableReminders) {
    this.enableReminders = enableReminders;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation headerStyle(InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle headerStyle) {
    this.headerStyle = headerStyle;
    return this;
  }

   /**
   * Get headerStyle
   * @return headerStyle
  **/
  @ApiModelProperty(value = "")
  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle getHeaderStyle() {
    return headerStyle;
  }

  public void setHeaderStyle(InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformationHeaderStyle headerStyle) {
    this.headerStyle = headerStyle;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation deliveryLanguage(String deliveryLanguage) {
    this.deliveryLanguage = deliveryLanguage;
    return this;
  }

   /**
   * The language of the email that we send to your customers. Possible values are &#x60;zh-CN&#x60;, &#x60;zh-TW&#x60;, &#x60;en-US&#x60;, &#x60;fr-FR&#x60;, &#x60;de-DE&#x60;, &#x60;ja-JP&#x60;, &#x60;pt-BR&#x60;, &#x60;ru-RU&#x60; and &#x60;es-419&#x60;.
   * @return deliveryLanguage
  **/
  @ApiModelProperty(value = "The language of the email that we send to your customers. Possible values are `zh-CN`, `zh-TW`, `en-US`, `fr-FR`, `de-DE`, `ja-JP`, `pt-BR`, `ru-RU` and `es-419`.")
  public String getDeliveryLanguage() {
    return deliveryLanguage;
  }

  public void setDeliveryLanguage(String deliveryLanguage) {
    this.deliveryLanguage = deliveryLanguage;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation defaultCurrencyCode(String defaultCurrencyCode) {
    this.defaultCurrencyCode = defaultCurrencyCode;
    return this;
  }

   /**
   * Currency used for the order. Use the three-character [ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)  #### Used by **Authorization** Required field.  **Authorization Reversal** For an authorization reversal (&#x60;reversalInformation&#x60;) or a capture (&#x60;processingOptions.capture&#x60; is set to &#x60;true&#x60;), you must use the same currency that you used in your payment authorization request.  #### PIN Debit Currency for the amount you requested for the PIN debit purchase. This value is returned for partial authorizations. The issuing bank can approve a partial amount if the balance on the debit card is less than the requested transaction amount. For the possible values, see the [ISO Standard Currency Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/currencies.pdf). Returned by PIN debit purchase.  For PIN debit reversal requests, you must use the same currency that was used for the PIN debit purchase or PIN debit credit that you are reversing. For the possible values, see the [ISO Standard Currency Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/currencies.pdf).  Required field for PIN Debit purchase and PIN Debit credit requests. Optional field for PIN Debit reversal requests.  #### GPX This field is optional for reversing an authorization or credit.  #### DCC for First Data Your local currency.  #### Tax Calculation Required for international tax and value added tax only. Optional for U.S. and Canadian taxes. Your local currency. 
   * @return defaultCurrencyCode
  **/
  @ApiModelProperty(value = "Currency used for the order. Use the three-character [ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)  #### Used by **Authorization** Required field.  **Authorization Reversal** For an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your payment authorization request.  #### PIN Debit Currency for the amount you requested for the PIN debit purchase. This value is returned for partial authorizations. The issuing bank can approve a partial amount if the balance on the debit card is less than the requested transaction amount. For the possible values, see the [ISO Standard Currency Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/currencies.pdf). Returned by PIN debit purchase.  For PIN debit reversal requests, you must use the same currency that was used for the PIN debit purchase or PIN debit credit that you are reversing. For the possible values, see the [ISO Standard Currency Codes](https://developer.cybersource.com/library/documentation/sbc/quickref/currencies.pdf).  Required field for PIN Debit purchase and PIN Debit credit requests. Optional field for PIN Debit reversal requests.  #### GPX This field is optional for reversing an authorization or credit.  #### DCC for First Data Your local currency.  #### Tax Calculation Required for international tax and value added tax only. Optional for U.S. and Canadian taxes. Your local currency. ")
  public String getDefaultCurrencyCode() {
    return defaultCurrencyCode;
  }

  public void setDefaultCurrencyCode(String defaultCurrencyCode) {
    this.defaultCurrencyCode = defaultCurrencyCode;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation payerAuthentication3DSVersion(Boolean payerAuthentication3DSVersion) {
    this.payerAuthentication3DSVersion = payerAuthentication3DSVersion;
    return this;
  }

   /**
   * The 3D Secure payer authentication status for a merchant&#39;s invoice payments.
   * @return payerAuthentication3DSVersion
  **/
  @ApiModelProperty(value = "The 3D Secure payer authentication status for a merchant's invoice payments.")
  public Boolean PayerAuthentication3DSVersion() {
    return payerAuthentication3DSVersion;
  }

  public void setPayerAuthentication3DSVersion(Boolean payerAuthentication3DSVersion) {
    this.payerAuthentication3DSVersion = payerAuthentication3DSVersion;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation showVatNumber(Boolean showVatNumber) {
    this.showVatNumber = showVatNumber;
    return this;
  }

   /**
   * Display VAT number on Invoice.
   * @return showVatNumber
  **/
  @ApiModelProperty(value = "Display VAT number on Invoice.")
  public Boolean ShowVatNumber() {
    return showVatNumber;
  }

  public void setShowVatNumber(Boolean showVatNumber) {
    this.showVatNumber = showVatNumber;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation vatRegistrationNumber(String vatRegistrationNumber) {
    this.vatRegistrationNumber = vatRegistrationNumber;
    return this;
  }

   /**
   * Your government-assigned tax identification number.  #### Tax Calculation Required field for value added tax only. Not applicable to U.S. and Canadian taxes.  
   * @return vatRegistrationNumber
  **/
  @ApiModelProperty(value = "Your government-assigned tax identification number.  #### Tax Calculation Required field for value added tax only. Not applicable to U.S. and Canadian taxes.  ")
  public String getVatRegistrationNumber() {
    return vatRegistrationNumber;
  }

  public void setVatRegistrationNumber(String vatRegistrationNumber) {
    this.vatRegistrationNumber = vatRegistrationNumber;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation shipTo(Boolean shipTo) {
    this.shipTo = shipTo;
    return this;
  }

   /**
   * Collect the payers shipping address.
   * @return shipTo
  **/
  @ApiModelProperty(value = "Collect the payers shipping address.")
  public Boolean ShipTo() {
    return shipTo;
  }

  public void setShipTo(Boolean shipTo) {
    this.shipTo = shipTo;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation phoneNumber(Boolean phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Collect the payers phone number.
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "Collect the payers phone number.")
  public Boolean PhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(Boolean phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation email(Boolean email) {
    this.email = email;
    return this;
  }

   /**
   * Collect the payers email address when the email address is not known or confirm it if it is known at the time of invoice creation.
   * @return email
  **/
  @ApiModelProperty(value = "Collect the payers email address when the email address is not known or confirm it if it is known at the time of invoice creation.")
  public Boolean Email() {
    return email;
  }

  public void setEmail(Boolean email) {
    this.email = email;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation enableMerchantEmailNotifications(Boolean enableMerchantEmailNotifications) {
    this.enableMerchantEmailNotifications = enableMerchantEmailNotifications;
    return this;
  }

   /**
   * Whether you would like to receive payment notification for successful transaction
   * @return enableMerchantEmailNotifications
  **/
  @ApiModelProperty(value = "Whether you would like to receive payment notification for successful transaction")
  public Boolean EnableMerchantEmailNotifications() {
    return enableMerchantEmailNotifications;
  }

  public void setEnableMerchantEmailNotifications(Boolean enableMerchantEmailNotifications) {
    this.enableMerchantEmailNotifications = enableMerchantEmailNotifications;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation customLabels(List<InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels> customLabels) {
    this.customLabels = customLabels;
    return this;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation addCustomLabelsItem(InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels customLabelsItem) {
    if (this.customLabels == null) {
      this.customLabels = new ArrayList<InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels>();
    }
    this.customLabels.add(customLabelsItem);
    return this;
  }

   /**
   * A list of custom labels that allows you to override (rename) default field names and control the visibility of specific fields on invoices and items. If the list is empty, the labels will not be overwritten. 
   * @return customLabels
  **/
  @ApiModelProperty(value = "A list of custom labels that allows you to override (rename) default field names and control the visibility of specific fields on invoices and items. If the list is empty, the labels will not be overwritten. ")
  public List<InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels> getCustomLabels() {
    return customLabels;
  }

  public void setCustomLabels(List<InvoicingV2InvoicesPost201ResponseInvoiceInformationCustomLabels> customLabels) {
    this.customLabels = customLabels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation = (InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation) o;
    return Objects.equals(this.merchantLogo, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.merchantLogo) &&
        Objects.equals(this.merchantDisplayName, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.merchantDisplayName) &&
        Objects.equals(this.customEmailMessage, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.customEmailMessage) &&
        Objects.equals(this.enableReminders, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.enableReminders) &&
        Objects.equals(this.headerStyle, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.headerStyle) &&
        Objects.equals(this.deliveryLanguage, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.deliveryLanguage) &&
        Objects.equals(this.defaultCurrencyCode, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.defaultCurrencyCode) &&
        Objects.equals(this.payerAuthentication3DSVersion, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.payerAuthentication3DSVersion) &&
        Objects.equals(this.showVatNumber, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.showVatNumber) &&
        Objects.equals(this.vatRegistrationNumber, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.vatRegistrationNumber) &&
        Objects.equals(this.shipTo, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.shipTo) &&
        Objects.equals(this.phoneNumber, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.phoneNumber) &&
        Objects.equals(this.email, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.email) &&
        Objects.equals(this.enableMerchantEmailNotifications, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.enableMerchantEmailNotifications) &&
        Objects.equals(this.customLabels, invoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation.customLabels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantLogo, merchantDisplayName, customEmailMessage, enableReminders, headerStyle, deliveryLanguage, defaultCurrencyCode, payerAuthentication3DSVersion, showVatNumber, vatRegistrationNumber, shipTo, phoneNumber, email, enableMerchantEmailNotifications, customLabels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoicingV2InvoiceSettingsGet200ResponseInvoiceSettingsInformation {\n");
    
    if (merchantLogo != null) sb.append("    merchantLogo: ").append(toIndentedString(merchantLogo)).append("\n");
    if (merchantDisplayName != null) sb.append("    merchantDisplayName: ").append(toIndentedString(merchantDisplayName)).append("\n");
    if (customEmailMessage != null) sb.append("    customEmailMessage: ").append(toIndentedString(customEmailMessage)).append("\n");
    if (enableReminders != null) sb.append("    enableReminders: ").append(toIndentedString(enableReminders)).append("\n");
    if (headerStyle != null) sb.append("    headerStyle: ").append(toIndentedString(headerStyle)).append("\n");
    if (deliveryLanguage != null) sb.append("    deliveryLanguage: ").append(toIndentedString(deliveryLanguage)).append("\n");
    if (defaultCurrencyCode != null) sb.append("    defaultCurrencyCode: ").append(toIndentedString(defaultCurrencyCode)).append("\n");
    if (payerAuthentication3DSVersion != null) sb.append("    payerAuthentication3DSVersion: ").append(toIndentedString(payerAuthentication3DSVersion)).append("\n");
    if (showVatNumber != null) sb.append("    showVatNumber: ").append(toIndentedString(showVatNumber)).append("\n");
    if (vatRegistrationNumber != null) sb.append("    vatRegistrationNumber: ").append(toIndentedString(vatRegistrationNumber)).append("\n");
    if (shipTo != null) sb.append("    shipTo: ").append(toIndentedString(shipTo)).append("\n");
    if (phoneNumber != null) sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    if (email != null) sb.append("    email: ").append(toIndentedString(email)).append("\n");
    if (enableMerchantEmailNotifications != null) sb.append("    enableMerchantEmailNotifications: ").append(toIndentedString(enableMerchantEmailNotifications)).append("\n");
    if (customLabels != null) sb.append("    customLabels: ").append(toIndentedString(customLabels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Contains processing information, such as the type and collection details.
 */
@ApiModel(description = "Contains processing information, such as the type and collection details.")

public class Iplv2paymentlinksProcessingInformation {
  @SerializedName("linkType")
  private String linkType = null;

  @SerializedName("requestPhone")
  private Boolean requestPhone = false;

  @SerializedName("requestShipping")
  private Boolean requestShipping = false;

  public Iplv2paymentlinksProcessingInformation linkType(String linkType) {
    this.linkType = linkType;
    return this;
  }

   /**
   * linkType defines what type of link you want to create.  Possible Values:   - &#x60;PURCHASE&#x60;   - &#x60;DONATION&#x60; 
   * @return linkType
  **/
  @ApiModelProperty(required = true, value = "linkType defines what type of link you want to create.  Possible Values:   - `PURCHASE`   - `DONATION` ")
  public String getLinkType() {
    return linkType;
  }

  public void setLinkType(String linkType) {
    this.linkType = linkType;
  }

  public Iplv2paymentlinksProcessingInformation requestPhone(Boolean requestPhone) {
    this.requestPhone = requestPhone;
    return this;
  }

   /**
   * Collect the payers phone number during the payment.
   * @return requestPhone
  **/
  @ApiModelProperty(value = "Collect the payers phone number during the payment.")
  public Boolean RequestPhone() {
    return requestPhone;
  }

  public void setRequestPhone(Boolean requestPhone) {
    this.requestPhone = requestPhone;
  }

  public Iplv2paymentlinksProcessingInformation requestShipping(Boolean requestShipping) {
    this.requestShipping = requestShipping;
    return this;
  }

   /**
   * Collect the payers shipping address during the payment.
   * @return requestShipping
  **/
  @ApiModelProperty(value = "Collect the payers shipping address during the payment.")
  public Boolean RequestShipping() {
    return requestShipping;
  }

  public void setRequestShipping(Boolean requestShipping) {
    this.requestShipping = requestShipping;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Iplv2paymentlinksProcessingInformation iplv2paymentlinksProcessingInformation = (Iplv2paymentlinksProcessingInformation) o;
    return Objects.equals(this.linkType, iplv2paymentlinksProcessingInformation.linkType) &&
        Objects.equals(this.requestPhone, iplv2paymentlinksProcessingInformation.requestPhone) &&
        Objects.equals(this.requestShipping, iplv2paymentlinksProcessingInformation.requestShipping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkType, requestPhone, requestShipping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Iplv2paymentlinksProcessingInformation {\n");
    
    if (linkType != null) sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    if (requestPhone != null) sb.append("    requestPhone: ").append(toIndentedString(requestPhone)).append("\n");
    if (requestShipping != null) sb.append("    requestShipping: ").append(toIndentedString(requestShipping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


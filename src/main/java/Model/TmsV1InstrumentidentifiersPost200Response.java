/*
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.Tmsv1instrumentidentifiersBankAccount;
import Model.Tmsv1instrumentidentifiersCard;
import Model.Tmsv1instrumentidentifiersLinks;
import Model.Tmsv1instrumentidentifiersMetadata;
import Model.Tmsv1instrumentidentifiersProcessingInformation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TmsV1InstrumentidentifiersPost200Response
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-27T12:49:40.999Z")
public class TmsV1InstrumentidentifiersPost200Response {
  @SerializedName("_links")
  private Tmsv1instrumentidentifiersLinks links = null;

  @SerializedName("id")
  private String id = null;

  /**
   * Describes type of token. For example: customer, paymentInstrument or instrumentIdentifier.
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
  public enum ObjectEnum {
    INSTRUMENTIDENTIFIER("instrumentIdentifier");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String text) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ObjectEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("object")
  private ObjectEnum object = null;

  /**
   * Current state of the token.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("ACTIVE"),
    
    CLOSED("CLOSED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("card")
  private Tmsv1instrumentidentifiersCard card = null;

  @SerializedName("bankAccount")
  private Tmsv1instrumentidentifiersBankAccount bankAccount = null;

  @SerializedName("processingInformation")
  private Tmsv1instrumentidentifiersProcessingInformation processingInformation = null;

  @SerializedName("metadata")
  private Tmsv1instrumentidentifiersMetadata metadata = null;

  public TmsV1InstrumentidentifiersPost200Response links(Tmsv1instrumentidentifiersLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public Tmsv1instrumentidentifiersLinks getLinks() {
    return links;
  }

  public void setLinks(Tmsv1instrumentidentifiersLinks links) {
    this.links = links;
  }

   /**
   * Unique identification number assigned by CyberSource to the submitted request.
   * @return id
  **/
  @ApiModelProperty(example = "1234567890123456800", value = "Unique identification number assigned by CyberSource to the submitted request.")
  public String getId() {
    return id;
  }

   /**
   * Describes type of token. For example: customer, paymentInstrument or instrumentIdentifier.
   * @return object
  **/
  @ApiModelProperty(example = "instrumentIdentifier", value = "Describes type of token. For example: customer, paymentInstrument or instrumentIdentifier.")
  public ObjectEnum getObject() {
    return object;
  }

   /**
   * Current state of the token.
   * @return state
  **/
  @ApiModelProperty(example = "ACTIVE", value = "Current state of the token.")
  public StateEnum getState() {
    return state;
  }

  public TmsV1InstrumentidentifiersPost200Response card(Tmsv1instrumentidentifiersCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public Tmsv1instrumentidentifiersCard getCard() {
    return card;
  }

  public void setCard(Tmsv1instrumentidentifiersCard card) {
    this.card = card;
  }

  public TmsV1InstrumentidentifiersPost200Response bankAccount(Tmsv1instrumentidentifiersBankAccount bankAccount) {
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * Get bankAccount
   * @return bankAccount
  **/
  @ApiModelProperty(value = "")
  public Tmsv1instrumentidentifiersBankAccount getBankAccount() {
    return bankAccount;
  }

  public void setBankAccount(Tmsv1instrumentidentifiersBankAccount bankAccount) {
    this.bankAccount = bankAccount;
  }

  public TmsV1InstrumentidentifiersPost200Response processingInformation(Tmsv1instrumentidentifiersProcessingInformation processingInformation) {
    this.processingInformation = processingInformation;
    return this;
  }

   /**
   * Get processingInformation
   * @return processingInformation
  **/
  @ApiModelProperty(value = "")
  public Tmsv1instrumentidentifiersProcessingInformation getProcessingInformation() {
    return processingInformation;
  }

  public void setProcessingInformation(Tmsv1instrumentidentifiersProcessingInformation processingInformation) {
    this.processingInformation = processingInformation;
  }

  public TmsV1InstrumentidentifiersPost200Response metadata(Tmsv1instrumentidentifiersMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Tmsv1instrumentidentifiersMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(Tmsv1instrumentidentifiersMetadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TmsV1InstrumentidentifiersPost200Response tmsV1InstrumentidentifiersPost200Response = (TmsV1InstrumentidentifiersPost200Response) o;
    return Objects.equals(this.links, tmsV1InstrumentidentifiersPost200Response.links) &&
        Objects.equals(this.id, tmsV1InstrumentidentifiersPost200Response.id) &&
        Objects.equals(this.object, tmsV1InstrumentidentifiersPost200Response.object) &&
        Objects.equals(this.state, tmsV1InstrumentidentifiersPost200Response.state) &&
        Objects.equals(this.card, tmsV1InstrumentidentifiersPost200Response.card) &&
        Objects.equals(this.bankAccount, tmsV1InstrumentidentifiersPost200Response.bankAccount) &&
        Objects.equals(this.processingInformation, tmsV1InstrumentidentifiersPost200Response.processingInformation) &&
        Objects.equals(this.metadata, tmsV1InstrumentidentifiersPost200Response.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, id, object, state, card, bankAccount, processingInformation, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TmsV1InstrumentidentifiersPost200Response {\n");
    
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    processingInformation: ").append(toIndentedString(processingInformation)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


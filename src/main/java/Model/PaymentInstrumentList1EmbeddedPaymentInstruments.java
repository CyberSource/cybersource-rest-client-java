/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.PaymentInstrumentList1EmbeddedEmbedded;
import Model.TmsPaymentInstrumentProcessingInfo;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentBankAccount;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentBillTo;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentBuyerInformation;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentCard;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentInstrumentIdentifier;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentLinks;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentMerchantInformation;
import Model.Tmsv2customersEmbeddedDefaultPaymentInstrumentMetadata;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaymentInstrumentList1EmbeddedPaymentInstruments
 */

public class PaymentInstrumentList1EmbeddedPaymentInstruments {
  @SerializedName("_links")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentLinks links = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("object")
  private String object = null;

  @SerializedName("default")
  private Boolean _default = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("bankAccount")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentBankAccount bankAccount = null;

  @SerializedName("card")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentCard card = null;

  @SerializedName("buyerInformation")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentBuyerInformation buyerInformation = null;

  @SerializedName("billTo")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentBillTo billTo = null;

  @SerializedName("processingInformation")
  private TmsPaymentInstrumentProcessingInfo processingInformation = null;

  @SerializedName("merchantInformation")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentMerchantInformation merchantInformation = null;

  @SerializedName("instrumentIdentifier")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentInstrumentIdentifier instrumentIdentifier = null;

  @SerializedName("metadata")
  private Tmsv2customersEmbeddedDefaultPaymentInstrumentMetadata metadata = null;

  @SerializedName("_embedded")
  private PaymentInstrumentList1EmbeddedEmbedded embedded = null;

  public PaymentInstrumentList1EmbeddedPaymentInstruments links(Tmsv2customersEmbeddedDefaultPaymentInstrumentLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentLinks getLinks() {
    return links;
  }

  public void setLinks(Tmsv2customersEmbeddedDefaultPaymentInstrumentLinks links) {
    this.links = links;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The Id of the Payment Instrument Token.
   * @return id
  **/
  @ApiModelProperty(value = "The Id of the Payment Instrument Token.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * The type.  Possible Values: - paymentInstrument 
   * @return object
  **/
  @ApiModelProperty(example = "paymentInstrument", value = "The type.  Possible Values: - paymentInstrument ")
  public String getObject() {
    return object;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Flag that indicates whether customer payment instrument is the dafault. Possible Values:  - &#x60;true&#x60;: Payment instrument is customer&#39;s default.  - &#x60;false&#x60;: Payment instrument is not customer&#39;s default. 
   * @return _default
  **/
  @ApiModelProperty(value = "Flag that indicates whether customer payment instrument is the dafault. Possible Values:  - `true`: Payment instrument is customer's default.  - `false`: Payment instrument is not customer's default. ")
  public Boolean isDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }

   /**
   * Issuers state for the card number. Possible Values: - ACTIVE - CLOSED : The account has been closed. 
   * @return state
  **/
  @ApiModelProperty(example = "ACTIVE", value = "Issuers state for the card number. Possible Values: - ACTIVE - CLOSED : The account has been closed. ")
  public String getState() {
    return state;
  }

   /**
   * The type of Payment Instrument. Possible Values: - cardHash 
   * @return type
  **/
  @ApiModelProperty(value = "The type of Payment Instrument. Possible Values: - cardHash ")
  public String getType() {
    return type;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments bankAccount(Tmsv2customersEmbeddedDefaultPaymentInstrumentBankAccount bankAccount) {
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * Get bankAccount
   * @return bankAccount
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentBankAccount getBankAccount() {
    return bankAccount;
  }

  public void setBankAccount(Tmsv2customersEmbeddedDefaultPaymentInstrumentBankAccount bankAccount) {
    this.bankAccount = bankAccount;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments card(Tmsv2customersEmbeddedDefaultPaymentInstrumentCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentCard getCard() {
    return card;
  }

  public void setCard(Tmsv2customersEmbeddedDefaultPaymentInstrumentCard card) {
    this.card = card;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments buyerInformation(Tmsv2customersEmbeddedDefaultPaymentInstrumentBuyerInformation buyerInformation) {
    this.buyerInformation = buyerInformation;
    return this;
  }

   /**
   * Get buyerInformation
   * @return buyerInformation
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentBuyerInformation getBuyerInformation() {
    return buyerInformation;
  }

  public void setBuyerInformation(Tmsv2customersEmbeddedDefaultPaymentInstrumentBuyerInformation buyerInformation) {
    this.buyerInformation = buyerInformation;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments billTo(Tmsv2customersEmbeddedDefaultPaymentInstrumentBillTo billTo) {
    this.billTo = billTo;
    return this;
  }

   /**
   * Get billTo
   * @return billTo
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentBillTo getBillTo() {
    return billTo;
  }

  public void setBillTo(Tmsv2customersEmbeddedDefaultPaymentInstrumentBillTo billTo) {
    this.billTo = billTo;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments processingInformation(TmsPaymentInstrumentProcessingInfo processingInformation) {
    this.processingInformation = processingInformation;
    return this;
  }

   /**
   * Get processingInformation
   * @return processingInformation
  **/
  @ApiModelProperty(value = "")
  public TmsPaymentInstrumentProcessingInfo getProcessingInformation() {
    return processingInformation;
  }

  public void setProcessingInformation(TmsPaymentInstrumentProcessingInfo processingInformation) {
    this.processingInformation = processingInformation;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments merchantInformation(Tmsv2customersEmbeddedDefaultPaymentInstrumentMerchantInformation merchantInformation) {
    this.merchantInformation = merchantInformation;
    return this;
  }

   /**
   * Get merchantInformation
   * @return merchantInformation
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentMerchantInformation getMerchantInformation() {
    return merchantInformation;
  }

  public void setMerchantInformation(Tmsv2customersEmbeddedDefaultPaymentInstrumentMerchantInformation merchantInformation) {
    this.merchantInformation = merchantInformation;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments instrumentIdentifier(Tmsv2customersEmbeddedDefaultPaymentInstrumentInstrumentIdentifier instrumentIdentifier) {
    this.instrumentIdentifier = instrumentIdentifier;
    return this;
  }

   /**
   * Get instrumentIdentifier
   * @return instrumentIdentifier
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentInstrumentIdentifier getInstrumentIdentifier() {
    return instrumentIdentifier;
  }

  public void setInstrumentIdentifier(Tmsv2customersEmbeddedDefaultPaymentInstrumentInstrumentIdentifier instrumentIdentifier) {
    this.instrumentIdentifier = instrumentIdentifier;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments metadata(Tmsv2customersEmbeddedDefaultPaymentInstrumentMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Tmsv2customersEmbeddedDefaultPaymentInstrumentMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(Tmsv2customersEmbeddedDefaultPaymentInstrumentMetadata metadata) {
    this.metadata = metadata;
  }

  public PaymentInstrumentList1EmbeddedPaymentInstruments embedded(PaymentInstrumentList1EmbeddedEmbedded embedded) {
    this.embedded = embedded;
    return this;
  }

   /**
   * Get embedded
   * @return embedded
  **/
  @ApiModelProperty(value = "")
  public PaymentInstrumentList1EmbeddedEmbedded getEmbedded() {
    return embedded;
  }

  public void setEmbedded(PaymentInstrumentList1EmbeddedEmbedded embedded) {
    this.embedded = embedded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentInstrumentList1EmbeddedPaymentInstruments paymentInstrumentList1EmbeddedPaymentInstruments = (PaymentInstrumentList1EmbeddedPaymentInstruments) o;
    return Objects.equals(this.links, paymentInstrumentList1EmbeddedPaymentInstruments.links) &&
        Objects.equals(this.id, paymentInstrumentList1EmbeddedPaymentInstruments.id) &&
        Objects.equals(this.object, paymentInstrumentList1EmbeddedPaymentInstruments.object) &&
        Objects.equals(this._default, paymentInstrumentList1EmbeddedPaymentInstruments._default) &&
        Objects.equals(this.state, paymentInstrumentList1EmbeddedPaymentInstruments.state) &&
        Objects.equals(this.type, paymentInstrumentList1EmbeddedPaymentInstruments.type) &&
        Objects.equals(this.bankAccount, paymentInstrumentList1EmbeddedPaymentInstruments.bankAccount) &&
        Objects.equals(this.card, paymentInstrumentList1EmbeddedPaymentInstruments.card) &&
        Objects.equals(this.buyerInformation, paymentInstrumentList1EmbeddedPaymentInstruments.buyerInformation) &&
        Objects.equals(this.billTo, paymentInstrumentList1EmbeddedPaymentInstruments.billTo) &&
        Objects.equals(this.processingInformation, paymentInstrumentList1EmbeddedPaymentInstruments.processingInformation) &&
        Objects.equals(this.merchantInformation, paymentInstrumentList1EmbeddedPaymentInstruments.merchantInformation) &&
        Objects.equals(this.instrumentIdentifier, paymentInstrumentList1EmbeddedPaymentInstruments.instrumentIdentifier) &&
        Objects.equals(this.metadata, paymentInstrumentList1EmbeddedPaymentInstruments.metadata) &&
        Objects.equals(this.embedded, paymentInstrumentList1EmbeddedPaymentInstruments.embedded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, id, object, _default, state, type, bankAccount, card, buyerInformation, billTo, processingInformation, merchantInformation, instrumentIdentifier, metadata, embedded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentInstrumentList1EmbeddedPaymentInstruments {\n");
    
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    buyerInformation: ").append(toIndentedString(buyerInformation)).append("\n");
    sb.append("    billTo: ").append(toIndentedString(billTo)).append("\n");
    sb.append("    processingInformation: ").append(toIndentedString(processingInformation)).append("\n");
    sb.append("    merchantInformation: ").append(toIndentedString(merchantInformation)).append("\n");
    sb.append("    instrumentIdentifier: ").append(toIndentedString(instrumentIdentifier)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    embedded: ").append(toIndentedString(embedded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


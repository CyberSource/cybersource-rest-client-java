/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.InvoicingV2InvoiceSettingsGet200ResponseMerchantInformationAddressDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation
 */

public class InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation {
  @SerializedName("name")
  private String name = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("addressDetails")
  private InvoicingV2InvoiceSettingsGet200ResponseMerchantInformationAddressDetails addressDetails = null;

  public InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @ApiModelProperty(value = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation addressDetails(InvoicingV2InvoiceSettingsGet200ResponseMerchantInformationAddressDetails addressDetails) {
    this.addressDetails = addressDetails;
    return this;
  }

   /**
   * Get addressDetails
   * @return addressDetails
  **/
  @ApiModelProperty(value = "")
  public InvoicingV2InvoiceSettingsGet200ResponseMerchantInformationAddressDetails getAddressDetails() {
    return addressDetails;
  }

  public void setAddressDetails(InvoicingV2InvoiceSettingsGet200ResponseMerchantInformationAddressDetails addressDetails) {
    this.addressDetails = addressDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation invoicingV2InvoiceSettingsGet200ResponseMerchantInformation = (InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation) o;
    return Objects.equals(this.name, invoicingV2InvoiceSettingsGet200ResponseMerchantInformation.name) &&
        Objects.equals(this.phone, invoicingV2InvoiceSettingsGet200ResponseMerchantInformation.phone) &&
        Objects.equals(this.addressDetails, invoicingV2InvoiceSettingsGet200ResponseMerchantInformation.addressDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, phone, addressDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoicingV2InvoiceSettingsGet200ResponseMerchantInformation {\n");
    
    if (name != null) sb.append("    name: ").append(toIndentedString(name)).append("\n");
    if (phone != null) sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    if (addressDetails != null) sb.append("    addressDetails: ").append(toIndentedString(addressDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


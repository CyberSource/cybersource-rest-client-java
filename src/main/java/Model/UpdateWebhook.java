/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import Model.Notificationsubscriptionsv1webhooksNotificationScope;
import Model.Notificationsubscriptionsv1webhooksRetryPolicy;
import Model.Notificationsubscriptionsv1webhooksSecurityPolicy;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * UpdateWebhook
 */

public class UpdateWebhook {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("organizationId")
  private String organizationId = null;

  @SerializedName("productId")
  private String productId = null;

  @SerializedName("eventTypes")
  private List<String> eventTypes = null;

  @SerializedName("webhookUrl")
  private String webhookUrl = null;

  @SerializedName("healthCheckUrl")
  private String healthCheckUrl = null;

  @SerializedName("status")
  private String status = "INACTIVE";

  @SerializedName("notificationScope")
  private Notificationsubscriptionsv1webhooksNotificationScope notificationScope = null;

  @SerializedName("retryPolicy")
  private Notificationsubscriptionsv1webhooksRetryPolicy retryPolicy = null;

  @SerializedName("securityPolicy")
  private Notificationsubscriptionsv1webhooksSecurityPolicy securityPolicy = null;

  @SerializedName("additionalAttributes")
  private List<Map<String, String>> additionalAttributes = null;

  public UpdateWebhook name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Client friendly webhook name.
   * @return name
  **/
  @ApiModelProperty(value = "Client friendly webhook name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateWebhook description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Client friendly webhook description.\\
   * @return description
  **/
  @ApiModelProperty(value = "Client friendly webhook description.\\")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateWebhook organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Organization Id.
   * @return organizationId
  **/
  @ApiModelProperty(value = "Organization Id.")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public UpdateWebhook productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The product you are receiving a webhook for.
   * @return productId
  **/
  @ApiModelProperty(value = "The product you are receiving a webhook for.")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public UpdateWebhook eventTypes(List<String> eventTypes) {
    this.eventTypes = eventTypes;
    return this;
  }

  public UpdateWebhook addEventTypesItem(String eventTypesItem) {
    if (this.eventTypes == null) {
      this.eventTypes = new ArrayList<String>();
    }
    this.eventTypes.add(eventTypesItem);
    return this;
  }

   /**
   * Array of the different events for a given product id.
   * @return eventTypes
  **/
  @ApiModelProperty(value = "Array of the different events for a given product id.")
  public List<String> getEventTypes() {
    return eventTypes;
  }

  public void setEventTypes(List<String> eventTypes) {
    this.eventTypes = eventTypes;
  }

  public UpdateWebhook webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * The client&#39;s endpoint (URL) to receive webhooks.
   * @return webhookUrl
  **/
  @ApiModelProperty(value = "The client's endpoint (URL) to receive webhooks.")
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public UpdateWebhook healthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
    return this;
  }

   /**
   * The client&#39;s health check endpoint (URL). This should be as close as possible to the actual webhookUrl.
   * @return healthCheckUrl
  **/
  @ApiModelProperty(value = "The client's health check endpoint (URL). This should be as close as possible to the actual webhookUrl.")
  public String getHealthCheckUrl() {
    return healthCheckUrl;
  }

  public void setHealthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
  }

  public UpdateWebhook status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Webhook status.
   * @return status
  **/
  @ApiModelProperty(value = "Webhook status.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public UpdateWebhook notificationScope(Notificationsubscriptionsv1webhooksNotificationScope notificationScope) {
    this.notificationScope = notificationScope;
    return this;
  }

   /**
   * Get notificationScope
   * @return notificationScope
  **/
  @ApiModelProperty(value = "")
  public Notificationsubscriptionsv1webhooksNotificationScope getNotificationScope() {
    return notificationScope;
  }

  public void setNotificationScope(Notificationsubscriptionsv1webhooksNotificationScope notificationScope) {
    this.notificationScope = notificationScope;
  }

  public UpdateWebhook retryPolicy(Notificationsubscriptionsv1webhooksRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
    return this;
  }

   /**
   * Get retryPolicy
   * @return retryPolicy
  **/
  @ApiModelProperty(value = "")
  public Notificationsubscriptionsv1webhooksRetryPolicy getRetryPolicy() {
    return retryPolicy;
  }

  public void setRetryPolicy(Notificationsubscriptionsv1webhooksRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
  }

  public UpdateWebhook securityPolicy(Notificationsubscriptionsv1webhooksSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
    return this;
  }

   /**
   * Get securityPolicy
   * @return securityPolicy
  **/
  @ApiModelProperty(value = "")
  public Notificationsubscriptionsv1webhooksSecurityPolicy getSecurityPolicy() {
    return securityPolicy;
  }

  public void setSecurityPolicy(Notificationsubscriptionsv1webhooksSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
  }

  public UpdateWebhook additionalAttributes(List<Map<String, String>> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
    return this;
  }

  public UpdateWebhook addAdditionalAttributesItem(Map<String, String> additionalAttributesItem) {
    if (this.additionalAttributes == null) {
      this.additionalAttributes = new ArrayList<Map<String, String>>();
    }
    this.additionalAttributes.add(additionalAttributesItem);
    return this;
  }

   /**
   * Additional, free form configuration data.
   * @return additionalAttributes
  **/
  @ApiModelProperty(value = "Additional, free form configuration data.")
  public List<Map<String, String>> getAdditionalAttributes() {
    return additionalAttributes;
  }

  public void setAdditionalAttributes(List<Map<String, String>> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWebhook updateWebhook = (UpdateWebhook) o;
    return Objects.equals(this.name, updateWebhook.name) &&
        Objects.equals(this.description, updateWebhook.description) &&
        Objects.equals(this.organizationId, updateWebhook.organizationId) &&
        Objects.equals(this.productId, updateWebhook.productId) &&
        Objects.equals(this.eventTypes, updateWebhook.eventTypes) &&
        Objects.equals(this.webhookUrl, updateWebhook.webhookUrl) &&
        Objects.equals(this.healthCheckUrl, updateWebhook.healthCheckUrl) &&
        Objects.equals(this.status, updateWebhook.status) &&
        Objects.equals(this.notificationScope, updateWebhook.notificationScope) &&
        Objects.equals(this.retryPolicy, updateWebhook.retryPolicy) &&
        Objects.equals(this.securityPolicy, updateWebhook.securityPolicy) &&
        Objects.equals(this.additionalAttributes, updateWebhook.additionalAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, organizationId, productId, eventTypes, webhookUrl, healthCheckUrl, status, notificationScope, retryPolicy, securityPolicy, additionalAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWebhook {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    eventTypes: ").append(toIndentedString(eventTypes)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    healthCheckUrl: ").append(toIndentedString(healthCheckUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    notificationScope: ").append(toIndentedString(notificationScope)).append("\n");
    sb.append("    retryPolicy: ").append(toIndentedString(retryPolicy)).append("\n");
    sb.append("    securityPolicy: ").append(toIndentedString(securityPolicy)).append("\n");
    sb.append("    additionalAttributes: ").append(toIndentedString(additionalAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.Notificationsubscriptionsv2webhooksProducts;
import Model.Notificationsubscriptionsv2webhooksSecurityPolicy;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * UpdateWebhook
 */

public class UpdateWebhook {
  @SerializedName("name")
  private String name = null;

  @SerializedName("organizationId")
  private String organizationId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("products")
  private List<Notificationsubscriptionsv2webhooksProducts> products = null;

  @SerializedName("webhookUrl")
  private String webhookUrl = null;

  @SerializedName("healthCheckUrl")
  private String healthCheckUrl = null;

  @SerializedName("securityPolicy")
  private Notificationsubscriptionsv2webhooksSecurityPolicy securityPolicy = null;

  @SerializedName("additionalAttributes")
  private List<Map<String, String>> additionalAttributes = null;

  public UpdateWebhook name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Client friendly webhook name.
   * @return name
  **/
  @ApiModelProperty(value = "Client friendly webhook name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateWebhook organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Organization Id.
   * @return organizationId
  **/
  @ApiModelProperty(value = "Organization Id.")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public UpdateWebhook description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Client friendly webhook description.
   * @return description
  **/
  @ApiModelProperty(value = "Client friendly webhook description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateWebhook products(List<Notificationsubscriptionsv2webhooksProducts> products) {
    this.products = products;
    return this;
  }

  public UpdateWebhook addProductsItem(Notificationsubscriptionsv2webhooksProducts productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<Notificationsubscriptionsv2webhooksProducts>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/
  @ApiModelProperty(value = "")
  public List<Notificationsubscriptionsv2webhooksProducts> getProducts() {
    return products;
  }

  public void setProducts(List<Notificationsubscriptionsv2webhooksProducts> products) {
    this.products = products;
  }

  public UpdateWebhook webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * The client&#39;s endpoint (URL) to receive webhooks.
   * @return webhookUrl
  **/
  @ApiModelProperty(value = "The client's endpoint (URL) to receive webhooks.")
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public UpdateWebhook healthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
    return this;
  }

   /**
   * The client&#39;s health check endpoint (URL). This should be as close as possible to the actual webhookUrl.
   * @return healthCheckUrl
  **/
  @ApiModelProperty(value = "The client's health check endpoint (URL). This should be as close as possible to the actual webhookUrl.")
  public String getHealthCheckUrl() {
    return healthCheckUrl;
  }

  public void setHealthCheckUrl(String healthCheckUrl) {
    this.healthCheckUrl = healthCheckUrl;
  }

  public UpdateWebhook securityPolicy(Notificationsubscriptionsv2webhooksSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
    return this;
  }

   /**
   * Get securityPolicy
   * @return securityPolicy
  **/
  @ApiModelProperty(value = "")
  public Notificationsubscriptionsv2webhooksSecurityPolicy getSecurityPolicy() {
    return securityPolicy;
  }

  public void setSecurityPolicy(Notificationsubscriptionsv2webhooksSecurityPolicy securityPolicy) {
    this.securityPolicy = securityPolicy;
  }

  public UpdateWebhook additionalAttributes(List<Map<String, String>> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
    return this;
  }

  public UpdateWebhook addAdditionalAttributesItem(Map<String, String> additionalAttributesItem) {
    if (this.additionalAttributes == null) {
      this.additionalAttributes = new ArrayList<Map<String, String>>();
    }
    this.additionalAttributes.add(additionalAttributesItem);
    return this;
  }

   /**
   * Additional, free form configuration data.
   * @return additionalAttributes
  **/
  @ApiModelProperty(value = "Additional, free form configuration data.")
  public List<Map<String, String>> getAdditionalAttributes() {
    return additionalAttributes;
  }

  public void setAdditionalAttributes(List<Map<String, String>> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWebhook updateWebhook = (UpdateWebhook) o;
    return Objects.equals(this.name, updateWebhook.name) &&
        Objects.equals(this.organizationId, updateWebhook.organizationId) &&
        Objects.equals(this.description, updateWebhook.description) &&
        Objects.equals(this.products, updateWebhook.products) &&
        Objects.equals(this.webhookUrl, updateWebhook.webhookUrl) &&
        Objects.equals(this.healthCheckUrl, updateWebhook.healthCheckUrl) &&
        Objects.equals(this.securityPolicy, updateWebhook.securityPolicy) &&
        Objects.equals(this.additionalAttributes, updateWebhook.additionalAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, organizationId, description, products, webhookUrl, healthCheckUrl, securityPolicy, additionalAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWebhook {\n");
    
    if (name != null) sb.append("    name: ").append(toIndentedString(name)).append("\n");
    if (organizationId != null) sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    if (description != null) sb.append("    description: ").append(toIndentedString(description)).append("\n");
    if (products != null) sb.append("    products: ").append(toIndentedString(products)).append("\n");
    if (webhookUrl != null) sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    if (healthCheckUrl != null) sb.append("    healthCheckUrl: ").append(toIndentedString(healthCheckUrl)).append("\n");
    if (securityPolicy != null) sb.append("    securityPolicy: ").append(toIndentedString(securityPolicy)).append("\n");
    if (additionalAttributes != null) sb.append("    additionalAttributes: ").append(toIndentedString(additionalAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


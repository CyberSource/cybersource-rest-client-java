/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.UnderwritingConfigurationOrganizationInformationBusinessInformationAddress1;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.joda.time.LocalDate;

/**
 * UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
 */

public class UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation {
  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("middleName")
  private String middleName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("birthDate")
  private LocalDate birthDate = null;

  @SerializedName("isPrimary")
  private Boolean isPrimary = null;

  @SerializedName("hasSignificantResponsibility")
  private Boolean hasSignificantResponsibility = null;

  @SerializedName("ownerDirector")
  private Boolean ownerDirector = null;

  @SerializedName("nationalId")
  private String nationalId = null;

  @SerializedName("idCountry")
  private String idCountry = null;

  @SerializedName("passportNumber")
  private String passportNumber = null;

  @SerializedName("passportCountry")
  private String passportCountry = null;

  @SerializedName("jobTitle")
  private String jobTitle = null;

  @SerializedName("ownershipPercentage")
  private BigDecimal ownershipPercentage = null;

  @SerializedName("nationality")
  private String nationality = null;

  @SerializedName("dueDiligenceRequired")
  private Boolean dueDiligenceRequired = null;

  @SerializedName("phoneNumberCountryCode")
  private String phoneNumberCountryCode = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("address")
  private UnderwritingConfigurationOrganizationInformationBusinessInformationAddress1 address = null;

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Owner&#39;s first name
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "Owner's first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Owner&#39;s middle name
   * @return middleName
  **/
  @ApiModelProperty(value = "Owner's middle name")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Owner&#39;s last name
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "Owner's last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation birthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Owner&#39;s date of birth. Format: YYYY-MM-DD Example 2016-08-11 equals August 11, 2016
   * @return birthDate
  **/
  @ApiModelProperty(required = true, value = "Owner's date of birth. Format: YYYY-MM-DD Example 2016-08-11 equals August 11, 2016")
  public LocalDate getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation isPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
    return this;
  }

   /**
   * Primary Owner or Non-Primary Owner
   * @return isPrimary
  **/
  @ApiModelProperty(required = true, value = "Primary Owner or Non-Primary Owner")
  public Boolean IsPrimary() {
    return isPrimary;
  }

  public void setIsPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation hasSignificantResponsibility(Boolean hasSignificantResponsibility) {
    this.hasSignificantResponsibility = hasSignificantResponsibility;
    return this;
  }

   /**
   * If not an owner, is the user a Control Person
   * @return hasSignificantResponsibility
  **/
  @ApiModelProperty(required = true, value = "If not an owner, is the user a Control Person")
  public Boolean HasSignificantResponsibility() {
    return hasSignificantResponsibility;
  }

  public void setHasSignificantResponsibility(Boolean hasSignificantResponsibility) {
    this.hasSignificantResponsibility = hasSignificantResponsibility;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation ownerDirector(Boolean ownerDirector) {
    this.ownerDirector = ownerDirector;
    return this;
  }

   /**
   * Is the owner a Director as well?
   * @return ownerDirector
  **/
  @ApiModelProperty(value = "Is the owner a Director as well?")
  public Boolean OwnerDirector() {
    return ownerDirector;
  }

  public void setOwnerDirector(Boolean ownerDirector) {
    this.ownerDirector = ownerDirector;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation nationalId(String nationalId) {
    this.nationalId = nationalId;
    return this;
  }

   /**
   * Identification value from ID document
   * @return nationalId
  **/
  @ApiModelProperty(required = true, value = "Identification value from ID document")
  public String getNationalId() {
    return nationalId;
  }

  public void setNationalId(String nationalId) {
    this.nationalId = nationalId;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation idCountry(String idCountry) {
    this.idCountry = idCountry;
    return this;
  }

   /**
   * Country of the ID document. Two character country code, ISO 3166-1 alpha-2.
   * @return idCountry
  **/
  @ApiModelProperty(value = "Country of the ID document. Two character country code, ISO 3166-1 alpha-2.")
  public String getIdCountry() {
    return idCountry;
  }

  public void setIdCountry(String idCountry) {
    this.idCountry = idCountry;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation passportNumber(String passportNumber) {
    this.passportNumber = passportNumber;
    return this;
  }

   /**
   * Passport Number
   * @return passportNumber
  **/
  @ApiModelProperty(value = "Passport Number")
  public String getPassportNumber() {
    return passportNumber;
  }

  public void setPassportNumber(String passportNumber) {
    this.passportNumber = passportNumber;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation passportCountry(String passportCountry) {
    this.passportCountry = passportCountry;
    return this;
  }

   /**
   * Passport Country. Two character country code, ISO 3166-1 alpha-2.
   * @return passportCountry
  **/
  @ApiModelProperty(value = "Passport Country. Two character country code, ISO 3166-1 alpha-2.")
  public String getPassportCountry() {
    return passportCountry;
  }

  public void setPassportCountry(String passportCountry) {
    this.passportCountry = passportCountry;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Owner&#39;s Job Title
   * @return jobTitle
  **/
  @ApiModelProperty(value = "Owner's Job Title")
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation ownershipPercentage(BigDecimal ownershipPercentage) {
    this.ownershipPercentage = ownershipPercentage;
    return this;
  }

   /**
   * Percentage of the company that owner owns
   * minimum: 1
   * maximum: 100
   * @return ownershipPercentage
  **/
  @ApiModelProperty(required = true, value = "Percentage of the company that owner owns")
  public BigDecimal getOwnershipPercentage() {
    return ownershipPercentage;
  }

  public void setOwnershipPercentage(BigDecimal ownershipPercentage) {
    this.ownershipPercentage = ownershipPercentage;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation nationality(String nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Country of origin for the owner. Two character country code, ISO 3166-1 alpha-2.
   * @return nationality
  **/
  @ApiModelProperty(required = true, value = "Country of origin for the owner. Two character country code, ISO 3166-1 alpha-2.")
  public String getNationality() {
    return nationality;
  }

  public void setNationality(String nationality) {
    this.nationality = nationality;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation dueDiligenceRequired(Boolean dueDiligenceRequired) {
    this.dueDiligenceRequired = dueDiligenceRequired;
    return this;
  }

   /**
   * Indicates if due diligence checks should be run for this owner
   * @return dueDiligenceRequired
  **/
  @ApiModelProperty(required = true, value = "Indicates if due diligence checks should be run for this owner")
  public Boolean DueDiligenceRequired() {
    return dueDiligenceRequired;
  }

  public void setDueDiligenceRequired(Boolean dueDiligenceRequired) {
    this.dueDiligenceRequired = dueDiligenceRequired;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation phoneNumberCountryCode(String phoneNumberCountryCode) {
    this.phoneNumberCountryCode = phoneNumberCountryCode;
    return this;
  }

   /**
   * Phone number country. Two character country code, ISO 3166-1 alpha-2.
   * @return phoneNumberCountryCode
  **/
  @ApiModelProperty(required = true, value = "Phone number country. Two character country code, ISO 3166-1 alpha-2.")
  public String getPhoneNumberCountryCode() {
    return phoneNumberCountryCode;
  }

  public void setPhoneNumberCountryCode(String phoneNumberCountryCode) {
    this.phoneNumberCountryCode = phoneNumberCountryCode;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Owner&#39;s phone number
   * @return phoneNumber
  **/
  @ApiModelProperty(required = true, value = "Owner's phone number")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address for Owner
   * @return email
  **/
  @ApiModelProperty(required = true, value = "Email address for Owner")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation address(UnderwritingConfigurationOrganizationInformationBusinessInformationAddress1 address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public UnderwritingConfigurationOrganizationInformationBusinessInformationAddress1 getAddress() {
    return address;
  }

  public void setAddress(UnderwritingConfigurationOrganizationInformationBusinessInformationAddress1 address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation = (UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation) o;
    return Objects.equals(this.firstName, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.firstName) &&
        Objects.equals(this.middleName, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.middleName) &&
        Objects.equals(this.lastName, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.lastName) &&
        Objects.equals(this.birthDate, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.birthDate) &&
        Objects.equals(this.isPrimary, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.isPrimary) &&
        Objects.equals(this.hasSignificantResponsibility, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.hasSignificantResponsibility) &&
        Objects.equals(this.ownerDirector, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.ownerDirector) &&
        Objects.equals(this.nationalId, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.nationalId) &&
        Objects.equals(this.idCountry, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.idCountry) &&
        Objects.equals(this.passportNumber, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.passportNumber) &&
        Objects.equals(this.passportCountry, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.passportCountry) &&
        Objects.equals(this.jobTitle, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.jobTitle) &&
        Objects.equals(this.ownershipPercentage, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.ownershipPercentage) &&
        Objects.equals(this.nationality, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.nationality) &&
        Objects.equals(this.dueDiligenceRequired, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.dueDiligenceRequired) &&
        Objects.equals(this.phoneNumberCountryCode, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.phoneNumberCountryCode) &&
        Objects.equals(this.phoneNumber, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.phoneNumber) &&
        Objects.equals(this.email, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.email) &&
        Objects.equals(this.address, underwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, middleName, lastName, birthDate, isPrimary, hasSignificantResponsibility, ownerDirector, nationalId, idCountry, passportNumber, passportCountry, jobTitle, ownershipPercentage, nationality, dueDiligenceRequired, phoneNumberCountryCode, phoneNumber, email, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation {\n");
    
    if (firstName != null) sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    if (middleName != null) sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    if (lastName != null) sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    if (birthDate != null) sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    if (isPrimary != null) sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    if (hasSignificantResponsibility != null) sb.append("    hasSignificantResponsibility: ").append(toIndentedString(hasSignificantResponsibility)).append("\n");
    if (ownerDirector != null) sb.append("    ownerDirector: ").append(toIndentedString(ownerDirector)).append("\n");
    if (nationalId != null) sb.append("    nationalId: ").append(toIndentedString(nationalId)).append("\n");
    if (idCountry != null) sb.append("    idCountry: ").append(toIndentedString(idCountry)).append("\n");
    if (passportNumber != null) sb.append("    passportNumber: ").append(toIndentedString(passportNumber)).append("\n");
    if (passportCountry != null) sb.append("    passportCountry: ").append(toIndentedString(passportCountry)).append("\n");
    if (jobTitle != null) sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    if (ownershipPercentage != null) sb.append("    ownershipPercentage: ").append(toIndentedString(ownershipPercentage)).append("\n");
    if (nationality != null) sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    if (dueDiligenceRequired != null) sb.append("    dueDiligenceRequired: ").append(toIndentedString(dueDiligenceRequired)).append("\n");
    if (phoneNumberCountryCode != null) sb.append("    phoneNumberCountryCode: ").append(toIndentedString(phoneNumberCountryCode)).append("\n");
    if (phoneNumber != null) sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    if (email != null) sb.append("    email: ").append(toIndentedString(email)).append("\n");
    if (address != null) sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


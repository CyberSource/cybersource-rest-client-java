/*
 * CyberSource Merged Spec
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package Model;

import java.util.Objects;
import java.util.Arrays;
import Model.PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Processor configuration for the product. 
 */
@ApiModel(description = "Processor configuration for the product. ")

public class PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors {
  @SerializedName("paymentMethods")
  private Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods> paymentMethods = null;

  public PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors paymentMethods(Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods> paymentMethods) {
    this.paymentMethods = paymentMethods;
    return this;
  }

  public PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors putPaymentMethodsItem(String key, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods paymentMethodsItem) {
    if (this.paymentMethods == null) {
      this.paymentMethods = new HashMap<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods>();
    }
    this.paymentMethods.put(key, paymentMethodsItem);
    return this;
  }

   /**
   * Payment methods supported by the processor. The following values are supported: - klarna - CREDIT_CARD - DEBIT_CARD 
   * @return paymentMethods
  **/
  @ApiModelProperty(value = "Payment methods supported by the processor. The following values are supported: - klarna - CREDIT_CARD - DEBIT_CARD ")
  public Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods> getPaymentMethods() {
    return paymentMethods;
  }

  public void setPaymentMethods(Map<String, PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsPaymentMethods> paymentMethods) {
    this.paymentMethods = paymentMethods;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors paymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors = (PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors) o;
    return Objects.equals(this.paymentMethods, paymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors.paymentMethods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethods);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsProductsAlternativePaymentMethodsConfigurationInformationConfigurationsProcessors {\n");
    
    if (paymentMethods != null) sb.append("    paymentMethods: ").append(toIndentedString(paymentMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      // return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

